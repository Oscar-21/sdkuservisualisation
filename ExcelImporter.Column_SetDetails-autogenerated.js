(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "684cfd7c-1c3a-4102-acf3-ad58da853517" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":100,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":700,"y":200};
	endEvent1.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("ExcelImporter.Column");

	var pColumn1 = microflows.MicroflowParameterObject.create(model);
	pColumn1.relativeMiddlePoint = {"x":100,"y":115};
	pColumn1.size = {"width":30,"height":30};
	pColumn1.name = "pColumn";
	pColumn1.variableType = objectType1;   // Note: for this property a default value is defined.

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$pColumn/MappingType";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":190,"y":200};
	exclusiveSplit1.size = {"width":60,"height":40};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.

	var associationRetrieveSource1 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource1.startVariableName = "pColumn";
	associationRetrieveSource1.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectMember");

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = associationRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "Member";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":395,"y":200};
	actionActivity1.size = {"width":130,"height":60};
	actionActivity1.action = retrieveAction1;
	actionActivity1.caption = "Get the selected member";
	actionActivity1.autoGenerateCaption = false;

	var memberChange1 = microflows.MemberChange.create(model);
	memberChange1.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.Details");
	memberChange1.value = "if( $Member != empty ) then \n\t'Attribute: ' + $Member/AttributeName + ', type: ' + $Member/AttributeType\nelse\n\t'Nothing selected'";

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.items.push(memberChange1);
	changeObjectAction1.changeVariableName = "pColumn";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":560,"y":200};
	actionActivity2.size = {"width":90,"height":60};
	actionActivity2.action = changeObjectAction1;
	actionActivity2.caption = "Set the details";
	actionActivity2.autoGenerateCaption = false;

	var associationRetrieveSource2 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource2.startVariableName = "pColumn";
	associationRetrieveSource2.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectMember_Reference");

	var retrieveAction2 = microflows.RetrieveAction.create(model);
	retrieveAction2.retrieveSource = associationRetrieveSource2;   // Note: for this property a default value is defined.
	retrieveAction2.outputVariableName = "ReferenceMember";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":400,"y":295};
	actionActivity3.size = {"width":140,"height":60};
	actionActivity3.action = retrieveAction2;
	actionActivity3.caption = "Get the member from the referenced object";
	actionActivity3.autoGenerateCaption = false;

	var associationRetrieveSource3 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource3.startVariableName = "pColumn";
	associationRetrieveSource3.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectReference");

	var retrieveAction3 = microflows.RetrieveAction.create(model);
	retrieveAction3.retrieveSource = associationRetrieveSource3;   // Note: for this property a default value is defined.
	retrieveAction3.outputVariableName = "Reference";

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":560,"y":295};
	actionActivity4.size = {"width":130,"height":60};
	actionActivity4.action = retrieveAction3;
	actionActivity4.caption = "Get the selected reference";
	actionActivity4.autoGenerateCaption = false;

	var associationRetrieveSource4 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource4.startVariableName = "pColumn";
	associationRetrieveSource4.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectType_Reference");

	var retrieveAction4 = microflows.RetrieveAction.create(model);
	retrieveAction4.retrieveSource = associationRetrieveSource4;   // Note: for this property a default value is defined.
	retrieveAction4.outputVariableName = "ReferenceObjectType";

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":715,"y":295};
	actionActivity5.size = {"width":130,"height":60};
	actionActivity5.action = retrieveAction4;
	actionActivity5.caption = "Get the selected referenced objecttype";
	actionActivity5.autoGenerateCaption = false;

	var memberChange2 = microflows.MemberChange.create(model);
	memberChange2.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.Details");
	memberChange2.value = "'Reference: ' + \n(if $Reference != empty then $Reference/CompleteName else 'nothing selected' )+ \n'/' +\n(if $ReferenceObjectType != empty then $ReferenceObjectType/CompleteName else 'nothing selected' )+ \n'/' +\n(if $ReferenceMember != empty then ($ReferenceMember/AttributeName + ', type: ' + $ReferenceMember/AttributeType) else 'nothing selected' ) ";

	var changeObjectAction2 = microflows.ChangeObjectAction.create(model);
	changeObjectAction2.items.push(memberChange2);
	changeObjectAction2.changeVariableName = "pColumn";

	var actionActivity6 = microflows.ActionActivity.create(model);
	actionActivity6.relativeMiddlePoint = {"x":865,"y":295};
	actionActivity6.size = {"width":90,"height":60};
	actionActivity6.action = changeObjectAction2;
	actionActivity6.caption = "Set the details";
	actionActivity6.autoGenerateCaption = false;

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":975,"y":295};
	endEvent2.size = {"width":20,"height":20};

	var exclusiveMerge1 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge1.relativeMiddlePoint = {"x":190,"y":345};
	exclusiveMerge1.size = {"width":60,"height":40};

	var endEvent3 = microflows.EndEvent.create(model);
	endEvent3.relativeMiddlePoint = {"x":190,"y":410};
	endEvent3.size = {"width":20,"height":20};

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(pColumn1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(actionActivity5);
	microflowObjectCollection1.objects.push(actionActivity6);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(exclusiveMerge1);
	microflowObjectCollection1.objects.push(endEvent3);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "Attribute";

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":15,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":30,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow4.caseValue = noCase3;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "Reference";

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 2;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":0,"height":15};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 1;
	sequenceFlow6.destinationConnectionIndex = 3;
	sequenceFlow6.originBezierVector = {"width":30,"height":0};
	sequenceFlow6.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow6.caseValue = noCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":30,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow7.caseValue = noCase5;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 1;
	sequenceFlow8.destinationConnectionIndex = 3;
	sequenceFlow8.originBezierVector = {"width":30,"height":0};
	sequenceFlow8.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow8.caseValue = noCase6;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 1;
	sequenceFlow9.destinationConnectionIndex = 3;
	sequenceFlow9.originBezierVector = {"width":30,"height":0};
	sequenceFlow9.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow9.caseValue = noCase7;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "(empty)";

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.originConnectionIndex = 2;
	sequenceFlow10.destinationConnectionIndex = 3;
	sequenceFlow10.originBezierVector = {"width":0,"height":15};
	sequenceFlow10.destinationBezierVector = {"width":-35,"height":0};
	sequenceFlow10.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "DoNotUse";

	var sequenceFlow11 = microflows.SequenceFlow.create(model);
	sequenceFlow11.originConnectionIndex = 2;
	sequenceFlow11.destinationConnectionIndex = 1;
	sequenceFlow11.originBezierVector = {"width":0,"height":15};
	sequenceFlow11.destinationBezierVector = {"width":30,"height":0};
	sequenceFlow11.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var noCase8 = microflows.NoCase.create(model);

	var sequenceFlow12 = microflows.SequenceFlow.create(model);
	sequenceFlow12.originConnectionIndex = 2;
	sequenceFlow12.originBezierVector = {"width":0,"height":15};
	sequenceFlow12.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow12.caseValue = noCase8;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "en_GB";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_ZA";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);

	var column_SetDetails1 = microflows.Microflow.createIn(unit);
	column_SetDetails1.name = "Column_SetDetails";
	column_SetDetails1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	column_SetDetails1.flows.push(sequenceFlow1);
	column_SetDetails1.flows.push(sequenceFlow2);
	column_SetDetails1.flows.push(sequenceFlow3);
	column_SetDetails1.flows.push(sequenceFlow4);
	column_SetDetails1.flows.push(sequenceFlow5);
	column_SetDetails1.flows.push(sequenceFlow6);
	column_SetDetails1.flows.push(sequenceFlow7);
	column_SetDetails1.flows.push(sequenceFlow8);
	column_SetDetails1.flows.push(sequenceFlow9);
	column_SetDetails1.flows.push(sequenceFlow10);
	column_SetDetails1.flows.push(sequenceFlow11);
	column_SetDetails1.flows.push(sequenceFlow12);
	column_SetDetails1.microflowReturnType = voidType1;
	column_SetDetails1.applyEntityAccess = true;
	column_SetDetails1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = exclusiveSplit1;

	sequenceFlow2.origin = actionActivity1;
	sequenceFlow2.destination = actionActivity2;

	sequenceFlow3.origin = exclusiveSplit1;
	sequenceFlow3.destination = actionActivity1;

	sequenceFlow4.origin = actionActivity2;
	sequenceFlow4.destination = endEvent1;

	sequenceFlow5.origin = exclusiveSplit1;
	sequenceFlow5.destination = actionActivity3;

	sequenceFlow6.origin = actionActivity3;
	sequenceFlow6.destination = actionActivity4;

	sequenceFlow7.origin = actionActivity4;
	sequenceFlow7.destination = actionActivity5;

	sequenceFlow8.origin = actionActivity5;
	sequenceFlow8.destination = actionActivity6;

	sequenceFlow9.origin = actionActivity6;
	sequenceFlow9.destination = endEvent2;

	sequenceFlow10.origin = exclusiveSplit1;
	sequenceFlow10.destination = exclusiveMerge1;

	sequenceFlow11.origin = exclusiveSplit1;
	sequenceFlow11.destination = exclusiveMerge1;

	sequenceFlow12.origin = exclusiveMerge1;
	sequenceFlow12.destination = endEvent3;

})