(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "5956d239-a148-4d71-ae2f-ee61bef6c3ee" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":15,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":920,"y":200};
	endEvent1.size = {"width":20,"height":20};

	var microflowCall1 = microflows.MicroflowCall.create(model);
	microflowCall1.microflow = model.findMicroflowByQualifiedName("PerformanceTest.SUB_GenerateALotStaffAndTeams");

	var microflowCallAction1 = microflows.MicroflowCallAction.create(model);
	microflowCallAction1.microflowCall = microflowCall1;   // Note: for this property a default value is defined.

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":355,"y":200};
	actionActivity1.size = {"width":140,"height":60};
	actionActivity1.action = microflowCallAction1;
	actionActivity1.caption = "SUB_GenerateALot\r\nStaffAndTeams";
	actionActivity1.autoGenerateCaption = false;

	var microflowCall2 = microflows.MicroflowCall.create(model);
	microflowCall2.microflow = model.findMicroflowByQualifiedName("PerformanceTest.SUB_GenerateALotStaffAndTeams_2");

	var microflowCallAction2 = microflows.MicroflowCallAction.create(model);
	microflowCallAction2.microflowCall = microflowCall2;   // Note: for this property a default value is defined.

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":570,"y":200};
	actionActivity2.size = {"width":140,"height":60};
	actionActivity2.action = microflowCallAction2;
	actionActivity2.caption = "SUB_GenerateALot\r\nStaffAndTeams_2";
	actionActivity2.autoGenerateCaption = false;

	var microflowCall3 = microflows.MicroflowCall.create(model);
	microflowCall3.microflow = model.findMicroflowByQualifiedName("PerformanceTest.SUB_GenerateALotStaffAndTeams_3");

	var microflowCallAction3 = microflows.MicroflowCallAction.create(model);
	microflowCallAction3.microflowCall = microflowCall3;   // Note: for this property a default value is defined.
	microflowCallAction3.outputVariableName = "Variable";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":790,"y":200};
	actionActivity3.size = {"width":140,"height":60};
	actionActivity3.action = microflowCallAction3;
	actionActivity3.caption = "SUB_GenerateALot\r\nStaffAndTeams_3";
	actionActivity3.autoGenerateCaption = false;

	var microflowCall4 = microflows.MicroflowCall.create(model);
	microflowCall4.microflow = model.findMicroflowByQualifiedName("PerformanceTest.SUB_DeleteAllTeamAndStaffData");

	var microflowCallAction4 = microflows.MicroflowCallAction.create(model);
	microflowCallAction4.microflowCall = microflowCall4;   // Note: for this property a default value is defined.

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":165,"y":200};
	actionActivity4.size = {"width":140,"height":60};
	actionActivity4.action = microflowCallAction4;

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(actionActivity4);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":30,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":30,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow4.caseValue = noCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":30,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = noCase5;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);

	var aCT_GenerateALotOfTeamsAndStaff1 = microflows.Microflow.createIn(unit);
	aCT_GenerateALotOfTeamsAndStaff1.name = "ACT_GenerateALotOfTeamsAndStaff";
	aCT_GenerateALotOfTeamsAndStaff1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	aCT_GenerateALotOfTeamsAndStaff1.flows.push(sequenceFlow1);
	aCT_GenerateALotOfTeamsAndStaff1.flows.push(sequenceFlow2);
	aCT_GenerateALotOfTeamsAndStaff1.flows.push(sequenceFlow3);
	aCT_GenerateALotOfTeamsAndStaff1.flows.push(sequenceFlow4);
	aCT_GenerateALotOfTeamsAndStaff1.flows.push(sequenceFlow5);
	aCT_GenerateALotOfTeamsAndStaff1.microflowReturnType = voidType1;
	aCT_GenerateALotOfTeamsAndStaff1.allowedModuleRoles.push(model.findModuleRoleByQualifiedName("PerformanceTest.PerformanceTester"));
	aCT_GenerateALotOfTeamsAndStaff1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity4;

	sequenceFlow2.origin = actionActivity1;
	sequenceFlow2.destination = actionActivity2;

	sequenceFlow3.origin = actionActivity2;
	sequenceFlow3.destination = actionActivity3;

	sequenceFlow4.origin = actionActivity3;
	sequenceFlow4.destination = endEvent1;

	sequenceFlow5.origin = actionActivity4;
	sequenceFlow5.destination = actionActivity1;

})