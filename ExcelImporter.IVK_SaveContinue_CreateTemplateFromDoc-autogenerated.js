(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "785b5b47-d134-4e08-9553-23f99fc940f8" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.refreshInClient = true;
	changeObjectAction1.commit = microflows.CommitEnum.Yes;
	changeObjectAction1.changeVariableName = "Template";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":125,"y":200};
	actionActivity1.size = {"width":100,"height":60};
	actionActivity1.action = changeObjectAction1;
	actionActivity1.caption = "Commit the tempalte";
	actionActivity1.autoGenerateCaption = false;

	var deleteAction1 = microflows.DeleteAction.create(model);
	deleteAction1.deleteVariableName = "TemplateDocument";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":455,"y":200};
	actionActivity2.size = {"width":110,"height":60};
	actionActivity2.action = deleteAction1;
	actionActivity2.caption = "Remove the template document";
	actionActivity2.autoGenerateCaption = false;

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$isValid";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":-545,"y":200};
	exclusiveSplit1.size = {"width":130,"height":70};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "validate template document";

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":-545,"y":365};
	endEvent1.size = {"width":20,"height":20};

	var annotation1 = microflows.Annotation.create(model);
	annotation1.relativeMiddlePoint = {"x":-425,"y":300};
	annotation1.size = {"width":190,"height":70};
	annotation1.caption = "The business rule creates feadback. Just leave the popup as it is.";

	var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition2.expression = "$IsValid";

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":-50,"y":200};
	exclusiveSplit2.size = {"width":80,"height":50};
	exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
	exclusiveSplit2.caption = "Is valid template?";

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":-50,"y":365};
	endEvent2.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("ExcelImporter.TemplateDocument");

	var templateDocument1 = microflows.MicroflowParameterObject.create(model);
	templateDocument1.relativeMiddlePoint = {"x":-860,"y":120};
	templateDocument1.size = {"width":30,"height":30};
	templateDocument1.name = "TemplateDocument";
	templateDocument1.variableType = objectType1;   // Note: for this property a default value is defined.

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":-860,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var microflowCallParameterMapping1 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping1.__parameter.updateWithRawValue("ExcelImporter.Validate_TemplateDocument.TemplateDocument");
	microflowCallParameterMapping1.argument = "$TemplateDocument";

	var microflowCall1 = microflows.MicroflowCall.create(model);
	microflowCall1.microflow = model.findMicroflowByQualifiedName("ExcelImporter.Validate_TemplateDocument");
	microflowCall1.parameterMappings.push(microflowCallParameterMapping1);

	var microflowCallAction1 = microflows.MicroflowCallAction.create(model);
	microflowCallAction1.microflowCall = microflowCall1;   // Note: for this property a default value is defined.
	microflowCallAction1.outputVariableName = "isValid";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":-730,"y":200};
	actionActivity3.size = {"width":160,"height":60};
	actionActivity3.action = microflowCallAction1;

	var basicCodeActionParameterValue1 = microflows.BasicCodeActionParameterValue.create(model);
	basicCodeActionParameterValue1.argument = "$Template";

	var javaActionParameterMapping1 = microflows.JavaActionParameterMapping.create(model);
	javaActionParameterMapping1.parameter = model.findJavaActionParameterByQualifiedName("ExcelImporter.GetHeaderInformationFromExcelFile.TemplateObject");
	javaActionParameterMapping1.parameterValue = basicCodeActionParameterValue1;   // Note: for this property a default value is defined.

	var basicCodeActionParameterValue2 = microflows.BasicCodeActionParameterValue.create(model);
	basicCodeActionParameterValue2.argument = "$TemplateDocument";

	var javaActionParameterMapping2 = microflows.JavaActionParameterMapping.create(model);
	javaActionParameterMapping2.parameter = model.findJavaActionParameterByQualifiedName("ExcelImporter.GetHeaderInformationFromExcelFile.ExcelFileDocument");
	javaActionParameterMapping2.parameterValue = basicCodeActionParameterValue2;   // Note: for this property a default value is defined.

	var javaActionCallAction1 = microflows.JavaActionCallAction.create(model);
	javaActionCallAction1.javaAction = model.findJavaActionByQualifiedName("ExcelImporter.GetHeaderInformationFromExcelFile");
	javaActionCallAction1.parameterMappings.push(javaActionParameterMapping1);
	javaActionCallAction1.parameterMappings.push(javaActionParameterMapping2);
	javaActionCallAction1.outputVariableName = "nothing";

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":285,"y":200};
	actionActivity4.size = {"width":140,"height":60};
	actionActivity4.action = javaActionCallAction1;
	actionActivity4.caption = "Get the columns from the template document";
	actionActivity4.autoGenerateCaption = false;

	var associationRetrieveSource1 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource1.startVariableName = "TemplateDocument";
	associationRetrieveSource1.association = model.findAssociationBaseByQualifiedName("ExcelImporter.TemplateDocument_Template");

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = associationRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "Template";

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":-360,"y":200};
	actionActivity5.size = {"width":140,"height":60};
	actionActivity5.action = retrieveAction1;
	actionActivity5.caption = "Retrieve the selected template";
	actionActivity5.autoGenerateCaption = false;

	var microflowCallParameterMapping2 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping2.__parameter.updateWithRawValue("ExcelImporter.SF_Template_CheckNrs.Template");
	microflowCallParameterMapping2.argument = "$Template";

	var microflowCallParameterMapping3 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping3.__parameter.updateWithRawValue("ExcelImporter.SF_Template_CheckNrs.ShowWarningPopup");
	microflowCallParameterMapping3.argument = "true";

	var microflowCall2 = microflows.MicroflowCall.create(model);
	microflowCall2.microflow = model.findMicroflowByQualifiedName("ExcelImporter.SF_Template_CheckNrs");
	microflowCall2.parameterMappings.push(microflowCallParameterMapping2);
	microflowCall2.parameterMappings.push(microflowCallParameterMapping3);

	var microflowCallAction2 = microflows.MicroflowCallAction.create(model);
	microflowCallAction2.microflowCall = microflowCall2;   // Note: for this property a default value is defined.
	microflowCallAction2.outputVariableName = "IsValid";

	var actionActivity6 = microflows.ActionActivity.create(model);
	actionActivity6.relativeMiddlePoint = {"x":-195,"y":200};
	actionActivity6.size = {"width":150,"height":60};
	actionActivity6.action = microflowCallAction2;
	actionActivity6.caption = "Check the template properties";
	actionActivity6.autoGenerateCaption = false;

	var endEvent3 = microflows.EndEvent.create(model);
	endEvent3.relativeMiddlePoint = {"x":935,"y":200};
	endEvent3.size = {"width":20,"height":20};

	var closeFormAction1 = microflows.CloseFormAction.create(model);

	var actionActivity7 = microflows.ActionActivity.create(model);
	actionActivity7.relativeMiddlePoint = {"x":665,"y":200};
	actionActivity7.size = {"width":80,"height":60};
	actionActivity7.action = closeFormAction1;
	actionActivity7.caption = "Close form";
	actionActivity7.autoGenerateCaption = false;

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";
	translation1.text = "Template";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "nl_NL";
	translation2.text = "Template";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_GB";
	translation3.text = "Template";

	var translation4 = texts.Translation.create(model);
	translation4.languageCode = "en_ZA";
	translation4.text = "Template";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);
	text1.translations.push(translation4);

	var textTemplate1 = microflows.TextTemplate.create(model);
	textTemplate1.text = text1;   // Note: for this property a default value is defined.

	var pageSettings1 = pages.PageSettings.create(model);
	pageSettings1.page = model.findPageByQualifiedName("ExcelImporter.Template_Edit");
	pageSettings1.titleOverride = textTemplate1;

	var showPageAction1 = microflows.ShowPageAction.create(model);
	showPageAction1.pageSettings = pageSettings1;   // Note: for this property a default value is defined.
	showPageAction1.passedObjectVariableName = "Template";

	var actionActivity8 = microflows.ActionActivity.create(model);
	actionActivity8.relativeMiddlePoint = {"x":810,"y":200};
	actionActivity8.size = {"width":150,"height":60};
	actionActivity8.action = showPageAction1;
	actionActivity8.caption = "Show form 'importManager.Template_Edit'";

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(annotation1);
	microflowObjectCollection1.objects.push(exclusiveSplit2);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(templateDocument1);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(actionActivity5);
	microflowObjectCollection1.objects.push(actionActivity6);
	microflowObjectCollection1.objects.push(endEvent3);
	microflowObjectCollection1.objects.push(actionActivity7);
	microflowObjectCollection1.objects.push(actionActivity8);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":30,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":30,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow4.caseValue = noCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":30,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = noCase5;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 1;
	sequenceFlow6.destinationConnectionIndex = 3;
	sequenceFlow6.originBezierVector = {"width":15,"height":0};
	sequenceFlow6.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow6.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "false";

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 2;
	sequenceFlow7.originBezierVector = {"width":0,"height":15};
	sequenceFlow7.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow7.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var annotationFlow1 = microflows.AnnotationFlow.create(model);
	annotationFlow1.originConnectionIndex = 1;
	annotationFlow1.originBezierVector = {"width":0,"height":0};
	annotationFlow1.destinationBezierVector = {"width":0,"height":-15};

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 1;
	sequenceFlow8.destinationConnectionIndex = 3;
	sequenceFlow8.originBezierVector = {"width":30,"height":0};
	sequenceFlow8.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow8.caseValue = noCase6;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 1;
	sequenceFlow9.destinationConnectionIndex = 3;
	sequenceFlow9.originBezierVector = {"width":30,"height":0};
	sequenceFlow9.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow9.caseValue = noCase7;   // Note: for this property a default value is defined.

	var noCase8 = microflows.NoCase.create(model);

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.originConnectionIndex = 1;
	sequenceFlow10.destinationConnectionIndex = 3;
	sequenceFlow10.originBezierVector = {"width":30,"height":0};
	sequenceFlow10.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow10.caseValue = noCase8;   // Note: for this property a default value is defined.

	var noCase9 = microflows.NoCase.create(model);

	var sequenceFlow11 = microflows.SequenceFlow.create(model);
	sequenceFlow11.originConnectionIndex = 1;
	sequenceFlow11.destinationConnectionIndex = 3;
	sequenceFlow11.originBezierVector = {"width":30,"height":0};
	sequenceFlow11.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow11.caseValue = noCase9;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "true";

	var sequenceFlow12 = microflows.SequenceFlow.create(model);
	sequenceFlow12.originConnectionIndex = 1;
	sequenceFlow12.destinationConnectionIndex = 3;
	sequenceFlow12.originBezierVector = {"width":15,"height":0};
	sequenceFlow12.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow12.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "false";

	var sequenceFlow13 = microflows.SequenceFlow.create(model);
	sequenceFlow13.originConnectionIndex = 2;
	sequenceFlow13.originBezierVector = {"width":0,"height":15};
	sequenceFlow13.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow13.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation5 = texts.Translation.create(model);
	translation5.languageCode = "en_US";

	var translation6 = texts.Translation.create(model);
	translation6.languageCode = "en_GB";

	var translation7 = texts.Translation.create(model);
	translation7.languageCode = "en_ZA";

	var text2 = texts.Text.create(model);
	text2.translations.push(translation5);
	text2.translations.push(translation6);
	text2.translations.push(translation7);

	var iVK_SaveContinue_CreateTemplateFromDoc1 = microflows.Microflow.createIn(unit);
	iVK_SaveContinue_CreateTemplateFromDoc1.name = "IVK_SaveContinue_CreateTemplateFromDoc";
	iVK_SaveContinue_CreateTemplateFromDoc1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow1);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow2);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow3);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow4);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow5);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow6);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow7);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(annotationFlow1);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow8);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow9);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow10);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow11);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow12);
	iVK_SaveContinue_CreateTemplateFromDoc1.flows.push(sequenceFlow13);
	iVK_SaveContinue_CreateTemplateFromDoc1.microflowReturnType = voidType1;
	iVK_SaveContinue_CreateTemplateFromDoc1.allowedModuleRoles.push(model.findModuleRoleByQualifiedName("ExcelImporter.Configurator"));
	iVK_SaveContinue_CreateTemplateFromDoc1.concurrencyErrorMessage = text2;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity3;

	sequenceFlow2.origin = actionActivity7;
	sequenceFlow2.destination = actionActivity8;

	sequenceFlow3.origin = actionActivity1;
	sequenceFlow3.destination = actionActivity4;

	sequenceFlow4.origin = actionActivity8;
	sequenceFlow4.destination = endEvent3;

	sequenceFlow5.origin = actionActivity4;
	sequenceFlow5.destination = actionActivity2;

	sequenceFlow6.origin = exclusiveSplit1;
	sequenceFlow6.destination = actionActivity5;

	sequenceFlow7.origin = exclusiveSplit1;
	sequenceFlow7.destination = endEvent1;

	annotationFlow1.origin = annotation1;
	annotationFlow1.destination = endEvent1;

	sequenceFlow8.origin = actionActivity3;
	sequenceFlow8.destination = exclusiveSplit1;

	sequenceFlow9.origin = actionActivity5;
	sequenceFlow9.destination = actionActivity6;

	sequenceFlow10.origin = actionActivity2;
	sequenceFlow10.destination = actionActivity7;

	sequenceFlow11.origin = actionActivity6;
	sequenceFlow11.destination = exclusiveSplit2;

	sequenceFlow12.origin = exclusiveSplit2;
	sequenceFlow12.destination = actionActivity1;

	sequenceFlow13.origin = exclusiveSplit2;
	sequenceFlow13.destination = endEvent2;

})