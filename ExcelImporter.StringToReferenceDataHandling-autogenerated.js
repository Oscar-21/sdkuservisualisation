(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "48eece6c-5b81-459f-93f5-b4b9ff52fdb5" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":100,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var stringType1 = datatypes.StringType.create(model);

	var dataHandling1 = microflows.MicroflowParameterObject.create(model);
	dataHandling1.relativeMiddlePoint = {"x":100,"y":0};
	dataHandling1.size = {"width":30,"height":30};
	dataHandling1.name = "DataHandling";
	dataHandling1.variableType = stringType1;   // Note: for this property a default value is defined.

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":395,"y":200};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "ExcelImporter.ReferenceDataHandling.Overwrite";

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "toString( ExcelImporter.ReferenceDataHandling.Overwrite ) = $DataHandling";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":220,"y":200};
	exclusiveSplit1.size = {"width":60,"height":40};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":220,"y":295};
	endEvent2.size = {"width":20,"height":20};
	endEvent2.returnValue = "ExcelImporter.ReferenceDataHandling.Append";

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(dataHandling1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(endEvent2);

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":15,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow1.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":15,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow2.caseValue = noCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "false";

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 2;
	sequenceFlow3.originBezierVector = {"width":0,"height":15};
	sequenceFlow3.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow3.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var enumerationType1 = datatypes.EnumerationType.create(model);
	enumerationType1.enumeration = model.findEnumerationByQualifiedName("ExcelImporter.ReferenceDataHandling");

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "en_GB";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_ZA";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);

	var stringToReferenceDataHandling1 = microflows.Microflow.createIn(unit);
	stringToReferenceDataHandling1.name = "StringToReferenceDataHandling";
	stringToReferenceDataHandling1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	stringToReferenceDataHandling1.flows.push(sequenceFlow1);
	stringToReferenceDataHandling1.flows.push(sequenceFlow2);
	stringToReferenceDataHandling1.flows.push(sequenceFlow3);
	stringToReferenceDataHandling1.microflowReturnType = enumerationType1;
	stringToReferenceDataHandling1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = exclusiveSplit1;
	sequenceFlow1.destination = endEvent1;

	sequenceFlow2.origin = startEvent1;
	sequenceFlow2.destination = exclusiveSplit1;

	sequenceFlow3.origin = exclusiveSplit1;
	sequenceFlow3.destination = endEvent2;

})