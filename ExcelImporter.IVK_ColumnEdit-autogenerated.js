(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "3e5dcddc-83b8-4737-8fe1-76d12d85c714" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("ExcelImporter.Column");

	var column1 = microflows.MicroflowParameterObject.create(model);
	column1.relativeMiddlePoint = {"x":100,"y":0};
	column1.size = {"width":30,"height":30};
	column1.name = "Column";
	column1.variableType = objectType1;   // Note: for this property a default value is defined.

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":100,"y":180};
	startEvent1.size = {"width":20,"height":20};

	var objectType2 = datatypes.ObjectType.create(model);
	objectType2.entity = model.findEntityByQualifiedName("ExcelImporter.Template");

	var enclosingContext1 = microflows.MicroflowParameterObject.create(model);
	enclosingContext1.relativeMiddlePoint = {"x":100,"y":75};
	enclosingContext1.size = {"width":30,"height":30};
	enclosingContext1.name = "EnclosingContext";
	enclosingContext1.variableType = objectType2;   // Note: for this property a default value is defined.

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$EnclosingContext/ExcelImporter.Template_MxObjectType != empty";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":175,"y":180};
	exclusiveSplit1.size = {"width":60,"height":40};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";
	translation1.text = "A MetaObject must be selected before a column can be created or changed.";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "nl_NL";
	translation2.text = "Er moet eerst een objecttype geselecteerd zijn voor je een kolom kan aanmaken of wijzigen";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_GB";
	translation3.text = "A MetaObject must be selected before a column can be created or changed.";

	var translation4 = texts.Translation.create(model);
	translation4.languageCode = "en_ZA";
	translation4.text = "A MetaObject must be selected before a column can be created or changed.";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);
	text1.translations.push(translation4);

	var textTemplate1 = microflows.TextTemplate.create(model);
	textTemplate1.text = text1;   // Note: for this property a default value is defined.

	var showMessageAction1 = microflows.ShowMessageAction.create(model);
	showMessageAction1.template = textTemplate1;   // Note: for this property a default value is defined.
	showMessageAction1.type = microflows.ShowMessageType.Error;

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":175,"y":280};
	actionActivity1.size = {"width":110,"height":60};
	actionActivity1.action = showMessageAction1;
	actionActivity1.caption = "Send error message";
	actionActivity1.autoGenerateCaption = false;

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":435,"y":180};
	endEvent1.size = {"width":20,"height":20};

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":175,"y":350};
	endEvent2.size = {"width":20,"height":20};

	var pageSettings1 = pages.PageSettings.create(model);
	pageSettings1.page = model.findPageByQualifiedName("ExcelImporter.Column_NewEdit");

	var showPageAction1 = microflows.ShowPageAction.create(model);
	showPageAction1.pageSettings = pageSettings1;   // Note: for this property a default value is defined.
	showPageAction1.passedObjectVariableName = "Column";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":335,"y":180};
	actionActivity2.size = {"width":110,"height":60};
	actionActivity2.action = showPageAction1;
	actionActivity2.caption = "Open form";
	actionActivity2.autoGenerateCaption = false;

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(column1);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(enclosingContext1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(actionActivity2);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":15,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "false";

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 2;
	sequenceFlow4.originBezierVector = {"width":0,"height":15};
	sequenceFlow4.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow4.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 2;
	sequenceFlow5.originBezierVector = {"width":0,"height":30};
	sequenceFlow5.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow5.caseValue = noCase3;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation5 = texts.Translation.create(model);
	translation5.languageCode = "en_US";

	var translation6 = texts.Translation.create(model);
	translation6.languageCode = "en_GB";

	var translation7 = texts.Translation.create(model);
	translation7.languageCode = "en_ZA";

	var text2 = texts.Text.create(model);
	text2.translations.push(translation5);
	text2.translations.push(translation6);
	text2.translations.push(translation7);

	var iVK_ColumnEdit1 = microflows.Microflow.createIn(unit);
	iVK_ColumnEdit1.name = "IVK_ColumnEdit";
	iVK_ColumnEdit1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	iVK_ColumnEdit1.flows.push(sequenceFlow1);
	iVK_ColumnEdit1.flows.push(sequenceFlow2);
	iVK_ColumnEdit1.flows.push(sequenceFlow3);
	iVK_ColumnEdit1.flows.push(sequenceFlow4);
	iVK_ColumnEdit1.flows.push(sequenceFlow5);
	iVK_ColumnEdit1.microflowReturnType = voidType1;
	iVK_ColumnEdit1.applyEntityAccess = true;
	iVK_ColumnEdit1.allowedModuleRoles.push(model.findModuleRoleByQualifiedName("ExcelImporter.Configurator"));
	iVK_ColumnEdit1.concurrencyErrorMessage = text2;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = exclusiveSplit1;

	sequenceFlow2.origin = actionActivity2;
	sequenceFlow2.destination = endEvent1;

	sequenceFlow3.origin = exclusiveSplit1;
	sequenceFlow3.destination = actionActivity2;

	sequenceFlow4.origin = exclusiveSplit1;
	sequenceFlow4.destination = actionActivity1;

	sequenceFlow5.origin = actionActivity1;
	sequenceFlow5.destination = endEvent2;

})