(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "7ba702f3-458a-4f45-b88c-cdb25e499879" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var microflowCallParameterMapping1 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping1.__parameter.updateWithRawValue("ExcelImporter.prepareReferenceHandling.pColumn");
	microflowCallParameterMapping1.argument = "$Column";

	var microflowCall1 = microflows.MicroflowCall.create(model);
	microflowCall1.microflow = model.findMicroflowByQualifiedName("ExcelImporter.prepareReferenceHandling");
	microflowCall1.parameterMappings.push(microflowCallParameterMapping1);

	var microflowCallAction1 = microflows.MicroflowCallAction.create(model);
	microflowCallAction1.microflowCall = microflowCall1;   // Note: for this property a default value is defined.

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":405,"y":200};
	actionActivity1.size = {"width":220,"height":60};
	actionActivity1.action = microflowCallAction1;
	actionActivity1.caption = "Create or remove the reference handling objects";
	actionActivity1.autoGenerateCaption = false;

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":35,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("ExcelImporter.Column");

	var column1 = microflows.MicroflowParameterObject.create(model);
	column1.relativeMiddlePoint = {"x":35,"y":120};
	column1.size = {"width":30,"height":30};
	column1.name = "Column";
	column1.variableType = objectType1;   // Note: for this property a default value is defined.

	var memberChange1 = microflows.MemberChange.create(model);
	memberChange1.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectType_Reference");
	memberChange1.value = "empty";

	var memberChange2 = microflows.MemberChange.create(model);
	memberChange2.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectType");
	memberChange2.value = "empty";

	var memberChange3 = microflows.MemberChange.create(model);
	memberChange3.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectMember");
	memberChange3.value = "empty";

	var memberChange4 = microflows.MemberChange.create(model);
	memberChange4.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectMember_Reference");
	memberChange4.value = "empty";

	var memberChange5 = microflows.MemberChange.create(model);
	memberChange5.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectReference");
	memberChange5.value = "empty";

	var memberChange6 = microflows.MemberChange.create(model);
	memberChange6.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.MappingType");
	memberChange6.value = "ExcelImporter.MappingType.DoNotUse";

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.items.push(memberChange1);
	changeObjectAction1.items.push(memberChange2);
	changeObjectAction1.items.push(memberChange3);
	changeObjectAction1.items.push(memberChange4);
	changeObjectAction1.items.push(memberChange5);
	changeObjectAction1.items.push(memberChange6);
	changeObjectAction1.changeVariableName = "Column";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":175,"y":200};
	actionActivity2.size = {"width":170,"height":60};
	actionActivity2.action = changeObjectAction1;
	actionActivity2.caption = "Reset the mxreflection associations in the column";
	actionActivity2.autoGenerateCaption = false;

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":675,"y":200};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "true";

	var rollbackAction1 = microflows.RollbackAction.create(model);
	rollbackAction1.rollbackVariableName = "Column";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":590,"y":200};
	actionActivity3.size = {"width":90,"height":60};
	actionActivity3.action = rollbackAction1;

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(column1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(actionActivity3);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":30,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":30,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow4.caseValue = noCase4;   // Note: for this property a default value is defined.

	var booleanType1 = datatypes.BooleanType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "en_GB";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_ZA";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);

	var bDe_Column1 = microflows.Microflow.createIn(unit);
	bDe_Column1.name = "BDe_Column";
	bDe_Column1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	bDe_Column1.flows.push(sequenceFlow1);
	bDe_Column1.flows.push(sequenceFlow2);
	bDe_Column1.flows.push(sequenceFlow3);
	bDe_Column1.flows.push(sequenceFlow4);
	bDe_Column1.microflowReturnType = booleanType1;
	bDe_Column1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity2;

	sequenceFlow2.origin = actionActivity1;
	sequenceFlow2.destination = actionActivity3;

	sequenceFlow3.origin = actionActivity2;
	sequenceFlow3.destination = actionActivity1;

	sequenceFlow4.origin = actionActivity3;
	sequenceFlow4.destination = endEvent1;

})