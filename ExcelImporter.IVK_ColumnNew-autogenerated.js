(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "c59faa4e-2643-425a-9f76-1d05929463be" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":100,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":700,"y":200};
	endEvent1.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("ExcelImporter.Template");

	var enclosingContext1 = microflows.MicroflowParameterObject.create(model);
	enclosingContext1.relativeMiddlePoint = {"x":100,"y":95};
	enclosingContext1.size = {"width":30,"height":30};
	enclosingContext1.name = "EnclosingContext";
	enclosingContext1.variableType = objectType1;   // Note: for this property a default value is defined.

	var createObjectAction1 = microflows.CreateObjectAction.create(model);
	createObjectAction1.entity = model.findEntityByQualifiedName("ExcelImporter.Column");
	createObjectAction1.outputVariableName = "NewColAttributeRelation";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":300,"y":200};
	actionActivity1.size = {"width":100,"height":60};
	actionActivity1.action = createObjectAction1;
	actionActivity1.caption = "Create a new object";
	actionActivity1.autoGenerateCaption = false;

	var memberChange1 = microflows.MemberChange.create(model);
	memberChange1.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectType");
	memberChange1.value = "$EnclosingContext/ExcelImporter.Template_MxObjectType";

	var memberChange2 = microflows.MemberChange.create(model);
	memberChange2.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_Template");
	memberChange2.value = "$EnclosingContext";

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.items.push(memberChange1);
	changeObjectAction1.items.push(memberChange2);
	changeObjectAction1.changeVariableName = "NewColAttributeRelation";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":450,"y":200};
	actionActivity2.size = {"width":120,"height":60};
	actionActivity2.action = changeObjectAction1;
	actionActivity2.caption = "Set the object type";
	actionActivity2.autoGenerateCaption = false;

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";
	translation1.text = "New column";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "nl_NL";
	translation2.text = "Nieuwe kolom";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_GB";
	translation3.text = "New column";

	var translation4 = texts.Translation.create(model);
	translation4.languageCode = "en_ZA";
	translation4.text = "New column";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);
	text1.translations.push(translation4);

	var textTemplate1 = microflows.TextTemplate.create(model);
	textTemplate1.text = text1;   // Note: for this property a default value is defined.

	var pageSettings1 = pages.PageSettings.create(model);
	pageSettings1.page = model.findPageByQualifiedName("ExcelImporter.Column_NewEdit");
	pageSettings1.titleOverride = textTemplate1;

	var showPageAction1 = microflows.ShowPageAction.create(model);
	showPageAction1.pageSettings = pageSettings1;   // Note: for this property a default value is defined.
	showPageAction1.passedObjectVariableName = "NewColAttributeRelation";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":600,"y":200};
	actionActivity3.size = {"width":110,"height":60};
	actionActivity3.action = showPageAction1;
	actionActivity3.caption = "Open form";
	actionActivity3.autoGenerateCaption = false;

	var translation5 = texts.Translation.create(model);
	translation5.languageCode = "en_US";
	translation5.text = "A MetaObject must be selected before a column can be created or changed.";

	var translation6 = texts.Translation.create(model);
	translation6.languageCode = "nl_NL";
	translation6.text = "Er moet eerst een objecttype geselecteerd zijn voor je een kolom kan aanmaken of wijzigen";

	var translation7 = texts.Translation.create(model);
	translation7.languageCode = "en_GB";
	translation7.text = "A MetaObject must be selected before a column can be created or changed.";

	var translation8 = texts.Translation.create(model);
	translation8.languageCode = "en_ZA";
	translation8.text = "A MetaObject must be selected before a column can be created or changed.";

	var text2 = texts.Text.create(model);
	text2.translations.push(translation5);
	text2.translations.push(translation6);
	text2.translations.push(translation7);
	text2.translations.push(translation8);

	var textTemplate2 = microflows.TextTemplate.create(model);
	textTemplate2.text = text2;   // Note: for this property a default value is defined.

	var showMessageAction1 = microflows.ShowMessageAction.create(model);
	showMessageAction1.template = textTemplate2;   // Note: for this property a default value is defined.
	showMessageAction1.type = microflows.ShowMessageType.Error;

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":175,"y":300};
	actionActivity4.size = {"width":110,"height":60};
	actionActivity4.action = showMessageAction1;
	actionActivity4.caption = "Send error message";
	actionActivity4.autoGenerateCaption = false;

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":175,"y":385};
	endEvent2.size = {"width":20,"height":20};

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$EnclosingContext/ExcelImporter.Template_MxObjectType != empty";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":175,"y":200};
	exclusiveSplit1.size = {"width":60,"height":40};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(enclosingContext1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(exclusiveSplit1);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":30,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":30,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow4.caseValue = noCase4;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":15,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "false";

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 2;
	sequenceFlow6.originBezierVector = {"width":0,"height":15};
	sequenceFlow6.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow6.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 2;
	sequenceFlow7.originBezierVector = {"width":0,"height":30};
	sequenceFlow7.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow7.caseValue = noCase5;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation9 = texts.Translation.create(model);
	translation9.languageCode = "en_US";

	var translation10 = texts.Translation.create(model);
	translation10.languageCode = "en_GB";

	var translation11 = texts.Translation.create(model);
	translation11.languageCode = "en_ZA";

	var text3 = texts.Text.create(model);
	text3.translations.push(translation9);
	text3.translations.push(translation10);
	text3.translations.push(translation11);

	var iVK_ColumnNew1 = microflows.Microflow.createIn(unit);
	iVK_ColumnNew1.name = "IVK_ColumnNew";
	iVK_ColumnNew1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	iVK_ColumnNew1.flows.push(sequenceFlow1);
	iVK_ColumnNew1.flows.push(sequenceFlow2);
	iVK_ColumnNew1.flows.push(sequenceFlow3);
	iVK_ColumnNew1.flows.push(sequenceFlow4);
	iVK_ColumnNew1.flows.push(sequenceFlow5);
	iVK_ColumnNew1.flows.push(sequenceFlow6);
	iVK_ColumnNew1.flows.push(sequenceFlow7);
	iVK_ColumnNew1.microflowReturnType = voidType1;
	iVK_ColumnNew1.applyEntityAccess = true;
	iVK_ColumnNew1.allowedModuleRoles.push(model.findModuleRoleByQualifiedName("ExcelImporter.Configurator"));
	iVK_ColumnNew1.concurrencyErrorMessage = text3;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = exclusiveSplit1;

	sequenceFlow2.origin = actionActivity1;
	sequenceFlow2.destination = actionActivity2;

	sequenceFlow3.origin = actionActivity2;
	sequenceFlow3.destination = actionActivity3;

	sequenceFlow4.origin = actionActivity3;
	sequenceFlow4.destination = endEvent1;

	sequenceFlow5.origin = exclusiveSplit1;
	sequenceFlow5.destination = actionActivity1;

	sequenceFlow6.origin = exclusiveSplit1;
	sequenceFlow6.destination = actionActivity4;

	sequenceFlow7.origin = actionActivity4;
	sequenceFlow7.destination = endEvent2;

})