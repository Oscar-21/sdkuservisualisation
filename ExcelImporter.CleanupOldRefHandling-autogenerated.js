(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "b473805b-2a8a-46b4-8b3a-6e6ecf4cecdb" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":-15,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":700,"y":200};
	endEvent1.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("ExcelImporter.Template");

	var template1 = microflows.MicroflowParameterObject.create(model);
	template1.relativeMiddlePoint = {"x":-15,"y":120};
	template1.size = {"width":30,"height":30};
	template1.name = "Template";
	template1.variableType = objectType1;   // Note: for this property a default value is defined.

	var continueEvent1 = microflows.ContinueEvent.create(model);
	continueEvent1.relativeMiddlePoint = {"x":260,"y":115};
	continueEvent1.size = {"width":20,"height":20};

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$IteratorReferenceHandling/ExcelImporter.ReferenceHandling_MxObjectReference != empty";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":65,"y":115};
	exclusiveSplit1.size = {"width":110,"height":60};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "Still Has reference?";

	var deleteAction1 = microflows.DeleteAction.create(model);
	deleteAction1.deleteVariableName = "IteratorReferenceHandling";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":210,"y":175};
	actionActivity1.size = {"width":140,"height":60};
	actionActivity1.action = deleteAction1;

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(continueEvent1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity1);

	var iterableList1 = microflows.IterableList.create(model);
	iterableList1.listVariableName = "ReferenceHandlingList";
	iterableList1.variableName = "IteratorReferenceHandling";

	var loopedActivity1 = microflows.LoopedActivity.create(model);
	loopedActivity1.relativeMiddlePoint = {"x":490,"y":200};
	loopedActivity1.size = {"width":290,"height":220};
	loopedActivity1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	loopedActivity1.loopSource = iterableList1;   // Note: for this property a default value is defined.

	var associationRetrieveSource1 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource1.startVariableName = "Template";
	associationRetrieveSource1.association = model.findAssociationBaseByQualifiedName("ExcelImporter.ReferenceHandling_Template");

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = associationRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "ReferenceHandlingList";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":165,"y":200};
	actionActivity2.size = {"width":270,"height":60};
	actionActivity2.action = retrieveAction1;

	var microflowObjectCollection2 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection2.objects.push(startEvent1);
	microflowObjectCollection2.objects.push(endEvent1);
	microflowObjectCollection2.objects.push(template1);
	microflowObjectCollection2.objects.push(loopedActivity1);
	microflowObjectCollection2.objects.push(actionActivity2);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":30,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow3.caseValue = noCase3;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":15,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow4.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "false";

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 2;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":0,"height":15};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);

	var cleanupOldRefHandling1 = microflows.Microflow.createIn(unit);
	cleanupOldRefHandling1.name = "CleanupOldRefHandling";
	cleanupOldRefHandling1.objectCollection = microflowObjectCollection2;   // Note: for this property a default value is defined.
	cleanupOldRefHandling1.flows.push(sequenceFlow1);
	cleanupOldRefHandling1.flows.push(sequenceFlow2);
	cleanupOldRefHandling1.flows.push(sequenceFlow3);
	cleanupOldRefHandling1.flows.push(sequenceFlow4);
	cleanupOldRefHandling1.flows.push(sequenceFlow5);
	cleanupOldRefHandling1.microflowReturnType = voidType1;
	cleanupOldRefHandling1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity2;

	sequenceFlow2.origin = actionActivity2;
	sequenceFlow2.destination = loopedActivity1;

	sequenceFlow3.origin = loopedActivity1;
	sequenceFlow3.destination = endEvent1;

	sequenceFlow4.origin = exclusiveSplit1;
	sequenceFlow4.destination = continueEvent1;

	sequenceFlow5.origin = exclusiveSplit1;
	sequenceFlow5.destination = actionActivity1;

})