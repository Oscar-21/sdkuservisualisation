(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "be979c98-339e-4eae-a8f4-a742f49faf0e" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":100,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var constantRange1 = microflows.ConstantRange.create(model);

	var sortItemList1 = microflows.SortItemList.create(model);

	var databaseRetrieveSource1 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource1.entity = model.findEntityByQualifiedName("MxModelReflection.MxObjectType");
	databaseRetrieveSource1.range = constantRange1;   // Note: for this property a default value is defined.
	databaseRetrieveSource1.xPathConstraint = "[MxModelReflection.MxObjectReference_MxObjectType=$Reference]";
	databaseRetrieveSource1.sortItemList = sortItemList1;   // Note: for this property a default value is defined.

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = databaseRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "MxObjects";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":255,"y":200};
	actionActivity1.size = {"width":130,"height":60};
	actionActivity1.action = retrieveAction1;
	actionActivity1.caption = "Get the objects for this refrence";
	actionActivity1.autoGenerateCaption = false;

	var associationRetrieveSource1 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource1.startVariableName = "Column";
	associationRetrieveSource1.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectType_Reference");

	var retrieveAction2 = microflows.RetrieveAction.create(model);
	retrieveAction2.retrieveSource = associationRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction2.outputVariableName = "MxObject_Ref";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":395,"y":200};
	actionActivity2.size = {"width":90,"height":60};
	actionActivity2.action = retrieveAction2;
	actionActivity2.caption = "Current selection";
	actionActivity2.autoGenerateCaption = false;

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$MxObject_Ref != empty";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":520,"y":200};
	exclusiveSplit1.size = {"width":90,"height":60};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "already has objecttype?";

	var contains1 = microflows.Contains.create(model);
	contains1.listVariableName = "MxObjects";
	contains1.secondListOrObjectVariableName = "MxObject_Ref";

	var listOperationAction1 = microflows.ListOperationAction.create(model);
	listOperationAction1.operation = contains1;   // Note: for this property a default value is defined.
	listOperationAction1.outputVariableName = "SelectionIsValid";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":690,"y":200};
	actionActivity3.size = {"width":130,"height":60};
	actionActivity3.action = listOperationAction1;
	actionActivity3.caption = "Check if the selection is valid";
	actionActivity3.autoGenerateCaption = false;

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":810,"y":60};
	endEvent1.size = {"width":20,"height":20};

	var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition2.expression = "$SelectionIsValid";

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":810,"y":200};
	exclusiveSplit2.size = {"width":60,"height":40};
	exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
	exclusiveSplit2.caption = "valid?";

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":1465,"y":200};
	endEvent2.size = {"width":20,"height":20};

	var exclusiveMerge1 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge1.relativeMiddlePoint = {"x":960,"y":200};
	exclusiveMerge1.size = {"width":60,"height":40};

	var expressionSplitCondition3 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition3.expression = "$NrOfObjects > 2";

	var exclusiveSplit3 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit3.relativeMiddlePoint = {"x":1165,"y":200};
	exclusiveSplit3.size = {"width":60,"height":40};
	exclusiveSplit3.splitCondition = expressionSplitCondition3;   // Note: for this property a default value is defined.
	exclusiveSplit3.caption = "> 2 ";

	var expressionSplitCondition4 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition4.expression = "$Iterator != $StartMxObjectType";

	var exclusiveSplit4 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit4.relativeMiddlePoint = {"x":90,"y":55};
	exclusiveSplit4.size = {"width":60,"height":40};
	exclusiveSplit4.splitCondition = expressionSplitCondition4;   // Note: for this property a default value is defined.

	var memberChange1 = microflows.MemberChange.create(model);
	memberChange1.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectType_Reference");
	memberChange1.value = "$Iterator";

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.items.push(memberChange1);
	changeObjectAction1.refreshInClient = true;
	changeObjectAction1.changeVariableName = "Column";

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":235,"y":55};
	actionActivity4.size = {"width":100,"height":40};
	actionActivity4.action = changeObjectAction1;
	actionActivity4.caption = "Change the selection";
	actionActivity4.autoGenerateCaption = false;

	var continueEvent1 = microflows.ContinueEvent.create(model);
	continueEvent1.relativeMiddlePoint = {"x":235,"y":15};
	continueEvent1.size = {"width":20,"height":20};

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(exclusiveSplit4);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(continueEvent1);

	var iterableList1 = microflows.IterableList.create(model);
	iterableList1.listVariableName = "MxObjects";
	iterableList1.variableName = "Iterator";

	var loopedActivity1 = microflows.LoopedActivity.create(model);
	loopedActivity1.relativeMiddlePoint = {"x":1165,"y":415};
	loopedActivity1.size = {"width":290,"height":90};
	loopedActivity1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	loopedActivity1.loopSource = iterableList1;   // Note: for this property a default value is defined.

	var memberChange2 = microflows.MemberChange.create(model);
	memberChange2.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectType_Reference");
	memberChange2.value = "empty";

	var changeObjectAction2 = microflows.ChangeObjectAction.create(model);
	changeObjectAction2.items.push(memberChange2);
	changeObjectAction2.refreshInClient = true;
	changeObjectAction2.changeVariableName = "Column";

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":1350,"y":200};
	actionActivity5.size = {"width":100,"height":50};
	actionActivity5.action = changeObjectAction2;
	actionActivity5.caption = "Empty the selection";
	actionActivity5.autoGenerateCaption = false;

	var endEvent3 = microflows.EndEvent.create(model);
	endEvent3.relativeMiddlePoint = {"x":1550,"y":415};
	endEvent3.size = {"width":20,"height":20};

	var microflowCallParameterMapping1 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping1.__parameter.updateWithRawValue("ExcelImporter.Ch_SetObjectType_Reference.column");
	microflowCallParameterMapping1.argument = "$Column";

	var microflowCall1 = microflows.MicroflowCall.create(model);
	microflowCall1.microflow = model.findMicroflowByQualifiedName("ExcelImporter.Ch_SetObjectType_Reference");
	microflowCall1.parameterMappings.push(microflowCallParameterMapping1);

	var microflowCallAction1 = microflows.MicroflowCallAction.create(model);
	microflowCallAction1.microflowCall = microflowCall1;   // Note: for this property a default value is defined.

	var actionActivity6 = microflows.ActionActivity.create(model);
	actionActivity6.relativeMiddlePoint = {"x":1425,"y":415};
	actionActivity6.size = {"width":130,"height":60};
	actionActivity6.action = microflowCallAction1;
	actionActivity6.caption = "Try to set the find string for the objecttype";
	actionActivity6.autoGenerateCaption = false;

	var aggregateListAction1 = microflows.AggregateListAction.create(model);
	aggregateListAction1.inputListVariableName = "MxObjects";
	aggregateListAction1.outputVariableName = "NrOfObjects";

	var actionActivity7 = microflows.ActionActivity.create(model);
	actionActivity7.relativeMiddlePoint = {"x":1060,"y":200};
	actionActivity7.size = {"width":80,"height":30};
	actionActivity7.action = aggregateListAction1;
	actionActivity7.caption = "COUNT";
	actionActivity7.autoGenerateCaption = false;

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("MxModelReflection.MxObjectReference");

	var reference1 = microflows.MicroflowParameterObject.create(model);
	reference1.relativeMiddlePoint = {"x":100,"y":105};
	reference1.size = {"width":30,"height":30};
	reference1.name = "Reference";
	reference1.variableType = objectType1;   // Note: for this property a default value is defined.

	var objectType2 = datatypes.ObjectType.create(model);
	objectType2.entity = model.findEntityByQualifiedName("ExcelImporter.Column");

	var column1 = microflows.MicroflowParameterObject.create(model);
	column1.relativeMiddlePoint = {"x":95,"y":35};
	column1.size = {"width":30,"height":30};
	column1.name = "Column";
	column1.variableType = objectType2;   // Note: for this property a default value is defined.

	var objectType3 = datatypes.ObjectType.create(model);
	objectType3.entity = model.findEntityByQualifiedName("MxModelReflection.MxObjectType");

	var startMxObjectType1 = microflows.MicroflowParameterObject.create(model);
	startMxObjectType1.relativeMiddlePoint = {"x":95,"y":-30};
	startMxObjectType1.size = {"width":30,"height":30};
	startMxObjectType1.name = "StartMxObjectType";
	startMxObjectType1.variableType = objectType3;   // Note: for this property a default value is defined.

	var microflowObjectCollection2 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection2.objects.push(startEvent1);
	microflowObjectCollection2.objects.push(actionActivity1);
	microflowObjectCollection2.objects.push(actionActivity2);
	microflowObjectCollection2.objects.push(exclusiveSplit1);
	microflowObjectCollection2.objects.push(actionActivity3);
	microflowObjectCollection2.objects.push(endEvent1);
	microflowObjectCollection2.objects.push(exclusiveSplit2);
	microflowObjectCollection2.objects.push(endEvent2);
	microflowObjectCollection2.objects.push(exclusiveMerge1);
	microflowObjectCollection2.objects.push(exclusiveSplit3);
	microflowObjectCollection2.objects.push(loopedActivity1);
	microflowObjectCollection2.objects.push(actionActivity5);
	microflowObjectCollection2.objects.push(endEvent3);
	microflowObjectCollection2.objects.push(actionActivity6);
	microflowObjectCollection2.objects.push(actionActivity7);
	microflowObjectCollection2.objects.push(reference1);
	microflowObjectCollection2.objects.push(column1);
	microflowObjectCollection2.objects.push(startMxObjectType1);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":30,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":15,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":30,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow4.caseValue = noCase3;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "true";

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":15,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "false";

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 1;
	sequenceFlow6.destinationConnectionIndex = 3;
	sequenceFlow6.originBezierVector = {"width":15,"height":0};
	sequenceFlow6.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow6.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "true";

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.destinationConnectionIndex = 2;
	sequenceFlow7.originBezierVector = {"width":0,"height":-15};
	sequenceFlow7.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow7.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var enumerationCase5 = microflows.EnumerationCase.create(model);
	enumerationCase5.value = "false";

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 2;
	sequenceFlow8.originBezierVector = {"width":0,"height":15};
	sequenceFlow8.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow8.caseValue = enumerationCase5;   // Note: for this property a default value is defined.

	var enumerationCase6 = microflows.EnumerationCase.create(model);
	enumerationCase6.value = "true";

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 1;
	sequenceFlow9.destinationConnectionIndex = 3;
	sequenceFlow9.originBezierVector = {"width":15,"height":0};
	sequenceFlow9.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow9.caseValue = enumerationCase6;   // Note: for this property a default value is defined.

	var enumerationCase7 = microflows.EnumerationCase.create(model);
	enumerationCase7.value = "false";

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.destinationConnectionIndex = 3;
	sequenceFlow10.originBezierVector = {"width":0,"height":-25};
	sequenceFlow10.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow10.caseValue = enumerationCase7;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow11 = microflows.SequenceFlow.create(model);
	sequenceFlow11.originConnectionIndex = 1;
	sequenceFlow11.destinationConnectionIndex = 3;
	sequenceFlow11.originBezierVector = {"width":30,"height":0};
	sequenceFlow11.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow11.caseValue = noCase4;   // Note: for this property a default value is defined.

	var enumerationCase8 = microflows.EnumerationCase.create(model);
	enumerationCase8.value = "false";

	var sequenceFlow12 = microflows.SequenceFlow.create(model);
	sequenceFlow12.originConnectionIndex = 2;
	sequenceFlow12.destinationConnectionIndex = 2;
	sequenceFlow12.originBezierVector = {"width":0,"height":90};
	sequenceFlow12.destinationBezierVector = {"width":0,"height":95};
	sequenceFlow12.caseValue = enumerationCase8;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow13 = microflows.SequenceFlow.create(model);
	sequenceFlow13.originConnectionIndex = 1;
	sequenceFlow13.destinationConnectionIndex = 3;
	sequenceFlow13.originBezierVector = {"width":15,"height":0};
	sequenceFlow13.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow13.caseValue = noCase5;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow14 = microflows.SequenceFlow.create(model);
	sequenceFlow14.originConnectionIndex = 1;
	sequenceFlow14.destinationConnectionIndex = 3;
	sequenceFlow14.originBezierVector = {"width":30,"height":0};
	sequenceFlow14.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow14.caseValue = noCase6;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow15 = microflows.SequenceFlow.create(model);
	sequenceFlow15.originConnectionIndex = 1;
	sequenceFlow15.destinationConnectionIndex = 3;
	sequenceFlow15.originBezierVector = {"width":30,"height":0};
	sequenceFlow15.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow15.caseValue = noCase7;   // Note: for this property a default value is defined.

	var noCase8 = microflows.NoCase.create(model);

	var sequenceFlow16 = microflows.SequenceFlow.create(model);
	sequenceFlow16.originConnectionIndex = 1;
	sequenceFlow16.destinationConnectionIndex = 3;
	sequenceFlow16.originBezierVector = {"width":30,"height":0};
	sequenceFlow16.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow16.caseValue = noCase8;   // Note: for this property a default value is defined.

	var noCase9 = microflows.NoCase.create(model);

	var sequenceFlow17 = microflows.SequenceFlow.create(model);
	sequenceFlow17.originConnectionIndex = 1;
	sequenceFlow17.destinationConnectionIndex = 3;
	sequenceFlow17.originBezierVector = {"width":15,"height":0};
	sequenceFlow17.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow17.caseValue = noCase9;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "en_GB";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_ZA";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);

	var column_SetCorrectRefObjectType1 = microflows.Microflow.createIn(unit);
	column_SetCorrectRefObjectType1.name = "Column_SetCorrectRefObjectType";
	column_SetCorrectRefObjectType1.objectCollection = microflowObjectCollection2;   // Note: for this property a default value is defined.
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow1);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow2);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow3);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow4);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow5);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow6);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow7);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow8);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow9);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow10);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow11);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow12);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow13);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow14);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow15);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow16);
	column_SetCorrectRefObjectType1.flows.push(sequenceFlow17);
	column_SetCorrectRefObjectType1.microflowReturnType = voidType1;
	column_SetCorrectRefObjectType1.applyEntityAccess = true;
	column_SetCorrectRefObjectType1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = actionActivity1;
	sequenceFlow1.destination = actionActivity2;

	sequenceFlow2.origin = actionActivity7;
	sequenceFlow2.destination = exclusiveSplit3;

	sequenceFlow3.origin = exclusiveSplit3;
	sequenceFlow3.destination = actionActivity5;

	sequenceFlow4.origin = actionActivity3;
	sequenceFlow4.destination = exclusiveSplit2;

	sequenceFlow5.origin = exclusiveSplit1;
	sequenceFlow5.destination = actionActivity3;

	sequenceFlow6.origin = exclusiveSplit2;
	sequenceFlow6.destination = exclusiveMerge1;

	sequenceFlow7.origin = exclusiveSplit2;
	sequenceFlow7.destination = endEvent1;

	sequenceFlow8.origin = exclusiveSplit3;
	sequenceFlow8.destination = loopedActivity1;

	sequenceFlow9.origin = exclusiveSplit4;
	sequenceFlow9.destination = actionActivity4;

	sequenceFlow10.origin = exclusiveSplit4;
	sequenceFlow10.destination = continueEvent1;

	sequenceFlow11.origin = loopedActivity1;
	sequenceFlow11.destination = actionActivity6;

	sequenceFlow12.origin = exclusiveSplit1;
	sequenceFlow12.destination = exclusiveMerge1;

	sequenceFlow13.origin = exclusiveMerge1;
	sequenceFlow13.destination = actionActivity7;

	sequenceFlow14.origin = actionActivity5;
	sequenceFlow14.destination = endEvent2;

	sequenceFlow15.origin = actionActivity6;
	sequenceFlow15.destination = endEvent3;

	sequenceFlow16.origin = actionActivity2;
	sequenceFlow16.destination = exclusiveSplit1;

	sequenceFlow17.origin = startEvent1;
	sequenceFlow17.destination = actionActivity1;

})