(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "e046fdd0-834a-4a46-bf82-588ddafef32d" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":-285,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var customRange1 = microflows.CustomRange.create(model);
	customRange1.limitExpression = "1";
	customRange1.offsetExpression = "$Offset";

	var sortItemList1 = microflows.SortItemList.create(model);

	var databaseRetrieveSource1 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource1.entity = model.findEntityByQualifiedName("PerformanceTest.FirstName");
	databaseRetrieveSource1.range = customRange1;   // Note: for this property a default value is defined.
	databaseRetrieveSource1.sortItemList = sortItemList1;   // Note: for this property a default value is defined.

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = databaseRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "FirstNameList";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":395,"y":200};
	actionActivity1.size = {"width":120,"height":60};
	actionActivity1.action = retrieveAction1;

	var integerType1 = datatypes.IntegerType.create(model);

	var createVariableAction1 = microflows.CreateVariableAction.create(model);
	createVariableAction1.variableName = "Offset";
	createVariableAction1.variableType = integerType1;   // Note: for this property a default value is defined.
	createVariableAction1.initialValue = "round(random()*150)";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":45,"y":200};
	actionActivity2.size = {"width":120,"height":60};
	actionActivity2.action = createVariableAction1;

	var stringType1 = datatypes.StringType.create(model);

	var createVariableAction2 = microflows.CreateVariableAction.create(model);
	createVariableAction2.variableName = "FullName";
	createVariableAction2.variableType = stringType1;   // Note: for this property a default value is defined.
	createVariableAction2.initialValue = "empty";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":-145,"y":200};
	actionActivity3.size = {"width":120,"height":60};
	actionActivity3.action = createVariableAction2;

	var head1 = microflows.Head.create(model);
	head1.listVariableName = "FirstNameList";

	var listOperationAction1 = microflows.ListOperationAction.create(model);
	listOperationAction1.operation = head1;   // Note: for this property a default value is defined.
	listOperationAction1.outputVariableName = "FirstName";

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":585,"y":200};
	actionActivity4.size = {"width":120,"height":60};
	actionActivity4.action = listOperationAction1;

	var customRange2 = microflows.CustomRange.create(model);
	customRange2.limitExpression = "1";
	customRange2.offsetExpression = "$Offset_1";

	var sortItemList2 = microflows.SortItemList.create(model);

	var databaseRetrieveSource2 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource2.entity = model.findEntityByQualifiedName("PerformanceTest.LastName");
	databaseRetrieveSource2.range = customRange2;   // Note: for this property a default value is defined.
	databaseRetrieveSource2.sortItemList = sortItemList2;   // Note: for this property a default value is defined.

	var retrieveAction2 = microflows.RetrieveAction.create(model);
	retrieveAction2.retrieveSource = databaseRetrieveSource2;   // Note: for this property a default value is defined.
	retrieveAction2.outputVariableName = "LastNameList";

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":1285,"y":200};
	actionActivity5.size = {"width":120,"height":60};
	actionActivity5.action = retrieveAction2;

	var integerType2 = datatypes.IntegerType.create(model);

	var createVariableAction3 = microflows.CreateVariableAction.create(model);
	createVariableAction3.variableName = "Offset_1";
	createVariableAction3.variableType = integerType2;   // Note: for this property a default value is defined.
	createVariableAction3.initialValue = "round(random()*150)";

	var actionActivity6 = microflows.ActionActivity.create(model);
	actionActivity6.relativeMiddlePoint = {"x":1095,"y":200};
	actionActivity6.size = {"width":120,"height":60};
	actionActivity6.action = createVariableAction3;

	var head2 = microflows.Head.create(model);
	head2.listVariableName = "LastNameList";

	var listOperationAction2 = microflows.ListOperationAction.create(model);
	listOperationAction2.operation = head2;   // Note: for this property a default value is defined.
	listOperationAction2.outputVariableName = "LastName";

	var actionActivity7 = microflows.ActionActivity.create(model);
	actionActivity7.relativeMiddlePoint = {"x":1465,"y":200};
	actionActivity7.size = {"width":120,"height":60};
	actionActivity7.action = listOperationAction2;

	var changeVariableAction1 = microflows.ChangeVariableAction.create(model);
	changeVariableAction1.changeVariableName = "FullName";
	changeVariableAction1.value = "$FirstName/Name + ' ' + $LastName/Name";

	var actionActivity8 = microflows.ActionActivity.create(model);
	actionActivity8.relativeMiddlePoint = {"x":1815,"y":200};
	actionActivity8.size = {"width":120,"height":60};
	actionActivity8.action = changeVariableAction1;

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":1935,"y":200};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "$FullName";

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$FirstName != empty";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":760,"y":200};
	exclusiveSplit1.size = {"width":90,"height":60};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "Result?";

	var exclusiveMerge1 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge1.relativeMiddlePoint = {"x":220,"y":200};
	exclusiveMerge1.size = {"width":90,"height":60};

	var exclusiveMerge2 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge2.relativeMiddlePoint = {"x":920,"y":200};
	exclusiveMerge2.size = {"width":90,"height":60};

	var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition2.expression = "$LastName != empty";

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":1640,"y":200};
	exclusiveSplit2.size = {"width":90,"height":60};
	exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
	exclusiveSplit2.caption = "Result?";

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(actionActivity5);
	microflowObjectCollection1.objects.push(actionActivity6);
	microflowObjectCollection1.objects.push(actionActivity7);
	microflowObjectCollection1.objects.push(actionActivity8);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(exclusiveMerge1);
	microflowObjectCollection1.objects.push(exclusiveMerge2);
	microflowObjectCollection1.objects.push(exclusiveSplit2);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":30,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow3.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":30,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow4.caseValue = noCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":30,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = noCase5;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 1;
	sequenceFlow6.destinationConnectionIndex = 3;
	sequenceFlow6.originBezierVector = {"width":30,"height":0};
	sequenceFlow6.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow6.caseValue = noCase6;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":30,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow7.caseValue = noCase7;   // Note: for this property a default value is defined.

	var noCase8 = microflows.NoCase.create(model);

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 1;
	sequenceFlow8.destinationConnectionIndex = 3;
	sequenceFlow8.originBezierVector = {"width":30,"height":0};
	sequenceFlow8.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow8.caseValue = noCase8;   // Note: for this property a default value is defined.

	var noCase9 = microflows.NoCase.create(model);

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 1;
	sequenceFlow9.destinationConnectionIndex = 3;
	sequenceFlow9.originBezierVector = {"width":30,"height":0};
	sequenceFlow9.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow9.caseValue = noCase9;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.originConnectionIndex = 1;
	sequenceFlow10.destinationConnectionIndex = 3;
	sequenceFlow10.originBezierVector = {"width":15,"height":0};
	sequenceFlow10.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow10.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var noCase10 = microflows.NoCase.create(model);

	var sequenceFlow11 = microflows.SequenceFlow.create(model);
	sequenceFlow11.originConnectionIndex = 1;
	sequenceFlow11.destinationConnectionIndex = 3;
	sequenceFlow11.originBezierVector = {"width":15,"height":0};
	sequenceFlow11.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow11.caseValue = noCase10;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "false";

	var sequenceFlow12 = microflows.SequenceFlow.create(model);
	sequenceFlow12.originBezierVector = {"width":-85,"height":-50};
	sequenceFlow12.destinationBezierVector = {"width":110,"height":-55};
	sequenceFlow12.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase11 = microflows.NoCase.create(model);

	var sequenceFlow13 = microflows.SequenceFlow.create(model);
	sequenceFlow13.originConnectionIndex = 1;
	sequenceFlow13.destinationConnectionIndex = 3;
	sequenceFlow13.originBezierVector = {"width":15,"height":0};
	sequenceFlow13.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow13.caseValue = noCase11;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "true";

	var sequenceFlow14 = microflows.SequenceFlow.create(model);
	sequenceFlow14.originConnectionIndex = 1;
	sequenceFlow14.destinationConnectionIndex = 3;
	sequenceFlow14.originBezierVector = {"width":15,"height":0};
	sequenceFlow14.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow14.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "false";

	var sequenceFlow15 = microflows.SequenceFlow.create(model);
	sequenceFlow15.originBezierVector = {"width":-180,"height":-50};
	sequenceFlow15.destinationBezierVector = {"width":130,"height":-50};
	sequenceFlow15.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var stringType2 = datatypes.StringType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);

	var sUB_GetName1 = microflows.Microflow.createIn(unit);
	sUB_GetName1.name = "SUB_GetName";
	sUB_GetName1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	sUB_GetName1.flows.push(sequenceFlow1);
	sUB_GetName1.flows.push(sequenceFlow2);
	sUB_GetName1.flows.push(sequenceFlow3);
	sUB_GetName1.flows.push(sequenceFlow4);
	sUB_GetName1.flows.push(sequenceFlow5);
	sUB_GetName1.flows.push(sequenceFlow6);
	sUB_GetName1.flows.push(sequenceFlow7);
	sUB_GetName1.flows.push(sequenceFlow8);
	sUB_GetName1.flows.push(sequenceFlow9);
	sUB_GetName1.flows.push(sequenceFlow10);
	sUB_GetName1.flows.push(sequenceFlow11);
	sUB_GetName1.flows.push(sequenceFlow12);
	sUB_GetName1.flows.push(sequenceFlow13);
	sUB_GetName1.flows.push(sequenceFlow14);
	sUB_GetName1.flows.push(sequenceFlow15);
	sUB_GetName1.microflowReturnType = stringType2;
	sUB_GetName1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity3;

	sequenceFlow2.origin = actionActivity1;
	sequenceFlow2.destination = actionActivity4;

	sequenceFlow3.origin = actionActivity2;
	sequenceFlow3.destination = exclusiveMerge1;

	sequenceFlow4.origin = actionActivity3;
	sequenceFlow4.destination = actionActivity2;

	sequenceFlow5.origin = actionActivity5;
	sequenceFlow5.destination = actionActivity7;

	sequenceFlow6.origin = actionActivity6;
	sequenceFlow6.destination = actionActivity5;

	sequenceFlow7.origin = actionActivity4;
	sequenceFlow7.destination = exclusiveSplit1;

	sequenceFlow8.origin = actionActivity7;
	sequenceFlow8.destination = exclusiveSplit2;

	sequenceFlow9.origin = actionActivity8;
	sequenceFlow9.destination = endEvent1;

	sequenceFlow10.origin = exclusiveSplit1;
	sequenceFlow10.destination = exclusiveMerge2;

	sequenceFlow11.origin = exclusiveMerge1;
	sequenceFlow11.destination = actionActivity1;

	sequenceFlow12.origin = exclusiveSplit1;
	sequenceFlow12.destination = exclusiveMerge1;

	sequenceFlow13.origin = exclusiveMerge2;
	sequenceFlow13.destination = actionActivity6;

	sequenceFlow14.origin = exclusiveSplit2;
	sequenceFlow14.destination = actionActivity8;

	sequenceFlow15.origin = exclusiveSplit2;
	sequenceFlow15.destination = exclusiveMerge2;

})