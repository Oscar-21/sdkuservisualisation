(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "41e5308f-ce21-4616-898b-565c3f5e50d8" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$AccountPasswordData/NewPassword = $AccountPasswordData/ConfirmPassword";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":430,"y":200};
	exclusiveSplit1.size = {"width":130,"height":80};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "Passwords equal?";

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";
	translation1.text = "The entered passwords do not match.";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "nl_NL";
	translation2.text = "De ingevoerde wachtwoorden zijn niet gelijk.";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);

	var textTemplate1 = microflows.TextTemplate.create(model);
	textTemplate1.text = text1;   // Note: for this property a default value is defined.

	var showMessageAction1 = microflows.ShowMessageAction.create(model);
	showMessageAction1.template = textTemplate1;   // Note: for this property a default value is defined.
	showMessageAction1.type = microflows.ShowMessageType.Error;

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":430,"y":75};
	actionActivity1.size = {"width":120,"height":60};
	actionActivity1.action = showMessageAction1;

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":430,"y":-20};
	endEvent1.size = {"width":20,"height":20};

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":145,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":1090,"y":200};
	endEvent2.size = {"width":20,"height":20};

	var memberChange1 = microflows.MemberChange.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	memberChange1.__attribute.updateWithRawValue("System.User.Password");
	memberChange1.value = "$AccountPasswordData/NewPassword";

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.items.push(memberChange1);
	changeObjectAction1.refreshInClient = true;
	changeObjectAction1.commit = microflows.CommitEnum.Yes;
	changeObjectAction1.changeVariableName = "Account";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":635,"y":200};
	actionActivity2.size = {"width":120,"height":60};
	actionActivity2.action = changeObjectAction1;
	actionActivity2.caption = "Set password and save account";
	actionActivity2.autoGenerateCaption = false;

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("Administration.AccountPasswordData");

	var accountPasswordData1 = microflows.MicroflowParameterObject.create(model);
	accountPasswordData1.relativeMiddlePoint = {"x":145,"y":75};
	accountPasswordData1.size = {"width":30,"height":30};
	accountPasswordData1.name = "AccountPasswordData";
	accountPasswordData1.variableType = objectType1;   // Note: for this property a default value is defined.

	var associationRetrieveSource1 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource1.startVariableName = "AccountPasswordData";
	associationRetrieveSource1.association = model.findAssociationBaseByQualifiedName("Administration.AccountPasswordData_Account");

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = associationRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "Account";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":260,"y":200};
	actionActivity3.size = {"width":120,"height":60};
	actionActivity3.action = retrieveAction1;

	var deleteAction1 = microflows.DeleteAction.create(model);
	deleteAction1.deleteVariableName = "AccountPasswordData";

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":805,"y":200};
	actionActivity4.size = {"width":120,"height":60};
	actionActivity4.action = deleteAction1;

	var closeFormAction1 = microflows.CloseFormAction.create(model);

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":975,"y":200};
	actionActivity5.size = {"width":120,"height":60};
	actionActivity5.action = closeFormAction1;

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(accountPasswordData1);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(actionActivity5);

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":15,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "false";

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.destinationConnectionIndex = 2;
	sequenceFlow2.originBezierVector = {"width":0,"height":-15};
	sequenceFlow2.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow2.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.destinationConnectionIndex = 2;
	sequenceFlow3.originBezierVector = {"width":0,"height":-30};
	sequenceFlow3.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow3.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":30,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow4.caseValue = noCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":15,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 1;
	sequenceFlow6.destinationConnectionIndex = 3;
	sequenceFlow6.originBezierVector = {"width":30,"height":0};
	sequenceFlow6.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow6.caseValue = noCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":30,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow7.caseValue = noCase5;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 1;
	sequenceFlow8.destinationConnectionIndex = 3;
	sequenceFlow8.originBezierVector = {"width":30,"height":0};
	sequenceFlow8.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow8.caseValue = noCase6;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_US";

	var text2 = texts.Text.create(model);
	text2.translations.push(translation3);

	var saveNewAccount1 = microflows.Microflow.createIn(unit);
	saveNewAccount1.name = "SaveNewAccount";
	saveNewAccount1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	saveNewAccount1.flows.push(sequenceFlow1);
	saveNewAccount1.flows.push(sequenceFlow2);
	saveNewAccount1.flows.push(sequenceFlow3);
	saveNewAccount1.flows.push(sequenceFlow4);
	saveNewAccount1.flows.push(sequenceFlow5);
	saveNewAccount1.flows.push(sequenceFlow6);
	saveNewAccount1.flows.push(sequenceFlow7);
	saveNewAccount1.flows.push(sequenceFlow8);
	saveNewAccount1.microflowReturnType = voidType1;
	saveNewAccount1.allowedModuleRoles.push(model.findModuleRoleByQualifiedName("Administration.Administrator"));
	saveNewAccount1.concurrencyErrorMessage = text2;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = exclusiveSplit1;
	sequenceFlow1.destination = actionActivity2;

	sequenceFlow2.origin = exclusiveSplit1;
	sequenceFlow2.destination = actionActivity1;

	sequenceFlow3.origin = actionActivity1;
	sequenceFlow3.destination = endEvent1;

	sequenceFlow4.origin = actionActivity2;
	sequenceFlow4.destination = actionActivity4;

	sequenceFlow5.origin = startEvent1;
	sequenceFlow5.destination = actionActivity3;

	sequenceFlow6.origin = actionActivity3;
	sequenceFlow6.destination = exclusiveSplit1;

	sequenceFlow7.origin = actionActivity4;
	sequenceFlow7.destination = actionActivity5;

	sequenceFlow8.origin = actionActivity5;
	sequenceFlow8.destination = endEvent2;

})