(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "889c9856-16a2-4819-8ffa-5e3cde6bbab0" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var javaActionCallAction1 = microflows.JavaActionCallAction.create(model);
	javaActionCallAction1.errorHandlingType = microflows.ErrorHandlingType.Custom;
	javaActionCallAction1.javaAction = model.findJavaActionByQualifiedName("MxModelReflection.SyncObjects");
	javaActionCallAction1.outputVariableName = "none";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":365,"y":90};
	actionActivity1.size = {"width":160,"height":60};
	actionActivity1.action = javaActionCallAction1;
	actionActivity1.caption = "Sync all mx model reflection objects with the metamodel";
	actionActivity1.autoGenerateCaption = false;

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":495,"y":90};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "true";

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":235,"y":90};
	startEvent1.size = {"width":20,"height":20};

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":365,"y":-45};
	endEvent2.size = {"width":20,"height":20};
	endEvent2.returnValue = "true";

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(endEvent2);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.destinationConnectionIndex = 2;
	sequenceFlow3.originBezierVector = {"width":0,"height":-30};
	sequenceFlow3.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow3.caseValue = noCase3;   // Note: for this property a default value is defined.
	sequenceFlow3.isErrorHandler = true;

	var booleanType1 = datatypes.BooleanType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "en_GB";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_ZA";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);

	var aSu_CheckMetamodel1 = microflows.Microflow.createIn(unit);
	aSu_CheckMetamodel1.name = "ASu_CheckMetamodel";
	aSu_CheckMetamodel1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	aSu_CheckMetamodel1.flows.push(sequenceFlow1);
	aSu_CheckMetamodel1.flows.push(sequenceFlow2);
	aSu_CheckMetamodel1.flows.push(sequenceFlow3);
	aSu_CheckMetamodel1.microflowReturnType = booleanType1;
	aSu_CheckMetamodel1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity1;

	sequenceFlow2.origin = actionActivity1;
	sequenceFlow2.destination = endEvent1;

	sequenceFlow3.origin = actionActivity1;
	sequenceFlow3.destination = endEvent2;

})