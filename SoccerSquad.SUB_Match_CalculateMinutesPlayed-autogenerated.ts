import {MendixPlatformClient} from "mendixplatformsdk";
import {
	IModel,
	domainmodels,
	microflows,
	pages,
	navigation,
	datatypes,
	security,
	texts,
	IStructure,
	menus,
	projects,
	AbstractProperty,
	PartListProperty,
	PartProperty,
	ByIdReferenceProperty,
	ByNameReferenceProperty,
	ByNameReferenceListProperty,
	LocalByNameReferenceProperty,
	PrimitiveProperty,
	StructuralChildProperty,
	StructuralChildListProperty,
	PrimitiveListProperty,
	JavaScriptSerializer,
	IAbstractUnit
} from "mendixmodelsdk";
import * as fs from "fs";
import NativeNavigationProfile = navigation.NativeNavigationProfile;
import NavigationProfile = navigation.NavigationProfile;
import Entity = domainmodels.Entity;
import IEntity = domainmodels.IEntity;
import IFolderBase = projects.IFolderBase;
import IModuleRole = security.IModuleRole;
import FolderBase = projects.FolderBase;
const folder: IFolderBase = null as unknown as IFolderBase;
const applicationModel: IModel = null as unknown as IModel;
(function (unit: IFolderBase, model: IModel) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "37c2d324-991d-4f29-8ccd-a6a59c675378" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":-190,"y":-130};
	startEvent1.size = {"width":20,"height":20};

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":1300,"y":-130};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "$MinutesPlayed";

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("SoccerSquad.Match");

	var match1 = microflows.MicroflowParameterObject.create(model);
	match1.relativeMiddlePoint = {"x":-190,"y":-315};
	match1.size = {"width":30,"height":30};
	match1.name = "Match";
	match1.variableType = objectType1;   // Note: for this property a default value is defined.

	// var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	// expressionSplitCondition1.expression = "$Match/StartDateTime != empty";

	// var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	// exclusiveSplit1.relativeMiddlePoint = {"x":140,"y":-130};
	// exclusiveSplit1.size = {"width":90,"height":60};
	// exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	// exclusiveSplit1.caption = "StartDate set?";

	var decimalType1 = datatypes.DecimalType.create(model);

	var createVariableAction1 = microflows.CreateVariableAction.create(model);
	createVariableAction1.variableName = "MinutesSinceStartTime";
	createVariableAction1.variableType = decimalType1;   // Note: for this property a default value is defined.
	createVariableAction1.initialValue = "minutesBetween($Match/StartDateTime, [%CurrentDateTime%])";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":315,"y":-130};
	actionActivity1.size = {"width":120,"height":60};
	actionActivity1.action = createVariableAction1;

	var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition2.expression = "$Match/StartDateTime < [%CurrentDateTime%]";

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":505,"y":-130};
	exclusiveSplit2.size = {"width":90,"height":60};
	exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
	exclusiveSplit2.caption = "Started?";

	var expressionSplitCondition3 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition3.expression = "$MinutesSinceStartTime > 45";

	var exclusiveSplit3 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit3.relativeMiddlePoint = {"x":665,"y":-130};
	exclusiveSplit3.size = {"width":90,"height":60};
	exclusiveSplit3.splitCondition = expressionSplitCondition3;   // Note: for this property a default value is defined.
	exclusiveSplit3.caption = "More then 45 min played?";

	var expressionSplitCondition4 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition4.expression = "$MinutesSinceStartTime > 60";

	var exclusiveSplit4 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit4.relativeMiddlePoint = {"x":825,"y":-130};
	exclusiveSplit4.size = {"width":90,"height":60};
	exclusiveSplit4.splitCondition = expressionSplitCondition4;   // Note: for this property a default value is defined.
	exclusiveSplit4.caption = "Halftime done?";

	var expressionSplitCondition5 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition5.expression = "$MinutesSinceStartTime > 105";

	var exclusiveSplit5 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit5.relativeMiddlePoint = {"x":985,"y":-130};
	exclusiveSplit5.size = {"width":90,"height":60};
	exclusiveSplit5.splitCondition = expressionSplitCondition5;   // Note: for this property a default value is defined.
	exclusiveSplit5.caption = "Match done?";

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":140,"y":245};
	endEvent2.size = {"width":20,"height":20};
	endEvent2.returnValue = "$MinutesPlayed";

	var endEvent3 = microflows.EndEvent.create(model);
	endEvent3.relativeMiddlePoint = {"x":505,"y":245};
	endEvent3.size = {"width":20,"height":20};
	endEvent3.returnValue = "$MinutesPlayed";

	var endEvent4 = microflows.EndEvent.create(model);
	endEvent4.relativeMiddlePoint = {"x":665,"y":245};
	endEvent4.size = {"width":20,"height":20};
	endEvent4.returnValue = "$MinutesPlayed";

	var endEvent5 = microflows.EndEvent.create(model);
	endEvent5.relativeMiddlePoint = {"x":825,"y":245};
	endEvent5.size = {"width":20,"height":20};
	endEvent5.returnValue = "$MinutesPlayed";

	var endEvent6 = microflows.EndEvent.create(model);
	endEvent6.relativeMiddlePoint = {"x":985,"y":245};
	endEvent6.size = {"width":20,"height":20};
	endEvent6.returnValue = "$MinutesPlayed";

	var decimalType2 = datatypes.DecimalType.create(model);

	var createVariableAction2 = microflows.CreateVariableAction.create(model);
	createVariableAction2.variableName = "HourseTillStartTime";
	createVariableAction2.variableType = decimalType2;   // Note: for this property a default value is defined.
	createVariableAction2.initialValue = "hoursBetween($Match/StartDateTime, [%CurrentDateTime%])";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":505,"y":10};
	actionActivity2.size = {"width":120,"height":60};
	actionActivity2.action = createVariableAction2;

	var stringType1 = datatypes.StringType.create(model);

	var createVariableAction3 = microflows.CreateVariableAction.create(model);
	createVariableAction3.variableName = "MinutesPlayed";
	createVariableAction3.variableType = stringType1;   // Note: for this property a default value is defined.
	createVariableAction3.initialValue = "''";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":-50,"y":-130};
	actionActivity3.size = {"width":120,"height":60};
	actionActivity3.action = createVariableAction3;

	var changeVariableAction1 = microflows.ChangeVariableAction.create(model);
	changeVariableAction1.changeVariableName = "MinutesPlayed";
	changeVariableAction1.value = "'Match will start in ' + toString(round($HourseTillStartTime)) + ' Hours'";

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":505,"y":155};
	actionActivity4.size = {"width":120,"height":60};
	actionActivity4.action = changeVariableAction1;

	var changeVariableAction2 = microflows.ChangeVariableAction.create(model);
	changeVariableAction2.changeVariableName = "MinutesPlayed";
	changeVariableAction2.value = "toString(round($MinutesSinceStartTime)) + ' minutes played'";

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":665,"y":155};
	actionActivity5.size = {"width":120,"height":60};
	actionActivity5.action = changeVariableAction2;

	var changeVariableAction3 = microflows.ChangeVariableAction.create(model);
	changeVariableAction3.changeVariableName = "MinutesPlayed";
	changeVariableAction3.value = "'Halftime'";

	var actionActivity6 = microflows.ActionActivity.create(model);
	actionActivity6.relativeMiddlePoint = {"x":825,"y":155};
	actionActivity6.size = {"width":120,"height":60};
	actionActivity6.action = changeVariableAction3;

	var changeVariableAction4 = microflows.ChangeVariableAction.create(model);
	changeVariableAction4.changeVariableName = "MinutesPlayed";
	changeVariableAction4.value = "toString(round($MinutesSinceStartTime -15)) + ' minutes played'";

	var actionActivity7 = microflows.ActionActivity.create(model);
	actionActivity7.relativeMiddlePoint = {"x":985,"y":155};
	actionActivity7.size = {"width":120,"height":60};
	actionActivity7.action = changeVariableAction4;

	var changeVariableAction5 = microflows.ChangeVariableAction.create(model);
	changeVariableAction5.changeVariableName = "MinutesPlayed";
	changeVariableAction5.value = "'Ended'";

	var actionActivity8 = microflows.ActionActivity.create(model);
	actionActivity8.relativeMiddlePoint = {"x":1160,"y":-130};
	actionActivity8.size = {"width":120,"height":60};
	actionActivity8.action = changeVariableAction5;

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(match1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(exclusiveSplit2);
	microflowObjectCollection1.objects.push(exclusiveSplit3);
	microflowObjectCollection1.objects.push(exclusiveSplit4);
	microflowObjectCollection1.objects.push(exclusiveSplit5);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(endEvent3);
	microflowObjectCollection1.objects.push(endEvent4);
	microflowObjectCollection1.objects.push(endEvent5);
	microflowObjectCollection1.objects.push(endEvent6);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(actionActivity5);
	microflowObjectCollection1.objects.push(actionActivity6);
	microflowObjectCollection1.objects.push(actionActivity7);
	microflowObjectCollection1.objects.push(actionActivity8);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":15,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":30,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow3.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "true";

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":15,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow4.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "true";

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":15,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow5.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "true";

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 1;
	sequenceFlow6.destinationConnectionIndex = 3;
	sequenceFlow6.originBezierVector = {"width":15,"height":0};
	sequenceFlow6.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow6.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var enumerationCase5 = microflows.EnumerationCase.create(model);
	enumerationCase5.value = "true";

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":15,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow7.caseValue = enumerationCase5;   // Note: for this property a default value is defined.

	var enumerationCase6 = microflows.EnumerationCase.create(model);
	enumerationCase6.value = "false";

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 2;
	sequenceFlow8.originBezierVector = {"width":0,"height":15};
	sequenceFlow8.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow8.caseValue = enumerationCase6;   // Note: for this property a default value is defined.

	var enumerationCase7 = microflows.EnumerationCase.create(model);
	enumerationCase7.value = "false";

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 2;
	sequenceFlow9.originBezierVector = {"width":0,"height":15};
	sequenceFlow9.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow9.caseValue = enumerationCase7;   // Note: for this property a default value is defined.

	var enumerationCase8 = microflows.EnumerationCase.create(model);
	enumerationCase8.value = "false";

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.originConnectionIndex = 2;
	sequenceFlow10.originBezierVector = {"width":0,"height":15};
	sequenceFlow10.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow10.caseValue = enumerationCase8;   // Note: for this property a default value is defined.

	var enumerationCase9 = microflows.EnumerationCase.create(model);
	enumerationCase9.value = "false";

	var sequenceFlow11 = microflows.SequenceFlow.create(model);
	sequenceFlow11.originConnectionIndex = 2;
	sequenceFlow11.originBezierVector = {"width":0,"height":15};
	sequenceFlow11.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow11.caseValue = enumerationCase9;   // Note: for this property a default value is defined.

	var enumerationCase10 = microflows.EnumerationCase.create(model);
	enumerationCase10.value = "false";

	var sequenceFlow12 = microflows.SequenceFlow.create(model);
	sequenceFlow12.originConnectionIndex = 2;
	sequenceFlow12.originBezierVector = {"width":0,"height":15};
	sequenceFlow12.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow12.caseValue = enumerationCase10;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow13 = microflows.SequenceFlow.create(model);
	sequenceFlow13.originConnectionIndex = 2;
	sequenceFlow13.originBezierVector = {"width":0,"height":30};
	sequenceFlow13.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow13.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow14 = microflows.SequenceFlow.create(model);
	sequenceFlow14.originConnectionIndex = 1;
	sequenceFlow14.destinationConnectionIndex = 3;
	sequenceFlow14.originBezierVector = {"width":30,"height":0};
	sequenceFlow14.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow14.caseValue = noCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	// var sequenceFlow15 = microflows.SequenceFlow.create(model);
	// sequenceFlow15.originConnectionIndex = 2;
	// sequenceFlow15.originBezierVector = {"width":0,"height":30};
	// sequenceFlow15.destinationBezierVector = {"width":0,"height":-15};
	// sequenceFlow15.caseValue = noCase5;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow16 = microflows.SequenceFlow.create(model);
	sequenceFlow16.originConnectionIndex = 1;
	sequenceFlow16.destinationConnectionIndex = 3;
	sequenceFlow16.originBezierVector = {"width":30,"height":0};
	sequenceFlow16.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow16.caseValue = noCase6;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow17 = microflows.SequenceFlow.create(model);
	sequenceFlow17.originConnectionIndex = 2;
	sequenceFlow17.originBezierVector = {"width":0,"height":30};
	sequenceFlow17.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow17.caseValue = noCase7;   // Note: for this property a default value is defined.

	var noCase8 = microflows.NoCase.create(model);

	var sequenceFlow18 = microflows.SequenceFlow.create(model);
	sequenceFlow18.originConnectionIndex = 2;
	sequenceFlow18.originBezierVector = {"width":0,"height":30};
	sequenceFlow18.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow18.caseValue = noCase8;   // Note: for this property a default value is defined.

	var noCase9 = microflows.NoCase.create(model);

	var sequenceFlow19 = microflows.SequenceFlow.create(model);
	sequenceFlow19.originConnectionIndex = 2;
	sequenceFlow19.originBezierVector = {"width":0,"height":30};
	sequenceFlow19.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow19.caseValue = noCase9;   // Note: for this property a default value is defined.

	var stringType2 = datatypes.StringType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);

	var sUB_Match_CalculateMinutesPlayed1 = microflows.Microflow.createIn(unit);
	sUB_Match_CalculateMinutesPlayed1.name = "SUB_Match_CalculateMinutesPlayed";
	sUB_Match_CalculateMinutesPlayed1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow1);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow2);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow3);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow4);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow5);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow6);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow7);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow8);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow9);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow10);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow11);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow12);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow13);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow14);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow15);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow16);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow17);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow18);
	sUB_Match_CalculateMinutesPlayed1.flows.push(sequenceFlow19);
	sUB_Match_CalculateMinutesPlayed1.microflowReturnType = stringType2;
	sUB_Match_CalculateMinutesPlayed1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity3;

	sequenceFlow2.origin = exclusiveSplit1;
	sequenceFlow2.destination = actionActivity1;

	sequenceFlow3.origin = actionActivity1;
	sequenceFlow3.destination = exclusiveSplit2;

	sequenceFlow4.origin = exclusiveSplit2;
	sequenceFlow4.destination = exclusiveSplit3;

	sequenceFlow5.origin = exclusiveSplit3;
	sequenceFlow5.destination = exclusiveSplit4;

	sequenceFlow6.origin = exclusiveSplit4;
	sequenceFlow6.destination = exclusiveSplit5;

	sequenceFlow7.origin = exclusiveSplit5;
	sequenceFlow7.destination = actionActivity8;

	sequenceFlow8.origin = exclusiveSplit1;
	sequenceFlow8.destination = endEvent2;

	sequenceFlow9.origin = exclusiveSplit2;
	sequenceFlow9.destination = actionActivity2;

	sequenceFlow10.origin = exclusiveSplit3;
	sequenceFlow10.destination = actionActivity5;

	sequenceFlow11.origin = exclusiveSplit4;
	sequenceFlow11.destination = actionActivity6;

	sequenceFlow12.origin = exclusiveSplit5;
	sequenceFlow12.destination = actionActivity7;

	sequenceFlow13.origin = actionActivity2;
	sequenceFlow13.destination = actionActivity4;

	sequenceFlow14.origin = actionActivity3;
	sequenceFlow14.destination = exclusiveSplit1;

	sequenceFlow15.origin = actionActivity4;
	sequenceFlow15.destination = endEvent3;

	sequenceFlow16.origin = actionActivity8;
	sequenceFlow16.destination = endEvent1;

	sequenceFlow17.origin = actionActivity7;
	sequenceFlow17.destination = endEvent6;

	sequenceFlow18.origin = actionActivity6;
	sequenceFlow18.destination = endEvent5;

	sequenceFlow19.origin = actionActivity5;
	sequenceFlow19.destination = endEvent4;

})(folder, applicationModel);
