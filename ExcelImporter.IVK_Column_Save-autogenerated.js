(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "0324da17-2e5b-419e-bf18-2ffbe888d90c" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":-145,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("ExcelImporter.Column");

	var column1 = microflows.MicroflowParameterObject.create(model);
	column1.relativeMiddlePoint = {"x":-145,"y":105};
	column1.size = {"width":30,"height":30};
	column1.name = "Column";
	column1.variableType = objectType1;   // Note: for this property a default value is defined.

	var booleanType1 = datatypes.BooleanType.create(model);

	var createVariableAction1 = microflows.CreateVariableAction.create(model);
	createVariableAction1.variableName = "Valid";
	createVariableAction1.variableType = booleanType1;   // Note: for this property a default value is defined.
	createVariableAction1.initialValue = "true";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":-65,"y":200};
	actionActivity1.size = {"width":80,"height":60};
	actionActivity1.action = createVariableAction1;
	actionActivity1.caption = "Create Boolean valid";
	actionActivity1.autoGenerateCaption = false;

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$Column/ColNumber != empty";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":310,"y":200};
	exclusiveSplit1.size = {"width":80,"height":60};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "has col number?";

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";
	translation1.text = "This field is required";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "nl_NL";
	translation2.text = "Dit veld is verplicht";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_GB";
	translation3.text = "This field is required";

	var translation4 = texts.Translation.create(model);
	translation4.languageCode = "en_ZA";
	translation4.text = "This field is required";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);
	text1.translations.push(translation4);

	var textTemplate1 = microflows.TextTemplate.create(model);
	textTemplate1.text = text1;   // Note: for this property a default value is defined.

	var validationFeedbackAction1 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction1.feedbackTemplate = textTemplate1;   // Note: for this property a default value is defined.
	validationFeedbackAction1.objectVariableName = "Column";
	validationFeedbackAction1.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.ColNumber");

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":310,"y":105};
	actionActivity2.size = {"width":90,"height":50};
	actionActivity2.action = validationFeedbackAction1;
	actionActivity2.caption = "Show required msg";
	actionActivity2.autoGenerateCaption = false;

	var exclusiveMerge1 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge1.relativeMiddlePoint = {"x":445,"y":200};
	exclusiveMerge1.size = {"width":60,"height":40};

	var changeVariableAction1 = microflows.ChangeVariableAction.create(model);
	changeVariableAction1.changeVariableName = "Valid";
	changeVariableAction1.value = "false";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":445,"y":105};
	actionActivity3.size = {"width":90,"height":60};
	actionActivity3.action = changeVariableAction1;
	actionActivity3.caption = "Set valid to false";
	actionActivity3.autoGenerateCaption = false;

	var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition2.expression = "$Column/Text != empty and $Column/Text != ''";

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":550,"y":200};
	exclusiveSplit2.size = {"width":80,"height":60};
	exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
	exclusiveSplit2.caption = "has text?";

	var translation5 = texts.Translation.create(model);
	translation5.languageCode = "en_US";
	translation5.text = "This field is required";

	var translation6 = texts.Translation.create(model);
	translation6.languageCode = "nl_NL";
	translation6.text = "Dit veld is verplicht";

	var translation7 = texts.Translation.create(model);
	translation7.languageCode = "en_GB";
	translation7.text = "This field is required";

	var translation8 = texts.Translation.create(model);
	translation8.languageCode = "en_ZA";
	translation8.text = "This field is required";

	var text2 = texts.Text.create(model);
	text2.translations.push(translation5);
	text2.translations.push(translation6);
	text2.translations.push(translation7);
	text2.translations.push(translation8);

	var textTemplate2 = microflows.TextTemplate.create(model);
	textTemplate2.text = text2;   // Note: for this property a default value is defined.

	var validationFeedbackAction2 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction2.feedbackTemplate = textTemplate2;   // Note: for this property a default value is defined.
	validationFeedbackAction2.objectVariableName = "Column";
	validationFeedbackAction2.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.Text");

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":550,"y":105};
	actionActivity4.size = {"width":90,"height":50};
	actionActivity4.action = validationFeedbackAction2;
	actionActivity4.caption = "Show required msg";
	actionActivity4.autoGenerateCaption = false;

	var exclusiveMerge2 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge2.relativeMiddlePoint = {"x":685,"y":200};
	exclusiveMerge2.size = {"width":60,"height":40};

	var changeVariableAction2 = microflows.ChangeVariableAction.create(model);
	changeVariableAction2.changeVariableName = "Valid";
	changeVariableAction2.value = "false";

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":685,"y":105};
	actionActivity5.size = {"width":90,"height":60};
	actionActivity5.action = changeVariableAction2;
	actionActivity5.caption = "Set valid to false";
	actionActivity5.autoGenerateCaption = false;

	var expressionSplitCondition3 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition3.expression = "$Column/MappingType";

	var exclusiveSplit3 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit3.relativeMiddlePoint = {"x":790,"y":200};
	exclusiveSplit3.size = {"width":80,"height":60};
	exclusiveSplit3.splitCondition = expressionSplitCondition3;   // Note: for this property a default value is defined.
	exclusiveSplit3.caption = "mapping type";

	var translation9 = texts.Translation.create(model);
	translation9.languageCode = "en_US";
	translation9.text = "This field is required";

	var translation10 = texts.Translation.create(model);
	translation10.languageCode = "nl_NL";
	translation10.text = "Dit veld is verplicht";

	var translation11 = texts.Translation.create(model);
	translation11.languageCode = "en_GB";
	translation11.text = "This field is required";

	var translation12 = texts.Translation.create(model);
	translation12.languageCode = "en_ZA";
	translation12.text = "This field is required";

	var text3 = texts.Text.create(model);
	text3.translations.push(translation9);
	text3.translations.push(translation10);
	text3.translations.push(translation11);
	text3.translations.push(translation12);

	var textTemplate3 = microflows.TextTemplate.create(model);
	textTemplate3.text = text3;   // Note: for this property a default value is defined.

	var validationFeedbackAction3 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction3.feedbackTemplate = textTemplate3;   // Note: for this property a default value is defined.
	validationFeedbackAction3.objectVariableName = "Column";
	validationFeedbackAction3.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.MappingType");

	var actionActivity6 = microflows.ActionActivity.create(model);
	actionActivity6.relativeMiddlePoint = {"x":790,"y":-65};
	actionActivity6.size = {"width":90,"height":50};
	actionActivity6.action = validationFeedbackAction3;
	actionActivity6.caption = "Show required msg";
	actionActivity6.autoGenerateCaption = false;

	var changeVariableAction3 = microflows.ChangeVariableAction.create(model);
	changeVariableAction3.changeVariableName = "Valid";
	changeVariableAction3.value = "false";

	var actionActivity7 = microflows.ActionActivity.create(model);
	actionActivity7.relativeMiddlePoint = {"x":920,"y":-65};
	actionActivity7.size = {"width":90,"height":60};
	actionActivity7.action = changeVariableAction3;
	actionActivity7.caption = "Set valid to false";
	actionActivity7.autoGenerateCaption = false;

	var exclusiveMerge3 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge3.relativeMiddlePoint = {"x":1095,"y":200};
	exclusiveMerge3.size = {"width":60,"height":40};

	var changeVariableAction4 = microflows.ChangeVariableAction.create(model);
	changeVariableAction4.changeVariableName = "Valid";
	changeVariableAction4.value = "false";

	var actionActivity8 = microflows.ActionActivity.create(model);
	actionActivity8.relativeMiddlePoint = {"x":1095,"y":105};
	actionActivity8.size = {"width":90,"height":60};
	actionActivity8.action = changeVariableAction4;
	actionActivity8.caption = "Set valid to false";
	actionActivity8.autoGenerateCaption = false;

	var translation13 = texts.Translation.create(model);
	translation13.languageCode = "en_US";
	translation13.text = "This field is required";

	var translation14 = texts.Translation.create(model);
	translation14.languageCode = "nl_NL";
	translation14.text = "Dit veld is verplicht";

	var translation15 = texts.Translation.create(model);
	translation15.languageCode = "en_GB";
	translation15.text = "This field is required";

	var translation16 = texts.Translation.create(model);
	translation16.languageCode = "en_ZA";
	translation16.text = "This field is required";

	var text4 = texts.Text.create(model);
	text4.translations.push(translation13);
	text4.translations.push(translation14);
	text4.translations.push(translation15);
	text4.translations.push(translation16);

	var textTemplate4 = microflows.TextTemplate.create(model);
	textTemplate4.text = text4;   // Note: for this property a default value is defined.

	var validationFeedbackAction4 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction4.feedbackTemplate = textTemplate4;   // Note: for this property a default value is defined.
	validationFeedbackAction4.objectVariableName = "Column";
	validationFeedbackAction4.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.IsKey");

	var actionActivity9 = microflows.ActionActivity.create(model);
	actionActivity9.relativeMiddlePoint = {"x":965,"y":105};
	actionActivity9.size = {"width":90,"height":50};
	actionActivity9.action = validationFeedbackAction4;
	actionActivity9.caption = "Show required msg";
	actionActivity9.autoGenerateCaption = false;

	var expressionSplitCondition4 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition4.expression = "$Column/IsKey != empty";

	var exclusiveSplit4 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit4.relativeMiddlePoint = {"x":965,"y":200};
	exclusiveSplit4.size = {"width":80,"height":60};
	exclusiveSplit4.splitCondition = expressionSplitCondition4;   // Note: for this property a default value is defined.
	exclusiveSplit4.caption = "has key?";

	var exclusiveMerge4 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge4.relativeMiddlePoint = {"x":1345,"y":200};
	exclusiveMerge4.size = {"width":60,"height":40};

	var changeVariableAction5 = microflows.ChangeVariableAction.create(model);
	changeVariableAction5.changeVariableName = "Valid";
	changeVariableAction5.value = "false";

	var actionActivity10 = microflows.ActionActivity.create(model);
	actionActivity10.relativeMiddlePoint = {"x":1345,"y":105};
	actionActivity10.size = {"width":90,"height":60};
	actionActivity10.action = changeVariableAction5;
	actionActivity10.caption = "Set valid to false";
	actionActivity10.autoGenerateCaption = false;

	var translation17 = texts.Translation.create(model);
	translation17.languageCode = "en_US";
	translation17.text = "This field is required";

	var translation18 = texts.Translation.create(model);
	translation18.languageCode = "nl_NL";
	translation18.text = "Dit veld is verplicht";

	var translation19 = texts.Translation.create(model);
	translation19.languageCode = "en_GB";
	translation19.text = "This field is required";

	var translation20 = texts.Translation.create(model);
	translation20.languageCode = "en_ZA";
	translation20.text = "This field is required";

	var text5 = texts.Text.create(model);
	text5.translations.push(translation17);
	text5.translations.push(translation18);
	text5.translations.push(translation19);
	text5.translations.push(translation20);

	var textTemplate5 = microflows.TextTemplate.create(model);
	textTemplate5.text = text5;   // Note: for this property a default value is defined.

	var validationFeedbackAction5 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction5.feedbackTemplate = textTemplate5;   // Note: for this property a default value is defined.
	validationFeedbackAction5.objectVariableName = "Column";
	validationFeedbackAction5.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectMember");

	var actionActivity11 = microflows.ActionActivity.create(model);
	actionActivity11.relativeMiddlePoint = {"x":1215,"y":105};
	actionActivity11.size = {"width":90,"height":50};
	actionActivity11.action = validationFeedbackAction5;
	actionActivity11.caption = "Show required msg";
	actionActivity11.autoGenerateCaption = false;

	var expressionSplitCondition5 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition5.expression = "$Column/ExcelImporter.Column_MxObjectMember != empty ";

	var exclusiveSplit5 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit5.relativeMiddlePoint = {"x":1215,"y":200};
	exclusiveSplit5.size = {"width":80,"height":60};
	exclusiveSplit5.splitCondition = expressionSplitCondition5;   // Note: for this property a default value is defined.
	exclusiveSplit5.caption = "has attribute?";

	var exclusiveMerge5 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge5.relativeMiddlePoint = {"x":1095,"y":400};
	exclusiveMerge5.size = {"width":60,"height":40};

	var changeVariableAction6 = microflows.ChangeVariableAction.create(model);
	changeVariableAction6.changeVariableName = "Valid";
	changeVariableAction6.value = "false";

	var actionActivity12 = microflows.ActionActivity.create(model);
	actionActivity12.relativeMiddlePoint = {"x":1095,"y":305};
	actionActivity12.size = {"width":90,"height":60};
	actionActivity12.action = changeVariableAction6;
	actionActivity12.caption = "Set valid to false";
	actionActivity12.autoGenerateCaption = false;

	var translation21 = texts.Translation.create(model);
	translation21.languageCode = "en_US";
	translation21.text = "This field is required";

	var translation22 = texts.Translation.create(model);
	translation22.languageCode = "nl_NL";
	translation22.text = "Dit veld is verplicht";

	var translation23 = texts.Translation.create(model);
	translation23.languageCode = "en_GB";
	translation23.text = "This field is required";

	var translation24 = texts.Translation.create(model);
	translation24.languageCode = "en_ZA";
	translation24.text = "This field is required";

	var text6 = texts.Text.create(model);
	text6.translations.push(translation21);
	text6.translations.push(translation22);
	text6.translations.push(translation23);
	text6.translations.push(translation24);

	var textTemplate6 = microflows.TextTemplate.create(model);
	textTemplate6.text = text6;   // Note: for this property a default value is defined.

	var validationFeedbackAction6 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction6.feedbackTemplate = textTemplate6;   // Note: for this property a default value is defined.
	validationFeedbackAction6.objectVariableName = "Column";
	validationFeedbackAction6.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.IsReferenceKey");

	var actionActivity13 = microflows.ActionActivity.create(model);
	actionActivity13.relativeMiddlePoint = {"x":965,"y":305};
	actionActivity13.size = {"width":90,"height":50};
	actionActivity13.action = validationFeedbackAction6;
	actionActivity13.caption = "Show required msg";
	actionActivity13.autoGenerateCaption = false;

	var expressionSplitCondition6 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition6.expression = "$Column/IsReferenceKey != empty";

	var exclusiveSplit6 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit6.relativeMiddlePoint = {"x":965,"y":400};
	exclusiveSplit6.size = {"width":80,"height":60};
	exclusiveSplit6.splitCondition = expressionSplitCondition6;   // Note: for this property a default value is defined.
	exclusiveSplit6.caption = "has ref key?";

	var exclusiveMerge6 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge6.relativeMiddlePoint = {"x":1345,"y":400};
	exclusiveMerge6.size = {"width":60,"height":40};

	var changeVariableAction7 = microflows.ChangeVariableAction.create(model);
	changeVariableAction7.changeVariableName = "Valid";
	changeVariableAction7.value = "false";

	var actionActivity14 = microflows.ActionActivity.create(model);
	actionActivity14.relativeMiddlePoint = {"x":1345,"y":305};
	actionActivity14.size = {"width":90,"height":60};
	actionActivity14.action = changeVariableAction7;
	actionActivity14.caption = "Set valid to false";
	actionActivity14.autoGenerateCaption = false;

	var translation25 = texts.Translation.create(model);
	translation25.languageCode = "en_US";
	translation25.text = "This field is required";

	var translation26 = texts.Translation.create(model);
	translation26.languageCode = "nl_NL";
	translation26.text = "Dit veld is verplicht";

	var translation27 = texts.Translation.create(model);
	translation27.languageCode = "en_GB";
	translation27.text = "This field is required";

	var translation28 = texts.Translation.create(model);
	translation28.languageCode = "en_ZA";
	translation28.text = "This field is required";

	var text7 = texts.Text.create(model);
	text7.translations.push(translation25);
	text7.translations.push(translation26);
	text7.translations.push(translation27);
	text7.translations.push(translation28);

	var textTemplate7 = microflows.TextTemplate.create(model);
	textTemplate7.text = text7;   // Note: for this property a default value is defined.

	var validationFeedbackAction7 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction7.feedbackTemplate = textTemplate7;   // Note: for this property a default value is defined.
	validationFeedbackAction7.objectVariableName = "Column";
	validationFeedbackAction7.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectMember_Reference");

	var actionActivity15 = microflows.ActionActivity.create(model);
	actionActivity15.relativeMiddlePoint = {"x":1215,"y":305};
	actionActivity15.size = {"width":90,"height":50};
	actionActivity15.action = validationFeedbackAction7;
	actionActivity15.caption = "Show required msg";
	actionActivity15.autoGenerateCaption = false;

	var expressionSplitCondition7 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition7.expression = "$Column/ExcelImporter.Column_MxObjectMember_Reference != empty ";

	var exclusiveSplit7 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit7.relativeMiddlePoint = {"x":1215,"y":400};
	exclusiveSplit7.size = {"width":80,"height":60};
	exclusiveSplit7.splitCondition = expressionSplitCondition7;   // Note: for this property a default value is defined.
	exclusiveSplit7.caption = "has ref attribute?";

	var exclusiveMerge7 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge7.relativeMiddlePoint = {"x":1580,"y":400};
	exclusiveMerge7.size = {"width":60,"height":40};

	var changeVariableAction8 = microflows.ChangeVariableAction.create(model);
	changeVariableAction8.changeVariableName = "Valid";
	changeVariableAction8.value = "false";

	var actionActivity16 = microflows.ActionActivity.create(model);
	actionActivity16.relativeMiddlePoint = {"x":1580,"y":305};
	actionActivity16.size = {"width":90,"height":60};
	actionActivity16.action = changeVariableAction8;
	actionActivity16.caption = "Set valid to false";
	actionActivity16.autoGenerateCaption = false;

	var translation29 = texts.Translation.create(model);
	translation29.languageCode = "en_US";
	translation29.text = "This field is required";

	var translation30 = texts.Translation.create(model);
	translation30.languageCode = "nl_NL";
	translation30.text = "Dit veld is verplicht";

	var translation31 = texts.Translation.create(model);
	translation31.languageCode = "en_GB";
	translation31.text = "This field is required";

	var translation32 = texts.Translation.create(model);
	translation32.languageCode = "en_ZA";
	translation32.text = "This field is required";

	var text8 = texts.Text.create(model);
	text8.translations.push(translation29);
	text8.translations.push(translation30);
	text8.translations.push(translation31);
	text8.translations.push(translation32);

	var textTemplate8 = microflows.TextTemplate.create(model);
	textTemplate8.text = text8;   // Note: for this property a default value is defined.

	var validationFeedbackAction8 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction8.feedbackTemplate = textTemplate8;   // Note: for this property a default value is defined.
	validationFeedbackAction8.objectVariableName = "Column";
	validationFeedbackAction8.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectReference");

	var actionActivity17 = microflows.ActionActivity.create(model);
	actionActivity17.relativeMiddlePoint = {"x":1450,"y":305};
	actionActivity17.size = {"width":90,"height":50};
	actionActivity17.action = validationFeedbackAction8;
	actionActivity17.caption = "Show required msg";
	actionActivity17.autoGenerateCaption = false;

	var expressionSplitCondition8 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition8.expression = "$Column/ExcelImporter.Column_MxObjectReference != empty ";

	var exclusiveSplit8 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit8.relativeMiddlePoint = {"x":1450,"y":400};
	exclusiveSplit8.size = {"width":80,"height":60};
	exclusiveSplit8.splitCondition = expressionSplitCondition8;   // Note: for this property a default value is defined.
	exclusiveSplit8.caption = "has reference?";

	var expressionSplitCondition9 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition9.expression = "$Valid";

	var exclusiveSplit9 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit9.relativeMiddlePoint = {"x":2015,"y":200};
	exclusiveSplit9.size = {"width":60,"height":40};
	exclusiveSplit9.splitCondition = expressionSplitCondition9;   // Note: for this property a default value is defined.
	exclusiveSplit9.caption = "valid?";

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":2015,"y":325};
	endEvent1.size = {"width":20,"height":20};

	var exclusiveMerge8 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge8.relativeMiddlePoint = {"x":1935,"y":200};
	exclusiveMerge8.size = {"width":60,"height":40};

	var exclusiveMerge9 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge9.relativeMiddlePoint = {"x":1820,"y":400};
	exclusiveMerge9.size = {"width":60,"height":40};

	var changeVariableAction9 = microflows.ChangeVariableAction.create(model);
	changeVariableAction9.changeVariableName = "Valid";
	changeVariableAction9.value = "false";

	var actionActivity18 = microflows.ActionActivity.create(model);
	actionActivity18.relativeMiddlePoint = {"x":1820,"y":305};
	actionActivity18.size = {"width":90,"height":60};
	actionActivity18.action = changeVariableAction9;
	actionActivity18.caption = "Set valid to false";
	actionActivity18.autoGenerateCaption = false;

	var translation33 = texts.Translation.create(model);
	translation33.languageCode = "en_US";
	translation33.text = "This field is required";

	var translation34 = texts.Translation.create(model);
	translation34.languageCode = "nl_NL";
	translation34.text = "Dit veld is verplicht";

	var translation35 = texts.Translation.create(model);
	translation35.languageCode = "en_GB";
	translation35.text = "This field is required";

	var translation36 = texts.Translation.create(model);
	translation36.languageCode = "en_ZA";
	translation36.text = "This field is required";

	var text9 = texts.Text.create(model);
	text9.translations.push(translation33);
	text9.translations.push(translation34);
	text9.translations.push(translation35);
	text9.translations.push(translation36);

	var textTemplate9 = microflows.TextTemplate.create(model);
	textTemplate9.text = text9;   // Note: for this property a default value is defined.

	var validationFeedbackAction9 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction9.feedbackTemplate = textTemplate9;   // Note: for this property a default value is defined.
	validationFeedbackAction9.objectVariableName = "Column";
	validationFeedbackAction9.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectType_Reference");

	var actionActivity19 = microflows.ActionActivity.create(model);
	actionActivity19.relativeMiddlePoint = {"x":1690,"y":305};
	actionActivity19.size = {"width":90,"height":50};
	actionActivity19.action = validationFeedbackAction9;
	actionActivity19.caption = "Show required msg";
	actionActivity19.autoGenerateCaption = false;

	var expressionSplitCondition10 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition10.expression = "$Column/ExcelImporter.Column_MxObjectType_Reference != empty ";

	var exclusiveSplit10 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit10.relativeMiddlePoint = {"x":1690,"y":400};
	exclusiveSplit10.size = {"width":80,"height":60};
	exclusiveSplit10.splitCondition = expressionSplitCondition10;   // Note: for this property a default value is defined.
	exclusiveSplit10.caption = "has ref object?";

	var microflowCallParameterMapping1 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping1.__parameter.updateWithRawValue("ExcelImporter.BCo_Column.pColumn");
	microflowCallParameterMapping1.argument = "$Column";

	var microflowCall1 = microflows.MicroflowCall.create(model);
	microflowCall1.microflow = model.findMicroflowByQualifiedName("ExcelImporter.BCo_Column");
	microflowCall1.parameterMappings.push(microflowCallParameterMapping1);

	var microflowCallAction1 = microflows.MicroflowCallAction.create(model);
	microflowCallAction1.microflowCall = microflowCall1;   // Note: for this property a default value is defined.
	microflowCallAction1.outputVariableName = "commitResult";

	var actionActivity20 = microflows.ActionActivity.create(model);
	actionActivity20.relativeMiddlePoint = {"x":2150,"y":200};
	actionActivity20.size = {"width":110,"height":60};
	actionActivity20.action = microflowCallAction1;
	actionActivity20.caption = "Call before commit";
	actionActivity20.autoGenerateCaption = false;

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.refreshInClient = true;
	changeObjectAction1.commit = microflows.CommitEnum.YesWithoutEvents;
	changeObjectAction1.changeVariableName = "Column";

	var actionActivity21 = microflows.ActionActivity.create(model);
	actionActivity21.relativeMiddlePoint = {"x":2410,"y":200};
	actionActivity21.size = {"width":120,"height":60};
	actionActivity21.action = changeObjectAction1;
	actionActivity21.caption = "Save the column object and refresh";
	actionActivity21.autoGenerateCaption = false;

	var expressionSplitCondition11 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition11.expression = "$commitResult";

	var exclusiveSplit11 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit11.relativeMiddlePoint = {"x":2270,"y":200};
	exclusiveSplit11.size = {"width":60,"height":40};
	exclusiveSplit11.splitCondition = expressionSplitCondition11;   // Note: for this property a default value is defined.
	exclusiveSplit11.caption = "valid?";

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":2270,"y":325};
	endEvent2.size = {"width":20,"height":20};

	var closeFormAction1 = microflows.CloseFormAction.create(model);

	var actionActivity22 = microflows.ActionActivity.create(model);
	actionActivity22.relativeMiddlePoint = {"x":2555,"y":200};
	actionActivity22.size = {"width":80,"height":60};
	actionActivity22.action = closeFormAction1;

	var endEvent3 = microflows.EndEvent.create(model);
	endEvent3.relativeMiddlePoint = {"x":2650,"y":200};
	endEvent3.size = {"width":20,"height":20};

	var exclusiveMerge10 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge10.relativeMiddlePoint = {"x":205,"y":200};
	exclusiveMerge10.size = {"width":20,"height":20};

	var exclusiveMerge11 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge11.relativeMiddlePoint = {"x":180,"y":325};
	exclusiveMerge11.size = {"width":60,"height":40};

	var translation37 = texts.Translation.create(model);
	translation37.languageCode = "en_US";
	translation37.text = "This field is required";

	var translation38 = texts.Translation.create(model);
	translation38.languageCode = "nl_NL";
	translation38.text = "Dit veld is verplicht";

	var translation39 = texts.Translation.create(model);
	translation39.languageCode = "en_GB";
	translation39.text = "This field is required";

	var translation40 = texts.Translation.create(model);
	translation40.languageCode = "en_ZA";
	translation40.text = "This field is required";

	var text10 = texts.Text.create(model);
	text10.translations.push(translation37);
	text10.translations.push(translation38);
	text10.translations.push(translation39);
	text10.translations.push(translation40);

	var textTemplate10 = microflows.TextTemplate.create(model);
	textTemplate10.text = text10;   // Note: for this property a default value is defined.

	var validationFeedbackAction10 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction10.feedbackTemplate = textTemplate10;   // Note: for this property a default value is defined.
	validationFeedbackAction10.objectVariableName = "Column";
	validationFeedbackAction10.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.DataSource");

	var actionActivity23 = microflows.ActionActivity.create(model);
	actionActivity23.relativeMiddlePoint = {"x":55,"y":105};
	actionActivity23.size = {"width":90,"height":50};
	actionActivity23.action = validationFeedbackAction10;
	actionActivity23.caption = "Show required msg";
	actionActivity23.autoGenerateCaption = false;

	var changeVariableAction10 = microflows.ChangeVariableAction.create(model);
	changeVariableAction10.changeVariableName = "Valid";
	changeVariableAction10.value = "false";

	var actionActivity24 = microflows.ActionActivity.create(model);
	actionActivity24.relativeMiddlePoint = {"x":205,"y":105};
	actionActivity24.size = {"width":90,"height":60};
	actionActivity24.action = changeVariableAction10;
	actionActivity24.caption = "Set valid to false";
	actionActivity24.autoGenerateCaption = false;

	var expressionSplitCondition12 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition12.expression = "$Column/DataSource";

	var exclusiveSplit12 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit12.relativeMiddlePoint = {"x":55,"y":200};
	exclusiveSplit12.size = {"width":90,"height":40};
	exclusiveSplit12.splitCondition = expressionSplitCondition12;   // Note: for this property a default value is defined.
	exclusiveSplit12.caption = "Datasource";

	var memberChange1 = microflows.MemberChange.create(model);
	memberChange1.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.IsKey");
	memberChange1.value = "ExcelImporter.YesNo.No";

	var memberChange2 = microflows.MemberChange.create(model);
	memberChange2.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.IsReferenceKey");
	memberChange2.value = "ExcelImporter.ReferenceKeyType.NoKey";

	var memberChange3 = microflows.MemberChange.create(model);
	memberChange3.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.ColNumber");
	memberChange3.value = "999";

	var changeObjectAction2 = microflows.ChangeObjectAction.create(model);
	changeObjectAction2.items.push(memberChange1);
	changeObjectAction2.items.push(memberChange2);
	changeObjectAction2.items.push(memberChange3);
	changeObjectAction2.changeVariableName = "Column";

	var actionActivity25 = microflows.ActionActivity.create(model);
	actionActivity25.relativeMiddlePoint = {"x":550,"y":325};
	actionActivity25.size = {"width":200,"height":60};
	actionActivity25.action = changeObjectAction2;

	var memberChange4 = microflows.MemberChange.create(model);
	memberChange4.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.Text");
	memberChange4.value = "getCaption( $Column/DataSource )";

	var changeObjectAction3 = microflows.ChangeObjectAction.create(model);
	changeObjectAction3.items.push(memberChange4);
	changeObjectAction3.changeVariableName = "Column";

	var actionActivity26 = microflows.ActionActivity.create(model);
	actionActivity26.relativeMiddlePoint = {"x":300,"y":325};
	actionActivity26.size = {"width":130,"height":60};
	actionActivity26.action = changeObjectAction3;

	var exclusiveMerge12 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge12.relativeMiddlePoint = {"x":415,"y":325};
	exclusiveMerge12.size = {"width":20,"height":20};

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(column1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(exclusiveMerge1);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(exclusiveSplit2);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(exclusiveMerge2);
	microflowObjectCollection1.objects.push(actionActivity5);
	microflowObjectCollection1.objects.push(exclusiveSplit3);
	microflowObjectCollection1.objects.push(actionActivity6);
	microflowObjectCollection1.objects.push(actionActivity7);
	microflowObjectCollection1.objects.push(exclusiveMerge3);
	microflowObjectCollection1.objects.push(actionActivity8);
	microflowObjectCollection1.objects.push(actionActivity9);
	microflowObjectCollection1.objects.push(exclusiveSplit4);
	microflowObjectCollection1.objects.push(exclusiveMerge4);
	microflowObjectCollection1.objects.push(actionActivity10);
	microflowObjectCollection1.objects.push(actionActivity11);
	microflowObjectCollection1.objects.push(exclusiveSplit5);
	microflowObjectCollection1.objects.push(exclusiveMerge5);
	microflowObjectCollection1.objects.push(actionActivity12);
	microflowObjectCollection1.objects.push(actionActivity13);
	microflowObjectCollection1.objects.push(exclusiveSplit6);
	microflowObjectCollection1.objects.push(exclusiveMerge6);
	microflowObjectCollection1.objects.push(actionActivity14);
	microflowObjectCollection1.objects.push(actionActivity15);
	microflowObjectCollection1.objects.push(exclusiveSplit7);
	microflowObjectCollection1.objects.push(exclusiveMerge7);
	microflowObjectCollection1.objects.push(actionActivity16);
	microflowObjectCollection1.objects.push(actionActivity17);
	microflowObjectCollection1.objects.push(exclusiveSplit8);
	microflowObjectCollection1.objects.push(exclusiveSplit9);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(exclusiveMerge8);
	microflowObjectCollection1.objects.push(exclusiveMerge9);
	microflowObjectCollection1.objects.push(actionActivity18);
	microflowObjectCollection1.objects.push(actionActivity19);
	microflowObjectCollection1.objects.push(exclusiveSplit10);
	microflowObjectCollection1.objects.push(actionActivity20);
	microflowObjectCollection1.objects.push(actionActivity21);
	microflowObjectCollection1.objects.push(exclusiveSplit11);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(actionActivity22);
	microflowObjectCollection1.objects.push(endEvent3);
	microflowObjectCollection1.objects.push(exclusiveMerge10);
	microflowObjectCollection1.objects.push(exclusiveMerge11);
	microflowObjectCollection1.objects.push(actionActivity23);
	microflowObjectCollection1.objects.push(actionActivity24);
	microflowObjectCollection1.objects.push(exclusiveSplit12);
	microflowObjectCollection1.objects.push(actionActivity25);
	microflowObjectCollection1.objects.push(actionActivity26);
	microflowObjectCollection1.objects.push(exclusiveMerge12);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":15,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow3.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "false";

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.destinationConnectionIndex = 2;
	sequenceFlow4.originBezierVector = {"width":0,"height":-15};
	sequenceFlow4.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow4.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":30,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 2;
	sequenceFlow6.originBezierVector = {"width":0,"height":30};
	sequenceFlow6.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow6.caseValue = noCase4;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "true";

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":15,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow7.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "false";

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.destinationConnectionIndex = 2;
	sequenceFlow8.originBezierVector = {"width":0,"height":-15};
	sequenceFlow8.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow8.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 1;
	sequenceFlow9.destinationConnectionIndex = 3;
	sequenceFlow9.originBezierVector = {"width":30,"height":0};
	sequenceFlow9.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow9.caseValue = noCase5;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.originConnectionIndex = 2;
	sequenceFlow10.originBezierVector = {"width":0,"height":30};
	sequenceFlow10.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow10.caseValue = noCase6;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow11 = microflows.SequenceFlow.create(model);
	sequenceFlow11.originConnectionIndex = 1;
	sequenceFlow11.destinationConnectionIndex = 3;
	sequenceFlow11.originBezierVector = {"width":15,"height":0};
	sequenceFlow11.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow11.caseValue = noCase7;   // Note: for this property a default value is defined.

	var enumerationCase5 = microflows.EnumerationCase.create(model);
	enumerationCase5.value = "(empty)";

	var sequenceFlow12 = microflows.SequenceFlow.create(model);
	sequenceFlow12.destinationConnectionIndex = 2;
	sequenceFlow12.originBezierVector = {"width":0,"height":-15};
	sequenceFlow12.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow12.caseValue = enumerationCase5;   // Note: for this property a default value is defined.

	var noCase8 = microflows.NoCase.create(model);

	var sequenceFlow13 = microflows.SequenceFlow.create(model);
	sequenceFlow13.originConnectionIndex = 1;
	sequenceFlow13.destinationConnectionIndex = 3;
	sequenceFlow13.originBezierVector = {"width":30,"height":0};
	sequenceFlow13.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow13.caseValue = noCase8;   // Note: for this property a default value is defined.

	var noCase9 = microflows.NoCase.create(model);

	var sequenceFlow14 = microflows.SequenceFlow.create(model);
	sequenceFlow14.originConnectionIndex = 1;
	sequenceFlow14.destinationConnectionIndex = 3;
	sequenceFlow14.originBezierVector = {"width":15,"height":0};
	sequenceFlow14.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow14.caseValue = noCase9;   // Note: for this property a default value is defined.

	var noCase10 = microflows.NoCase.create(model);

	var sequenceFlow15 = microflows.SequenceFlow.create(model);
	sequenceFlow15.originConnectionIndex = 1;
	sequenceFlow15.originBezierVector = {"width":30,"height":0};
	sequenceFlow15.destinationBezierVector = {"width":0,"height":-270};
	sequenceFlow15.caseValue = noCase10;   // Note: for this property a default value is defined.

	var noCase11 = microflows.NoCase.create(model);

	var sequenceFlow16 = microflows.SequenceFlow.create(model);
	sequenceFlow16.originConnectionIndex = 1;
	sequenceFlow16.destinationConnectionIndex = 3;
	sequenceFlow16.originBezierVector = {"width":15,"height":0};
	sequenceFlow16.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow16.caseValue = noCase11;   // Note: for this property a default value is defined.

	var enumerationCase6 = microflows.EnumerationCase.create(model);
	enumerationCase6.value = "true";

	var sequenceFlow17 = microflows.SequenceFlow.create(model);
	sequenceFlow17.originConnectionIndex = 1;
	sequenceFlow17.destinationConnectionIndex = 3;
	sequenceFlow17.originBezierVector = {"width":15,"height":0};
	sequenceFlow17.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow17.caseValue = enumerationCase6;   // Note: for this property a default value is defined.

	var noCase12 = microflows.NoCase.create(model);

	var sequenceFlow18 = microflows.SequenceFlow.create(model);
	sequenceFlow18.originConnectionIndex = 1;
	sequenceFlow18.destinationConnectionIndex = 3;
	sequenceFlow18.originBezierVector = {"width":30,"height":0};
	sequenceFlow18.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow18.caseValue = noCase12;   // Note: for this property a default value is defined.

	var noCase13 = microflows.NoCase.create(model);

	var sequenceFlow19 = microflows.SequenceFlow.create(model);
	sequenceFlow19.originConnectionIndex = 1;
	sequenceFlow19.destinationConnectionIndex = 3;
	sequenceFlow19.originBezierVector = {"width":30,"height":0};
	sequenceFlow19.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow19.caseValue = noCase13;   // Note: for this property a default value is defined.

	var enumerationCase7 = microflows.EnumerationCase.create(model);
	enumerationCase7.value = "false";

	var sequenceFlow20 = microflows.SequenceFlow.create(model);
	sequenceFlow20.originConnectionIndex = 2;
	sequenceFlow20.originBezierVector = {"width":0,"height":15};
	sequenceFlow20.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow20.caseValue = enumerationCase7;   // Note: for this property a default value is defined.

	var enumerationCase8 = microflows.EnumerationCase.create(model);
	enumerationCase8.value = "true";

	var sequenceFlow21 = microflows.SequenceFlow.create(model);
	sequenceFlow21.originConnectionIndex = 1;
	sequenceFlow21.destinationConnectionIndex = 3;
	sequenceFlow21.originBezierVector = {"width":15,"height":0};
	sequenceFlow21.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow21.caseValue = enumerationCase8;   // Note: for this property a default value is defined.

	var enumerationCase9 = microflows.EnumerationCase.create(model);
	enumerationCase9.value = "false";

	var sequenceFlow22 = microflows.SequenceFlow.create(model);
	sequenceFlow22.destinationConnectionIndex = 2;
	sequenceFlow22.originBezierVector = {"width":0,"height":-15};
	sequenceFlow22.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow22.caseValue = enumerationCase9;   // Note: for this property a default value is defined.

	var noCase14 = microflows.NoCase.create(model);

	var sequenceFlow23 = microflows.SequenceFlow.create(model);
	sequenceFlow23.originConnectionIndex = 1;
	sequenceFlow23.destinationConnectionIndex = 3;
	sequenceFlow23.originBezierVector = {"width":30,"height":0};
	sequenceFlow23.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow23.caseValue = noCase14;   // Note: for this property a default value is defined.

	var noCase15 = microflows.NoCase.create(model);

	var sequenceFlow24 = microflows.SequenceFlow.create(model);
	sequenceFlow24.originConnectionIndex = 2;
	sequenceFlow24.originBezierVector = {"width":0,"height":30};
	sequenceFlow24.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow24.caseValue = noCase15;   // Note: for this property a default value is defined.

	var enumerationCase10 = microflows.EnumerationCase.create(model);
	enumerationCase10.value = "Attribute";

	var sequenceFlow25 = microflows.SequenceFlow.create(model);
	sequenceFlow25.originConnectionIndex = 1;
	sequenceFlow25.destinationConnectionIndex = 3;
	sequenceFlow25.originBezierVector = {"width":15,"height":0};
	sequenceFlow25.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow25.caseValue = enumerationCase10;   // Note: for this property a default value is defined.

	var enumerationCase11 = microflows.EnumerationCase.create(model);
	enumerationCase11.value = "true";

	var sequenceFlow26 = microflows.SequenceFlow.create(model);
	sequenceFlow26.originConnectionIndex = 1;
	sequenceFlow26.destinationConnectionIndex = 3;
	sequenceFlow26.originBezierVector = {"width":15,"height":0};
	sequenceFlow26.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow26.caseValue = enumerationCase11;   // Note: for this property a default value is defined.

	var enumerationCase12 = microflows.EnumerationCase.create(model);
	enumerationCase12.value = "false";

	var sequenceFlow27 = microflows.SequenceFlow.create(model);
	sequenceFlow27.destinationConnectionIndex = 2;
	sequenceFlow27.originBezierVector = {"width":0,"height":-15};
	sequenceFlow27.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow27.caseValue = enumerationCase12;   // Note: for this property a default value is defined.

	var noCase16 = microflows.NoCase.create(model);

	var sequenceFlow28 = microflows.SequenceFlow.create(model);
	sequenceFlow28.originConnectionIndex = 1;
	sequenceFlow28.destinationConnectionIndex = 3;
	sequenceFlow28.originBezierVector = {"width":30,"height":0};
	sequenceFlow28.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow28.caseValue = noCase16;   // Note: for this property a default value is defined.

	var noCase17 = microflows.NoCase.create(model);

	var sequenceFlow29 = microflows.SequenceFlow.create(model);
	sequenceFlow29.originConnectionIndex = 2;
	sequenceFlow29.originBezierVector = {"width":0,"height":30};
	sequenceFlow29.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow29.caseValue = noCase17;   // Note: for this property a default value is defined.

	var noCase18 = microflows.NoCase.create(model);

	var sequenceFlow30 = microflows.SequenceFlow.create(model);
	sequenceFlow30.originConnectionIndex = 1;
	sequenceFlow30.destinationConnectionIndex = 3;
	sequenceFlow30.originBezierVector = {"width":15,"height":0};
	sequenceFlow30.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow30.caseValue = noCase18;   // Note: for this property a default value is defined.

	var noCase19 = microflows.NoCase.create(model);

	var sequenceFlow31 = microflows.SequenceFlow.create(model);
	sequenceFlow31.originConnectionIndex = 1;
	sequenceFlow31.destinationConnectionIndex = 3;
	sequenceFlow31.originBezierVector = {"width":15,"height":0};
	sequenceFlow31.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow31.caseValue = noCase19;   // Note: for this property a default value is defined.

	var enumerationCase13 = microflows.EnumerationCase.create(model);
	enumerationCase13.value = "true";

	var sequenceFlow32 = microflows.SequenceFlow.create(model);
	sequenceFlow32.originConnectionIndex = 1;
	sequenceFlow32.destinationConnectionIndex = 3;
	sequenceFlow32.originBezierVector = {"width":15,"height":0};
	sequenceFlow32.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow32.caseValue = enumerationCase13;   // Note: for this property a default value is defined.

	var enumerationCase14 = microflows.EnumerationCase.create(model);
	enumerationCase14.value = "false";

	var sequenceFlow33 = microflows.SequenceFlow.create(model);
	sequenceFlow33.destinationConnectionIndex = 2;
	sequenceFlow33.originBezierVector = {"width":0,"height":-15};
	sequenceFlow33.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow33.caseValue = enumerationCase14;   // Note: for this property a default value is defined.

	var noCase20 = microflows.NoCase.create(model);

	var sequenceFlow34 = microflows.SequenceFlow.create(model);
	sequenceFlow34.originConnectionIndex = 1;
	sequenceFlow34.destinationConnectionIndex = 3;
	sequenceFlow34.originBezierVector = {"width":30,"height":0};
	sequenceFlow34.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow34.caseValue = noCase20;   // Note: for this property a default value is defined.

	var noCase21 = microflows.NoCase.create(model);

	var sequenceFlow35 = microflows.SequenceFlow.create(model);
	sequenceFlow35.originConnectionIndex = 2;
	sequenceFlow35.originBezierVector = {"width":0,"height":30};
	sequenceFlow35.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow35.caseValue = noCase21;   // Note: for this property a default value is defined.

	var enumerationCase15 = microflows.EnumerationCase.create(model);
	enumerationCase15.value = "true";

	var sequenceFlow36 = microflows.SequenceFlow.create(model);
	sequenceFlow36.originConnectionIndex = 1;
	sequenceFlow36.destinationConnectionIndex = 3;
	sequenceFlow36.originBezierVector = {"width":15,"height":0};
	sequenceFlow36.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow36.caseValue = enumerationCase15;   // Note: for this property a default value is defined.

	var enumerationCase16 = microflows.EnumerationCase.create(model);
	enumerationCase16.value = "false";

	var sequenceFlow37 = microflows.SequenceFlow.create(model);
	sequenceFlow37.destinationConnectionIndex = 2;
	sequenceFlow37.originBezierVector = {"width":0,"height":-15};
	sequenceFlow37.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow37.caseValue = enumerationCase16;   // Note: for this property a default value is defined.

	var noCase22 = microflows.NoCase.create(model);

	var sequenceFlow38 = microflows.SequenceFlow.create(model);
	sequenceFlow38.originConnectionIndex = 1;
	sequenceFlow38.destinationConnectionIndex = 3;
	sequenceFlow38.originBezierVector = {"width":30,"height":0};
	sequenceFlow38.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow38.caseValue = noCase22;   // Note: for this property a default value is defined.

	var noCase23 = microflows.NoCase.create(model);

	var sequenceFlow39 = microflows.SequenceFlow.create(model);
	sequenceFlow39.originConnectionIndex = 2;
	sequenceFlow39.originBezierVector = {"width":0,"height":30};
	sequenceFlow39.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow39.caseValue = noCase23;   // Note: for this property a default value is defined.

	var noCase24 = microflows.NoCase.create(model);

	var sequenceFlow40 = microflows.SequenceFlow.create(model);
	sequenceFlow40.originConnectionIndex = 1;
	sequenceFlow40.destinationConnectionIndex = 3;
	sequenceFlow40.originBezierVector = {"width":15,"height":0};
	sequenceFlow40.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow40.caseValue = noCase24;   // Note: for this property a default value is defined.

	var enumerationCase17 = microflows.EnumerationCase.create(model);
	enumerationCase17.value = "Reference";

	var sequenceFlow41 = microflows.SequenceFlow.create(model);
	sequenceFlow41.originConnectionIndex = 2;
	sequenceFlow41.destinationConnectionIndex = 3;
	sequenceFlow41.originBezierVector = {"width":0,"height":15};
	sequenceFlow41.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow41.caseValue = enumerationCase17;   // Note: for this property a default value is defined.

	var enumerationCase18 = microflows.EnumerationCase.create(model);
	enumerationCase18.value = "DoNotUse";

	var sequenceFlow42 = microflows.SequenceFlow.create(model);
	sequenceFlow42.originConnectionIndex = 2;
	sequenceFlow42.destinationConnectionIndex = 3;
	sequenceFlow42.originBezierVector = {"width":130,"height":40};
	sequenceFlow42.destinationBezierVector = {"width":-215,"height":70};
	sequenceFlow42.caseValue = enumerationCase18;   // Note: for this property a default value is defined.

	var enumerationCase19 = microflows.EnumerationCase.create(model);
	enumerationCase19.value = "true";

	var sequenceFlow43 = microflows.SequenceFlow.create(model);
	sequenceFlow43.originConnectionIndex = 1;
	sequenceFlow43.destinationConnectionIndex = 3;
	sequenceFlow43.originBezierVector = {"width":15,"height":0};
	sequenceFlow43.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow43.caseValue = enumerationCase19;   // Note: for this property a default value is defined.

	var enumerationCase20 = microflows.EnumerationCase.create(model);
	enumerationCase20.value = "false";

	var sequenceFlow44 = microflows.SequenceFlow.create(model);
	sequenceFlow44.destinationConnectionIndex = 2;
	sequenceFlow44.originBezierVector = {"width":0,"height":-15};
	sequenceFlow44.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow44.caseValue = enumerationCase20;   // Note: for this property a default value is defined.

	var noCase25 = microflows.NoCase.create(model);

	var sequenceFlow45 = microflows.SequenceFlow.create(model);
	sequenceFlow45.originConnectionIndex = 1;
	sequenceFlow45.destinationConnectionIndex = 3;
	sequenceFlow45.originBezierVector = {"width":30,"height":0};
	sequenceFlow45.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow45.caseValue = noCase25;   // Note: for this property a default value is defined.

	var noCase26 = microflows.NoCase.create(model);

	var sequenceFlow46 = microflows.SequenceFlow.create(model);
	sequenceFlow46.originConnectionIndex = 2;
	sequenceFlow46.originBezierVector = {"width":0,"height":30};
	sequenceFlow46.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow46.caseValue = noCase26;   // Note: for this property a default value is defined.

	var noCase27 = microflows.NoCase.create(model);

	var sequenceFlow47 = microflows.SequenceFlow.create(model);
	sequenceFlow47.originConnectionIndex = 1;
	sequenceFlow47.destinationConnectionIndex = 3;
	sequenceFlow47.originBezierVector = {"width":15,"height":0};
	sequenceFlow47.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow47.caseValue = noCase27;   // Note: for this property a default value is defined.

	var enumerationCase21 = microflows.EnumerationCase.create(model);
	enumerationCase21.value = "true";

	var sequenceFlow48 = microflows.SequenceFlow.create(model);
	sequenceFlow48.originConnectionIndex = 1;
	sequenceFlow48.destinationConnectionIndex = 3;
	sequenceFlow48.originBezierVector = {"width":15,"height":0};
	sequenceFlow48.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow48.caseValue = enumerationCase21;   // Note: for this property a default value is defined.

	var enumerationCase22 = microflows.EnumerationCase.create(model);
	enumerationCase22.value = "false";

	var sequenceFlow49 = microflows.SequenceFlow.create(model);
	sequenceFlow49.destinationConnectionIndex = 2;
	sequenceFlow49.originBezierVector = {"width":0,"height":-15};
	sequenceFlow49.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow49.caseValue = enumerationCase22;   // Note: for this property a default value is defined.

	var noCase28 = microflows.NoCase.create(model);

	var sequenceFlow50 = microflows.SequenceFlow.create(model);
	sequenceFlow50.originConnectionIndex = 1;
	sequenceFlow50.destinationConnectionIndex = 3;
	sequenceFlow50.originBezierVector = {"width":30,"height":0};
	sequenceFlow50.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow50.caseValue = noCase28;   // Note: for this property a default value is defined.

	var noCase29 = microflows.NoCase.create(model);

	var sequenceFlow51 = microflows.SequenceFlow.create(model);
	sequenceFlow51.originConnectionIndex = 2;
	sequenceFlow51.originBezierVector = {"width":0,"height":30};
	sequenceFlow51.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow51.caseValue = noCase29;   // Note: for this property a default value is defined.

	var noCase30 = microflows.NoCase.create(model);

	var sequenceFlow52 = microflows.SequenceFlow.create(model);
	sequenceFlow52.originConnectionIndex = 1;
	sequenceFlow52.destinationConnectionIndex = 3;
	sequenceFlow52.originBezierVector = {"width":15,"height":0};
	sequenceFlow52.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow52.caseValue = noCase30;   // Note: for this property a default value is defined.

	var noCase31 = microflows.NoCase.create(model);

	var sequenceFlow53 = microflows.SequenceFlow.create(model);
	sequenceFlow53.originConnectionIndex = 1;
	sequenceFlow53.destinationConnectionIndex = 2;
	sequenceFlow53.originBezierVector = {"width":70,"height":0};
	sequenceFlow53.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow53.caseValue = noCase31;   // Note: for this property a default value is defined.

	var noCase32 = microflows.NoCase.create(model);

	var sequenceFlow54 = microflows.SequenceFlow.create(model);
	sequenceFlow54.originConnectionIndex = 1;
	sequenceFlow54.destinationConnectionIndex = 3;
	sequenceFlow54.originBezierVector = {"width":30,"height":0};
	sequenceFlow54.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow54.caseValue = noCase32;   // Note: for this property a default value is defined.

	var enumerationCase23 = microflows.EnumerationCase.create(model);
	enumerationCase23.value = "false";

	var sequenceFlow55 = microflows.SequenceFlow.create(model);
	sequenceFlow55.originConnectionIndex = 2;
	sequenceFlow55.originBezierVector = {"width":0,"height":15};
	sequenceFlow55.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow55.caseValue = enumerationCase23;   // Note: for this property a default value is defined.

	var enumerationCase24 = microflows.EnumerationCase.create(model);
	enumerationCase24.value = "true";

	var sequenceFlow56 = microflows.SequenceFlow.create(model);
	sequenceFlow56.originConnectionIndex = 1;
	sequenceFlow56.destinationConnectionIndex = 3;
	sequenceFlow56.originBezierVector = {"width":15,"height":0};
	sequenceFlow56.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow56.caseValue = enumerationCase24;   // Note: for this property a default value is defined.

	var enumerationCase25 = microflows.EnumerationCase.create(model);
	enumerationCase25.value = "CellValue";

	var sequenceFlow57 = microflows.SequenceFlow.create(model);
	sequenceFlow57.originConnectionIndex = 1;
	sequenceFlow57.destinationConnectionIndex = 3;
	sequenceFlow57.originBezierVector = {"width":15,"height":0};
	sequenceFlow57.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow57.caseValue = enumerationCase25;   // Note: for this property a default value is defined.

	var noCase33 = microflows.NoCase.create(model);

	var sequenceFlow58 = microflows.SequenceFlow.create(model);
	sequenceFlow58.originConnectionIndex = 1;
	sequenceFlow58.destinationConnectionIndex = 3;
	sequenceFlow58.originBezierVector = {"width":15,"height":0};
	sequenceFlow58.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow58.caseValue = noCase33;   // Note: for this property a default value is defined.

	var enumerationCase26 = microflows.EnumerationCase.create(model);
	enumerationCase26.value = "(empty)";

	var sequenceFlow59 = microflows.SequenceFlow.create(model);
	sequenceFlow59.destinationConnectionIndex = 2;
	sequenceFlow59.originBezierVector = {"width":0,"height":-15};
	sequenceFlow59.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow59.caseValue = enumerationCase26;   // Note: for this property a default value is defined.

	var enumerationCase27 = microflows.EnumerationCase.create(model);
	enumerationCase27.value = "DocumentPropertyRowNr";

	var sequenceFlow60 = microflows.SequenceFlow.create(model);
	sequenceFlow60.originConnectionIndex = 2;
	sequenceFlow60.destinationConnectionIndex = 3;
	sequenceFlow60.originBezierVector = {"width":0,"height":15};
	sequenceFlow60.destinationBezierVector = {"width":-100,"height":10};
	sequenceFlow60.caseValue = enumerationCase27;   // Note: for this property a default value is defined.

	var enumerationCase28 = microflows.EnumerationCase.create(model);
	enumerationCase28.value = "DocumentPropertySheetNr";

	var sequenceFlow61 = microflows.SequenceFlow.create(model);
	sequenceFlow61.originConnectionIndex = 2;
	sequenceFlow61.originBezierVector = {"width":0,"height":15};
	sequenceFlow61.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow61.caseValue = enumerationCase28;   // Note: for this property a default value is defined.

	var noCase34 = microflows.NoCase.create(model);

	var sequenceFlow62 = microflows.SequenceFlow.create(model);
	sequenceFlow62.originConnectionIndex = 1;
	sequenceFlow62.destinationConnectionIndex = 3;
	sequenceFlow62.originBezierVector = {"width":15,"height":0};
	sequenceFlow62.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow62.caseValue = noCase34;   // Note: for this property a default value is defined.

	var noCase35 = microflows.NoCase.create(model);

	var sequenceFlow63 = microflows.SequenceFlow.create(model);
	sequenceFlow63.originConnectionIndex = 1;
	sequenceFlow63.destinationConnectionIndex = 3;
	sequenceFlow63.originBezierVector = {"width":30,"height":0};
	sequenceFlow63.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow63.caseValue = noCase35;   // Note: for this property a default value is defined.

	var noCase36 = microflows.NoCase.create(model);

	var sequenceFlow64 = microflows.SequenceFlow.create(model);
	sequenceFlow64.originConnectionIndex = 2;
	sequenceFlow64.originBezierVector = {"width":0,"height":30};
	sequenceFlow64.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow64.caseValue = noCase36;   // Note: for this property a default value is defined.

	var enumerationCase29 = microflows.EnumerationCase.create(model);
	enumerationCase29.value = "StaticValue";

	var sequenceFlow65 = microflows.SequenceFlow.create(model);
	sequenceFlow65.originConnectionIndex = 2;
	sequenceFlow65.originBezierVector = {"width":0,"height":15};
	sequenceFlow65.destinationBezierVector = {"width":0,"height":-65};
	sequenceFlow65.caseValue = enumerationCase29;   // Note: for this property a default value is defined.

	var noCase37 = microflows.NoCase.create(model);

	var sequenceFlow66 = microflows.SequenceFlow.create(model);
	sequenceFlow66.originConnectionIndex = 1;
	sequenceFlow66.destinationConnectionIndex = 2;
	sequenceFlow66.originBezierVector = {"width":30,"height":0};
	sequenceFlow66.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow66.caseValue = noCase37;   // Note: for this property a default value is defined.

	var noCase38 = microflows.NoCase.create(model);

	var sequenceFlow67 = microflows.SequenceFlow.create(model);
	sequenceFlow67.originConnectionIndex = 1;
	sequenceFlow67.destinationConnectionIndex = 3;
	sequenceFlow67.originBezierVector = {"width":15,"height":0};
	sequenceFlow67.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow67.caseValue = noCase38;   // Note: for this property a default value is defined.

	var noCase39 = microflows.NoCase.create(model);

	var sequenceFlow68 = microflows.SequenceFlow.create(model);
	sequenceFlow68.originConnectionIndex = 1;
	sequenceFlow68.destinationConnectionIndex = 3;
	sequenceFlow68.originBezierVector = {"width":30,"height":0};
	sequenceFlow68.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow68.caseValue = noCase39;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation41 = texts.Translation.create(model);
	translation41.languageCode = "en_US";

	var translation42 = texts.Translation.create(model);
	translation42.languageCode = "en_GB";

	var translation43 = texts.Translation.create(model);
	translation43.languageCode = "en_ZA";

	var text11 = texts.Text.create(model);
	text11.translations.push(translation41);
	text11.translations.push(translation42);
	text11.translations.push(translation43);

	var iVK_Column_Save1 = microflows.Microflow.createIn(unit);
	iVK_Column_Save1.name = "IVK_Column_Save";
	iVK_Column_Save1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	iVK_Column_Save1.flows.push(sequenceFlow1);
	iVK_Column_Save1.flows.push(sequenceFlow2);
	iVK_Column_Save1.flows.push(sequenceFlow3);
	iVK_Column_Save1.flows.push(sequenceFlow4);
	iVK_Column_Save1.flows.push(sequenceFlow5);
	iVK_Column_Save1.flows.push(sequenceFlow6);
	iVK_Column_Save1.flows.push(sequenceFlow7);
	iVK_Column_Save1.flows.push(sequenceFlow8);
	iVK_Column_Save1.flows.push(sequenceFlow9);
	iVK_Column_Save1.flows.push(sequenceFlow10);
	iVK_Column_Save1.flows.push(sequenceFlow11);
	iVK_Column_Save1.flows.push(sequenceFlow12);
	iVK_Column_Save1.flows.push(sequenceFlow13);
	iVK_Column_Save1.flows.push(sequenceFlow14);
	iVK_Column_Save1.flows.push(sequenceFlow15);
	iVK_Column_Save1.flows.push(sequenceFlow16);
	iVK_Column_Save1.flows.push(sequenceFlow17);
	iVK_Column_Save1.flows.push(sequenceFlow18);
	iVK_Column_Save1.flows.push(sequenceFlow19);
	iVK_Column_Save1.flows.push(sequenceFlow20);
	iVK_Column_Save1.flows.push(sequenceFlow21);
	iVK_Column_Save1.flows.push(sequenceFlow22);
	iVK_Column_Save1.flows.push(sequenceFlow23);
	iVK_Column_Save1.flows.push(sequenceFlow24);
	iVK_Column_Save1.flows.push(sequenceFlow25);
	iVK_Column_Save1.flows.push(sequenceFlow26);
	iVK_Column_Save1.flows.push(sequenceFlow27);
	iVK_Column_Save1.flows.push(sequenceFlow28);
	iVK_Column_Save1.flows.push(sequenceFlow29);
	iVK_Column_Save1.flows.push(sequenceFlow30);
	iVK_Column_Save1.flows.push(sequenceFlow31);
	iVK_Column_Save1.flows.push(sequenceFlow32);
	iVK_Column_Save1.flows.push(sequenceFlow33);
	iVK_Column_Save1.flows.push(sequenceFlow34);
	iVK_Column_Save1.flows.push(sequenceFlow35);
	iVK_Column_Save1.flows.push(sequenceFlow36);
	iVK_Column_Save1.flows.push(sequenceFlow37);
	iVK_Column_Save1.flows.push(sequenceFlow38);
	iVK_Column_Save1.flows.push(sequenceFlow39);
	iVK_Column_Save1.flows.push(sequenceFlow40);
	iVK_Column_Save1.flows.push(sequenceFlow41);
	iVK_Column_Save1.flows.push(sequenceFlow42);
	iVK_Column_Save1.flows.push(sequenceFlow43);
	iVK_Column_Save1.flows.push(sequenceFlow44);
	iVK_Column_Save1.flows.push(sequenceFlow45);
	iVK_Column_Save1.flows.push(sequenceFlow46);
	iVK_Column_Save1.flows.push(sequenceFlow47);
	iVK_Column_Save1.flows.push(sequenceFlow48);
	iVK_Column_Save1.flows.push(sequenceFlow49);
	iVK_Column_Save1.flows.push(sequenceFlow50);
	iVK_Column_Save1.flows.push(sequenceFlow51);
	iVK_Column_Save1.flows.push(sequenceFlow52);
	iVK_Column_Save1.flows.push(sequenceFlow53);
	iVK_Column_Save1.flows.push(sequenceFlow54);
	iVK_Column_Save1.flows.push(sequenceFlow55);
	iVK_Column_Save1.flows.push(sequenceFlow56);
	iVK_Column_Save1.flows.push(sequenceFlow57);
	iVK_Column_Save1.flows.push(sequenceFlow58);
	iVK_Column_Save1.flows.push(sequenceFlow59);
	iVK_Column_Save1.flows.push(sequenceFlow60);
	iVK_Column_Save1.flows.push(sequenceFlow61);
	iVK_Column_Save1.flows.push(sequenceFlow62);
	iVK_Column_Save1.flows.push(sequenceFlow63);
	iVK_Column_Save1.flows.push(sequenceFlow64);
	iVK_Column_Save1.flows.push(sequenceFlow65);
	iVK_Column_Save1.flows.push(sequenceFlow66);
	iVK_Column_Save1.flows.push(sequenceFlow67);
	iVK_Column_Save1.flows.push(sequenceFlow68);
	iVK_Column_Save1.microflowReturnType = voidType1;
	iVK_Column_Save1.applyEntityAccess = true;
	iVK_Column_Save1.allowedModuleRoles.push(model.findModuleRoleByQualifiedName("ExcelImporter.Configurator"));
	iVK_Column_Save1.concurrencyErrorMessage = text11;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity1;

	sequenceFlow2.origin = actionActivity1;
	sequenceFlow2.destination = exclusiveSplit12;

	sequenceFlow3.origin = exclusiveSplit1;
	sequenceFlow3.destination = exclusiveMerge1;

	sequenceFlow4.origin = exclusiveSplit1;
	sequenceFlow4.destination = actionActivity2;

	sequenceFlow5.origin = actionActivity2;
	sequenceFlow5.destination = actionActivity3;

	sequenceFlow6.origin = actionActivity3;
	sequenceFlow6.destination = exclusiveMerge1;

	sequenceFlow7.origin = exclusiveSplit2;
	sequenceFlow7.destination = exclusiveMerge2;

	sequenceFlow8.origin = exclusiveSplit2;
	sequenceFlow8.destination = actionActivity4;

	sequenceFlow9.origin = actionActivity4;
	sequenceFlow9.destination = actionActivity5;

	sequenceFlow10.origin = actionActivity5;
	sequenceFlow10.destination = exclusiveMerge2;

	sequenceFlow11.origin = exclusiveMerge1;
	sequenceFlow11.destination = exclusiveSplit2;

	sequenceFlow12.origin = exclusiveSplit3;
	sequenceFlow12.destination = actionActivity6;

	sequenceFlow13.origin = actionActivity6;
	sequenceFlow13.destination = actionActivity7;

	sequenceFlow14.origin = exclusiveMerge2;
	sequenceFlow14.destination = exclusiveSplit3;

	sequenceFlow15.origin = actionActivity7;
	sequenceFlow15.destination = exclusiveMerge8;

	sequenceFlow16.origin = exclusiveMerge8;
	sequenceFlow16.destination = exclusiveSplit9;

	sequenceFlow17.origin = exclusiveSplit9;
	sequenceFlow17.destination = actionActivity20;

	sequenceFlow18.origin = actionActivity21;
	sequenceFlow18.destination = actionActivity22;

	sequenceFlow19.origin = actionActivity22;
	sequenceFlow19.destination = endEvent3;

	sequenceFlow20.origin = exclusiveSplit9;
	sequenceFlow20.destination = endEvent1;

	sequenceFlow21.origin = exclusiveSplit4;
	sequenceFlow21.destination = exclusiveMerge3;

	sequenceFlow22.origin = exclusiveSplit4;
	sequenceFlow22.destination = actionActivity9;

	sequenceFlow23.origin = actionActivity9;
	sequenceFlow23.destination = actionActivity8;

	sequenceFlow24.origin = actionActivity8;
	sequenceFlow24.destination = exclusiveMerge3;

	sequenceFlow25.origin = exclusiveSplit3;
	sequenceFlow25.destination = exclusiveSplit4;

	sequenceFlow26.origin = exclusiveSplit5;
	sequenceFlow26.destination = exclusiveMerge4;

	sequenceFlow27.origin = exclusiveSplit5;
	sequenceFlow27.destination = actionActivity11;

	sequenceFlow28.origin = actionActivity11;
	sequenceFlow28.destination = actionActivity10;

	sequenceFlow29.origin = actionActivity10;
	sequenceFlow29.destination = exclusiveMerge4;

	sequenceFlow30.origin = exclusiveMerge3;
	sequenceFlow30.destination = exclusiveSplit5;

	sequenceFlow31.origin = exclusiveMerge4;
	sequenceFlow31.destination = exclusiveMerge8;

	sequenceFlow32.origin = exclusiveSplit6;
	sequenceFlow32.destination = exclusiveMerge5;

	sequenceFlow33.origin = exclusiveSplit6;
	sequenceFlow33.destination = actionActivity13;

	sequenceFlow34.origin = actionActivity13;
	sequenceFlow34.destination = actionActivity12;

	sequenceFlow35.origin = actionActivity12;
	sequenceFlow35.destination = exclusiveMerge5;

	sequenceFlow36.origin = exclusiveSplit7;
	sequenceFlow36.destination = exclusiveMerge6;

	sequenceFlow37.origin = exclusiveSplit7;
	sequenceFlow37.destination = actionActivity15;

	sequenceFlow38.origin = actionActivity15;
	sequenceFlow38.destination = actionActivity14;

	sequenceFlow39.origin = actionActivity14;
	sequenceFlow39.destination = exclusiveMerge6;

	sequenceFlow40.origin = exclusiveMerge5;
	sequenceFlow40.destination = exclusiveSplit7;

	sequenceFlow41.origin = exclusiveSplit3;
	sequenceFlow41.destination = exclusiveSplit6;

	sequenceFlow42.origin = exclusiveSplit3;
	sequenceFlow42.destination = exclusiveMerge8;

	sequenceFlow43.origin = exclusiveSplit8;
	sequenceFlow43.destination = exclusiveMerge7;

	sequenceFlow44.origin = exclusiveSplit8;
	sequenceFlow44.destination = actionActivity17;

	sequenceFlow45.origin = actionActivity17;
	sequenceFlow45.destination = actionActivity16;

	sequenceFlow46.origin = actionActivity16;
	sequenceFlow46.destination = exclusiveMerge7;

	sequenceFlow47.origin = exclusiveMerge6;
	sequenceFlow47.destination = exclusiveSplit8;

	sequenceFlow48.origin = exclusiveSplit10;
	sequenceFlow48.destination = exclusiveMerge9;

	sequenceFlow49.origin = exclusiveSplit10;
	sequenceFlow49.destination = actionActivity19;

	sequenceFlow50.origin = actionActivity19;
	sequenceFlow50.destination = actionActivity18;

	sequenceFlow51.origin = actionActivity18;
	sequenceFlow51.destination = exclusiveMerge9;

	sequenceFlow52.origin = exclusiveMerge7;
	sequenceFlow52.destination = exclusiveSplit10;

	sequenceFlow53.origin = exclusiveMerge9;
	sequenceFlow53.destination = exclusiveMerge8;

	sequenceFlow54.origin = actionActivity20;
	sequenceFlow54.destination = exclusiveSplit11;

	sequenceFlow55.origin = exclusiveSplit11;
	sequenceFlow55.destination = endEvent2;

	sequenceFlow56.origin = exclusiveSplit11;
	sequenceFlow56.destination = actionActivity21;

	sequenceFlow57.origin = exclusiveSplit12;
	sequenceFlow57.destination = exclusiveMerge10;

	sequenceFlow58.origin = exclusiveMerge10;
	sequenceFlow58.destination = exclusiveSplit1;

	sequenceFlow59.origin = exclusiveSplit12;
	sequenceFlow59.destination = actionActivity23;

	sequenceFlow60.origin = exclusiveSplit12;
	sequenceFlow60.destination = exclusiveMerge11;

	sequenceFlow61.origin = exclusiveSplit12;
	sequenceFlow61.destination = exclusiveMerge11;

	sequenceFlow62.origin = exclusiveMerge11;
	sequenceFlow62.destination = actionActivity26;

	sequenceFlow63.origin = actionActivity23;
	sequenceFlow63.destination = actionActivity24;

	sequenceFlow64.origin = actionActivity24;
	sequenceFlow64.destination = exclusiveMerge10;

	sequenceFlow65.origin = exclusiveSplit12;
	sequenceFlow65.destination = exclusiveMerge12;

	sequenceFlow66.origin = actionActivity25;
	sequenceFlow66.destination = exclusiveMerge2;

	sequenceFlow67.origin = exclusiveMerge12;
	sequenceFlow67.destination = actionActivity25;

	sequenceFlow68.origin = actionActivity26;
	sequenceFlow68.destination = exclusiveMerge12;

})