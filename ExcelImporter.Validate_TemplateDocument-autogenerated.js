(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "f8ca193b-ec6e-4a0f-b640-3652a69b5e35" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$TemplateDocument != empty";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":435,"y":385};
	exclusiveSplit1.size = {"width":60,"height":40};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "found?";

	var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition2.expression = "$TemplateDocument/Name != empty and $TemplateDocument/Name != ''";

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":585,"y":385};
	exclusiveSplit2.size = {"width":60,"height":40};
	exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
	exclusiveSplit2.caption = "has file?";

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":920,"y":385};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "true";

	var expressionSplitCondition3 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition3.expression = "endsWith($TemplateDocument/Name,'.xls') or (endsWith($TemplateDocument/Name,'.xlsx'))";

	var exclusiveSplit3 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit3.relativeMiddlePoint = {"x":765,"y":385};
	exclusiveSplit3.size = {"width":120,"height":40};
	exclusiveSplit3.splitCondition = expressionSplitCondition3;   // Note: for this property a default value is defined.
	exclusiveSplit3.caption = "Ends with '.xls' or xlsx";

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":585,"y":640};
	endEvent2.size = {"width":20,"height":20};
	endEvent2.returnValue = "false\n";

	var endEvent3 = microflows.EndEvent.create(model);
	endEvent3.relativeMiddlePoint = {"x":435,"y":640};
	endEvent3.size = {"width":20,"height":20};
	endEvent3.returnValue = "false\n";

	var endEvent4 = microflows.EndEvent.create(model);
	endEvent4.relativeMiddlePoint = {"x":765,"y":640};
	endEvent4.size = {"width":20,"height":20};
	endEvent4.returnValue = "false\n";

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":340,"y":385};
	startEvent1.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("ExcelImporter.TemplateDocument");

	var templateDocument1 = microflows.MicroflowParameterObject.create(model);
	templateDocument1.relativeMiddlePoint = {"x":340,"y":275};
	templateDocument1.size = {"width":30,"height":30};
	templateDocument1.name = "TemplateDocument";
	templateDocument1.variableType = objectType1;   // Note: for this property a default value is defined.

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";
	translation1.text = "There is no excel document found for this template";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "nl_NL";
	translation2.text = "Er is geen excel bestand gevonden voor deze template";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_GB";
	translation3.text = "There is no excel document found for this template";

	var translation4 = texts.Translation.create(model);
	translation4.languageCode = "en_ZA";
	translation4.text = "There is no excel document found for this template";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);
	text1.translations.push(translation4);

	var textTemplate1 = microflows.TextTemplate.create(model);
	textTemplate1.text = text1;   // Note: for this property a default value is defined.

	var showMessageAction1 = microflows.ShowMessageAction.create(model);
	showMessageAction1.template = textTemplate1;   // Note: for this property a default value is defined.
	showMessageAction1.type = microflows.ShowMessageType.Warning;

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":435,"y":540};
	actionActivity1.size = {"width":140,"height":60};
	actionActivity1.action = showMessageAction1;

	var translation5 = texts.Translation.create(model);
	translation5.languageCode = "en_US";
	translation5.text = "There is no excel file uploaded for this template";

	var translation6 = texts.Translation.create(model);
	translation6.languageCode = "nl_NL";
	translation6.text = "Er is geen excel bestand geupload voor deze template";

	var translation7 = texts.Translation.create(model);
	translation7.languageCode = "en_GB";
	translation7.text = "There is no excel file uploaded for this template";

	var translation8 = texts.Translation.create(model);
	translation8.languageCode = "en_ZA";
	translation8.text = "There is no excel file uploaded for this template";

	var text2 = texts.Text.create(model);
	text2.translations.push(translation5);
	text2.translations.push(translation6);
	text2.translations.push(translation7);
	text2.translations.push(translation8);

	var textTemplate2 = microflows.TextTemplate.create(model);
	textTemplate2.text = text2;   // Note: for this property a default value is defined.

	var showMessageAction2 = microflows.ShowMessageAction.create(model);
	showMessageAction2.template = textTemplate2;   // Note: for this property a default value is defined.
	showMessageAction2.type = microflows.ShowMessageType.Warning;

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":585,"y":540};
	actionActivity2.size = {"width":140,"height":60};
	actionActivity2.action = showMessageAction2;

	var translation9 = texts.Translation.create(model);
	translation9.languageCode = "en_US";
	translation9.text = "The uploaded excel file should be of the type .xls";

	var translation10 = texts.Translation.create(model);
	translation10.languageCode = "nl_NL";
	translation10.text = "Het geuploade bestand moet van het type xls zijn";

	var translation11 = texts.Translation.create(model);
	translation11.languageCode = "en_GB";
	translation11.text = "The uploaded excel file should be of the type .xls";

	var translation12 = texts.Translation.create(model);
	translation12.languageCode = "en_ZA";
	translation12.text = "The uploaded excel file should be of the type .xls";

	var text3 = texts.Text.create(model);
	text3.translations.push(translation9);
	text3.translations.push(translation10);
	text3.translations.push(translation11);
	text3.translations.push(translation12);

	var textTemplate3 = microflows.TextTemplate.create(model);
	textTemplate3.text = text3;   // Note: for this property a default value is defined.

	var showMessageAction3 = microflows.ShowMessageAction.create(model);
	showMessageAction3.template = textTemplate3;   // Note: for this property a default value is defined.
	showMessageAction3.type = microflows.ShowMessageType.Warning;

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":765,"y":540};
	actionActivity3.size = {"width":150,"height":60};
	actionActivity3.action = showMessageAction3;

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(exclusiveSplit2);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(exclusiveSplit3);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(endEvent3);
	microflowObjectCollection1.objects.push(endEvent4);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(templateDocument1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(actionActivity3);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "false";

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 2;
	sequenceFlow2.originBezierVector = {"width":0,"height":15};
	sequenceFlow2.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow2.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "true";

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":15,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow3.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "true";

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":15,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow4.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "true";

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":15,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow5.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var enumerationCase5 = microflows.EnumerationCase.create(model);
	enumerationCase5.value = "false";

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 2;
	sequenceFlow6.originBezierVector = {"width":0,"height":15};
	sequenceFlow6.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow6.caseValue = enumerationCase5;   // Note: for this property a default value is defined.

	var enumerationCase6 = microflows.EnumerationCase.create(model);
	enumerationCase6.value = "false";

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 2;
	sequenceFlow7.originBezierVector = {"width":0,"height":15};
	sequenceFlow7.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow7.caseValue = enumerationCase6;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 2;
	sequenceFlow8.originBezierVector = {"width":0,"height":30};
	sequenceFlow8.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow8.caseValue = noCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 2;
	sequenceFlow9.originBezierVector = {"width":0,"height":30};
	sequenceFlow9.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow9.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.originConnectionIndex = 2;
	sequenceFlow10.originBezierVector = {"width":0,"height":30};
	sequenceFlow10.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow10.caseValue = noCase4;   // Note: for this property a default value is defined.

	var booleanType1 = datatypes.BooleanType.create(model);

	var translation13 = texts.Translation.create(model);
	translation13.languageCode = "en_US";

	var translation14 = texts.Translation.create(model);
	translation14.languageCode = "en_GB";

	var translation15 = texts.Translation.create(model);
	translation15.languageCode = "en_ZA";

	var text4 = texts.Text.create(model);
	text4.translations.push(translation13);
	text4.translations.push(translation14);
	text4.translations.push(translation15);

	var validate_TemplateDocument1 = microflows.Microflow.createIn(unit);
	validate_TemplateDocument1.name = "Validate_TemplateDocument";
	validate_TemplateDocument1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	validate_TemplateDocument1.flows.push(sequenceFlow1);
	validate_TemplateDocument1.flows.push(sequenceFlow2);
	validate_TemplateDocument1.flows.push(sequenceFlow3);
	validate_TemplateDocument1.flows.push(sequenceFlow4);
	validate_TemplateDocument1.flows.push(sequenceFlow5);
	validate_TemplateDocument1.flows.push(sequenceFlow6);
	validate_TemplateDocument1.flows.push(sequenceFlow7);
	validate_TemplateDocument1.flows.push(sequenceFlow8);
	validate_TemplateDocument1.flows.push(sequenceFlow9);
	validate_TemplateDocument1.flows.push(sequenceFlow10);
	validate_TemplateDocument1.microflowReturnType = booleanType1;
	validate_TemplateDocument1.concurrencyErrorMessage = text4;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = exclusiveSplit1;

	sequenceFlow2.origin = exclusiveSplit3;
	sequenceFlow2.destination = actionActivity3;

	sequenceFlow3.origin = exclusiveSplit3;
	sequenceFlow3.destination = endEvent1;

	sequenceFlow4.origin = exclusiveSplit1;
	sequenceFlow4.destination = exclusiveSplit2;

	sequenceFlow5.origin = exclusiveSplit2;
	sequenceFlow5.destination = exclusiveSplit3;

	sequenceFlow6.origin = exclusiveSplit2;
	sequenceFlow6.destination = actionActivity2;

	sequenceFlow7.origin = exclusiveSplit1;
	sequenceFlow7.destination = actionActivity1;

	sequenceFlow8.origin = actionActivity1;
	sequenceFlow8.destination = endEvent3;

	sequenceFlow9.origin = actionActivity2;
	sequenceFlow9.destination = endEvent2;

	sequenceFlow10.origin = actionActivity3;
	sequenceFlow10.destination = endEvent4;

})