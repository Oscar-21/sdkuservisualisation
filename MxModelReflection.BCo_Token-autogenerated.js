(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "e678b93d-438f-4fca-8d09-1d6ab59a4f3b" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$Token/TokenType";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":220,"y":200};
	exclusiveSplit1.size = {"width":60,"height":40};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "Token type";

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":220,"y":385};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "true";

	var memberChange1 = microflows.MemberChange.create(model);
	memberChange1.attribute = model.findAttributeByQualifiedName("MxModelReflection.Token.Status");
	memberChange1.value = "MxModelReflection.Status.Invalid";

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.items.push(memberChange1);
	changeObjectAction1.changeVariableName = "Token";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":220,"y":305};
	actionActivity1.size = {"width":80,"height":60};
	actionActivity1.action = changeObjectAction1;
	actionActivity1.caption = "Set invalid";
	actionActivity1.autoGenerateCaption = false;

	var associationRetrieveSource1 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource1.startVariableName = "Token";
	associationRetrieveSource1.association = model.findAssociationBaseByQualifiedName("MxModelReflection.Token_MxObjectMember");

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = associationRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "Member";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":405,"y":200};
	actionActivity2.size = {"width":130,"height":60};
	actionActivity2.action = retrieveAction1;
	actionActivity2.caption = "Retrieve the selected member";
	actionActivity2.autoGenerateCaption = false;

	var associationRetrieveSource2 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource2.startVariableName = "Token";
	associationRetrieveSource2.association = model.findAssociationBaseByQualifiedName("MxModelReflection.Token_MxObjectReference");

	var retrieveAction2 = microflows.RetrieveAction.create(model);
	retrieveAction2.retrieveSource = associationRetrieveSource2;   // Note: for this property a default value is defined.
	retrieveAction2.outputVariableName = "MxObjectReference";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":335,"y":60};
	actionActivity3.size = {"width":140,"height":60};
	actionActivity3.action = retrieveAction2;
	actionActivity3.caption = "Retrieve the selected reference";
	actionActivity3.autoGenerateCaption = false;

	var associationRetrieveSource3 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource3.startVariableName = "Token";
	associationRetrieveSource3.association = model.findAssociationBaseByQualifiedName("MxModelReflection.Token_MxObjectType_Referenced");

	var retrieveAction3 = microflows.RetrieveAction.create(model);
	retrieveAction3.retrieveSource = associationRetrieveSource3;   // Note: for this property a default value is defined.
	retrieveAction3.outputVariableName = "MxObjectTypeReference";

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":500,"y":60};
	actionActivity4.size = {"width":150,"height":60};
	actionActivity4.action = retrieveAction3;
	actionActivity4.caption = "Retrieve the selected objecttype";
	actionActivity4.autoGenerateCaption = false;

	var associationRetrieveSource4 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource4.startVariableName = "Token";
	associationRetrieveSource4.association = model.findAssociationBaseByQualifiedName("MxModelReflection.Token_MxObjectMember");

	var retrieveAction4 = microflows.RetrieveAction.create(model);
	retrieveAction4.retrieveSource = associationRetrieveSource4;   // Note: for this property a default value is defined.
	retrieveAction4.outputVariableName = "MemberReference";

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":665,"y":60};
	actionActivity5.size = {"width":130,"height":60};
	actionActivity5.action = retrieveAction4;
	actionActivity5.caption = "Retrieve the selected member";
	actionActivity5.autoGenerateCaption = false;

	var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition2.expression = "$Member != empty and $MxObjectTypeStart != empty";

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":830,"y":200};
	exclusiveSplit2.size = {"width":100,"height":60};
	exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
	exclusiveSplit2.caption = "has all associations";

	var memberChange2 = microflows.MemberChange.create(model);
	memberChange2.attribute = model.findAttributeByQualifiedName("MxModelReflection.Token.Status");
	memberChange2.value = "MxModelReflection.Status.Invalid";

	var changeObjectAction2 = microflows.ChangeObjectAction.create(model);
	changeObjectAction2.items.push(memberChange2);
	changeObjectAction2.changeVariableName = "Token";

	var actionActivity6 = microflows.ActionActivity.create(model);
	actionActivity6.relativeMiddlePoint = {"x":830,"y":305};
	actionActivity6.size = {"width":80,"height":60};
	actionActivity6.action = changeObjectAction2;
	actionActivity6.caption = "Set invalid";
	actionActivity6.autoGenerateCaption = false;

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":830,"y":385};
	endEvent2.size = {"width":20,"height":20};
	endEvent2.returnValue = "true";

	var expressionSplitCondition3 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition3.expression = "$MemberReference != empty and $MxObjectReference != empty \nand $MxObjectTypeStart != empty and $MxObjectTypeReference != empty";

	var exclusiveSplit3 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit3.relativeMiddlePoint = {"x":830,"y":60};
	exclusiveSplit3.size = {"width":100,"height":60};
	exclusiveSplit3.splitCondition = expressionSplitCondition3;   // Note: for this property a default value is defined.
	exclusiveSplit3.caption = "has all associations";

	var memberChange3 = microflows.MemberChange.create(model);
	memberChange3.attribute = model.findAttributeByQualifiedName("MxModelReflection.Token.Status");
	memberChange3.value = "MxModelReflection.Status.Invalid";

	var changeObjectAction3 = microflows.ChangeObjectAction.create(model);
	changeObjectAction3.items.push(memberChange3);
	changeObjectAction3.changeVariableName = "Token";

	var actionActivity7 = microflows.ActionActivity.create(model);
	actionActivity7.relativeMiddlePoint = {"x":830,"y":-45};
	actionActivity7.size = {"width":80,"height":60};
	actionActivity7.action = changeObjectAction3;
	actionActivity7.caption = "Set invalid";
	actionActivity7.autoGenerateCaption = false;

	var endEvent3 = microflows.EndEvent.create(model);
	endEvent3.relativeMiddlePoint = {"x":830,"y":-140};
	endEvent3.size = {"width":20,"height":20};
	endEvent3.returnValue = "true";

	var endEvent4 = microflows.EndEvent.create(model);
	endEvent4.relativeMiddlePoint = {"x":1100,"y":200};
	endEvent4.size = {"width":20,"height":20};
	endEvent4.returnValue = "true";

	var memberChange4 = microflows.MemberChange.create(model);
	memberChange4.attribute = model.findAttributeByQualifiedName("MxModelReflection.Token.Status");
	memberChange4.value = "MxModelReflection.Status.Valid";

	var memberChange5 = microflows.MemberChange.create(model);
	memberChange5.attribute = model.findAttributeByQualifiedName("MxModelReflection.Token.MetaModelPath");
	memberChange5.value = "$MxObjectTypeStart/CompleteName + '/' + $Member/AttributeName";

	var changeObjectAction4 = microflows.ChangeObjectAction.create(model);
	changeObjectAction4.items.push(memberChange4);
	changeObjectAction4.items.push(memberChange5);
	changeObjectAction4.changeVariableName = "Token";

	var actionActivity8 = microflows.ActionActivity.create(model);
	actionActivity8.relativeMiddlePoint = {"x":995,"y":200};
	actionActivity8.size = {"width":110,"height":60};
	actionActivity8.action = changeObjectAction4;
	actionActivity8.caption = "Set the path and status";
	actionActivity8.autoGenerateCaption = false;

	var endEvent5 = microflows.EndEvent.create(model);
	endEvent5.relativeMiddlePoint = {"x":1100,"y":60};
	endEvent5.size = {"width":20,"height":20};
	endEvent5.returnValue = "true";

	var memberChange6 = microflows.MemberChange.create(model);
	memberChange6.attribute = model.findAttributeByQualifiedName("MxModelReflection.Token.Status");
	memberChange6.value = "MxModelReflection.Status.Valid";

	var memberChange7 = microflows.MemberChange.create(model);
	memberChange7.attribute = model.findAttributeByQualifiedName("MxModelReflection.Token.MetaModelPath");
	memberChange7.value = "$MxObjectTypeStart/CompleteName + '/' + $MxObjectReference/CompleteName\n + '/' + $MxObjectTypeReference/CompleteName\n + '/' + $MemberReference/AttributeName";

	var changeObjectAction5 = microflows.ChangeObjectAction.create(model);
	changeObjectAction5.items.push(memberChange6);
	changeObjectAction5.items.push(memberChange7);
	changeObjectAction5.changeVariableName = "Token";

	var actionActivity9 = microflows.ActionActivity.create(model);
	actionActivity9.relativeMiddlePoint = {"x":995,"y":60};
	actionActivity9.size = {"width":110,"height":60};
	actionActivity9.action = changeObjectAction5;
	actionActivity9.caption = "Set the path and status";
	actionActivity9.autoGenerateCaption = false;

	var associationRetrieveSource5 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource5.startVariableName = "Token";
	associationRetrieveSource5.association = model.findAssociationBaseByQualifiedName("MxModelReflection.Token_MxObjectType_Start");

	var retrieveAction5 = microflows.RetrieveAction.create(model);
	retrieveAction5.retrieveSource = associationRetrieveSource5;   // Note: for this property a default value is defined.
	retrieveAction5.outputVariableName = "MxObjectTypeStart";

	var actionActivity10 = microflows.ActionActivity.create(model);
	actionActivity10.relativeMiddlePoint = {"x":95,"y":200};
	actionActivity10.size = {"width":130,"height":60};
	actionActivity10.action = retrieveAction5;
	actionActivity10.caption = "Retrieve the start objecttype";
	actionActivity10.autoGenerateCaption = false;

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":-225,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("MxModelReflection.Token");

	var token1 = microflows.MicroflowParameterObject.create(model);
	token1.relativeMiddlePoint = {"x":-225,"y":125};
	token1.size = {"width":30,"height":30};
	token1.name = "Token";
	token1.variableType = objectType1;   // Note: for this property a default value is defined.

	var memberChange8 = microflows.MemberChange.create(model);
	memberChange8.attribute = model.findAttributeByQualifiedName("MxModelReflection.Token.CombinedToken");
	memberChange8.value = "$Token/Prefix + $Token/Token + $Token/Suffix";

	var memberChange9 = microflows.MemberChange.create(model);
	memberChange9.attribute = model.findAttributeByQualifiedName("MxModelReflection.Token.Description");
	memberChange9.value = "if $Token/Description = empty or $Token/Description = ''\nthen $Token/Token\nelse $Token/Description";

	var changeObjectAction6 = microflows.ChangeObjectAction.create(model);
	changeObjectAction6.items.push(memberChange8);
	changeObjectAction6.items.push(memberChange9);
	changeObjectAction6.changeVariableName = "Token";

	var actionActivity11 = microflows.ActionActivity.create(model);
	actionActivity11.relativeMiddlePoint = {"x":-95,"y":200};
	actionActivity11.size = {"width":160,"height":60};
	actionActivity11.action = changeObjectAction6;
	actionActivity11.caption = "Update the combined token attribute";
	actionActivity11.autoGenerateCaption = false;

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(actionActivity5);
	microflowObjectCollection1.objects.push(exclusiveSplit2);
	microflowObjectCollection1.objects.push(actionActivity6);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(exclusiveSplit3);
	microflowObjectCollection1.objects.push(actionActivity7);
	microflowObjectCollection1.objects.push(endEvent3);
	microflowObjectCollection1.objects.push(endEvent4);
	microflowObjectCollection1.objects.push(actionActivity8);
	microflowObjectCollection1.objects.push(endEvent5);
	microflowObjectCollection1.objects.push(actionActivity9);
	microflowObjectCollection1.objects.push(actionActivity10);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(token1);
	microflowObjectCollection1.objects.push(actionActivity11);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "Attribute";

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":15,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "(empty)";

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 2;
	sequenceFlow3.originBezierVector = {"width":0,"height":15};
	sequenceFlow3.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow3.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 2;
	sequenceFlow4.originBezierVector = {"width":0,"height":30};
	sequenceFlow4.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow4.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "Reference";

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":0,"height":-15};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 1;
	sequenceFlow6.destinationConnectionIndex = 3;
	sequenceFlow6.originBezierVector = {"width":30,"height":0};
	sequenceFlow6.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow6.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":30,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow7.caseValue = noCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 1;
	sequenceFlow8.destinationConnectionIndex = 3;
	sequenceFlow8.originBezierVector = {"width":30,"height":0};
	sequenceFlow8.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow8.caseValue = noCase5;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "true";

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 1;
	sequenceFlow9.destinationConnectionIndex = 3;
	sequenceFlow9.originBezierVector = {"width":15,"height":0};
	sequenceFlow9.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow9.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.originConnectionIndex = 1;
	sequenceFlow10.destinationConnectionIndex = 3;
	sequenceFlow10.originBezierVector = {"width":30,"height":0};
	sequenceFlow10.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow10.caseValue = noCase6;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow11 = microflows.SequenceFlow.create(model);
	sequenceFlow11.originConnectionIndex = 2;
	sequenceFlow11.originBezierVector = {"width":0,"height":30};
	sequenceFlow11.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow11.caseValue = noCase7;   // Note: for this property a default value is defined.

	var enumerationCase5 = microflows.EnumerationCase.create(model);
	enumerationCase5.value = "false";

	var sequenceFlow12 = microflows.SequenceFlow.create(model);
	sequenceFlow12.originConnectionIndex = 2;
	sequenceFlow12.originBezierVector = {"width":0,"height":15};
	sequenceFlow12.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow12.caseValue = enumerationCase5;   // Note: for this property a default value is defined.

	var noCase8 = microflows.NoCase.create(model);

	var sequenceFlow13 = microflows.SequenceFlow.create(model);
	sequenceFlow13.originConnectionIndex = 1;
	sequenceFlow13.destinationConnectionIndex = 3;
	sequenceFlow13.originBezierVector = {"width":30,"height":0};
	sequenceFlow13.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow13.caseValue = noCase8;   // Note: for this property a default value is defined.

	var noCase9 = microflows.NoCase.create(model);

	var sequenceFlow14 = microflows.SequenceFlow.create(model);
	sequenceFlow14.originConnectionIndex = 1;
	sequenceFlow14.destinationConnectionIndex = 3;
	sequenceFlow14.originBezierVector = {"width":30,"height":0};
	sequenceFlow14.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow14.caseValue = noCase9;   // Note: for this property a default value is defined.

	var noCase10 = microflows.NoCase.create(model);

	var sequenceFlow15 = microflows.SequenceFlow.create(model);
	sequenceFlow15.destinationConnectionIndex = 2;
	sequenceFlow15.originBezierVector = {"width":0,"height":-30};
	sequenceFlow15.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow15.caseValue = noCase10;   // Note: for this property a default value is defined.

	var enumerationCase6 = microflows.EnumerationCase.create(model);
	enumerationCase6.value = "false";

	var sequenceFlow16 = microflows.SequenceFlow.create(model);
	sequenceFlow16.destinationConnectionIndex = 2;
	sequenceFlow16.originBezierVector = {"width":0,"height":-15};
	sequenceFlow16.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow16.caseValue = enumerationCase6;   // Note: for this property a default value is defined.

	var enumerationCase7 = microflows.EnumerationCase.create(model);
	enumerationCase7.value = "true";

	var sequenceFlow17 = microflows.SequenceFlow.create(model);
	sequenceFlow17.originConnectionIndex = 1;
	sequenceFlow17.destinationConnectionIndex = 3;
	sequenceFlow17.originBezierVector = {"width":15,"height":0};
	sequenceFlow17.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow17.caseValue = enumerationCase7;   // Note: for this property a default value is defined.

	var noCase11 = microflows.NoCase.create(model);

	var sequenceFlow18 = microflows.SequenceFlow.create(model);
	sequenceFlow18.originConnectionIndex = 1;
	sequenceFlow18.destinationConnectionIndex = 3;
	sequenceFlow18.originBezierVector = {"width":30,"height":0};
	sequenceFlow18.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow18.caseValue = noCase11;   // Note: for this property a default value is defined.

	var noCase12 = microflows.NoCase.create(model);

	var sequenceFlow19 = microflows.SequenceFlow.create(model);
	sequenceFlow19.originConnectionIndex = 1;
	sequenceFlow19.destinationConnectionIndex = 3;
	sequenceFlow19.originBezierVector = {"width":30,"height":0};
	sequenceFlow19.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow19.caseValue = noCase12;   // Note: for this property a default value is defined.

	var booleanType1 = datatypes.BooleanType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "en_GB";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_ZA";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);

	var bCo_Token1 = microflows.Microflow.createIn(unit);
	bCo_Token1.name = "BCo_Token";
	bCo_Token1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	bCo_Token1.flows.push(sequenceFlow1);
	bCo_Token1.flows.push(sequenceFlow2);
	bCo_Token1.flows.push(sequenceFlow3);
	bCo_Token1.flows.push(sequenceFlow4);
	bCo_Token1.flows.push(sequenceFlow5);
	bCo_Token1.flows.push(sequenceFlow6);
	bCo_Token1.flows.push(sequenceFlow7);
	bCo_Token1.flows.push(sequenceFlow8);
	bCo_Token1.flows.push(sequenceFlow9);
	bCo_Token1.flows.push(sequenceFlow10);
	bCo_Token1.flows.push(sequenceFlow11);
	bCo_Token1.flows.push(sequenceFlow12);
	bCo_Token1.flows.push(sequenceFlow13);
	bCo_Token1.flows.push(sequenceFlow14);
	bCo_Token1.flows.push(sequenceFlow15);
	bCo_Token1.flows.push(sequenceFlow16);
	bCo_Token1.flows.push(sequenceFlow17);
	bCo_Token1.flows.push(sequenceFlow18);
	bCo_Token1.flows.push(sequenceFlow19);
	bCo_Token1.microflowReturnType = booleanType1;
	bCo_Token1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity11;

	sequenceFlow2.origin = exclusiveSplit1;
	sequenceFlow2.destination = actionActivity2;

	sequenceFlow3.origin = exclusiveSplit1;
	sequenceFlow3.destination = actionActivity1;

	sequenceFlow4.origin = actionActivity1;
	sequenceFlow4.destination = endEvent1;

	sequenceFlow5.origin = exclusiveSplit1;
	sequenceFlow5.destination = actionActivity3;

	sequenceFlow6.origin = actionActivity3;
	sequenceFlow6.destination = actionActivity4;

	sequenceFlow7.origin = actionActivity10;
	sequenceFlow7.destination = exclusiveSplit1;

	sequenceFlow8.origin = actionActivity2;
	sequenceFlow8.destination = exclusiveSplit2;

	sequenceFlow9.origin = exclusiveSplit2;
	sequenceFlow9.destination = actionActivity8;

	sequenceFlow10.origin = actionActivity8;
	sequenceFlow10.destination = endEvent4;

	sequenceFlow11.origin = actionActivity6;
	sequenceFlow11.destination = endEvent2;

	sequenceFlow12.origin = exclusiveSplit2;
	sequenceFlow12.destination = actionActivity6;

	sequenceFlow13.origin = actionActivity4;
	sequenceFlow13.destination = actionActivity5;

	sequenceFlow14.origin = actionActivity5;
	sequenceFlow14.destination = exclusiveSplit3;

	sequenceFlow15.origin = actionActivity7;
	sequenceFlow15.destination = endEvent3;

	sequenceFlow16.origin = exclusiveSplit3;
	sequenceFlow16.destination = actionActivity7;

	sequenceFlow17.origin = exclusiveSplit3;
	sequenceFlow17.destination = actionActivity9;

	sequenceFlow18.origin = actionActivity9;
	sequenceFlow18.destination = endEvent5;

	sequenceFlow19.origin = actionActivity11;
	sequenceFlow19.destination = actionActivity10;

})