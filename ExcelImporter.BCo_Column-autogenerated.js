(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "89287743-5b7e-4a3a-9d9a-3c3a4af851cb" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var ruleCallParameterMapping1 = microflows.RuleCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	ruleCallParameterMapping1.__parameter.updateWithRawValue("ExcelImporter.ValidateColumn.Column");
	ruleCallParameterMapping1.argument = "$pColumn";

	var ruleCallParameterMapping2 = microflows.RuleCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	ruleCallParameterMapping2.__parameter.updateWithRawValue("ExcelImporter.ValidateColumn.Template");
	ruleCallParameterMapping2.argument = "$Template";

	var ruleCall1 = microflows.RuleCall.create(model);
	ruleCall1.rule = model.findRuleByQualifiedName("ExcelImporter.ValidateColumn");
	ruleCall1.parameterMappings.push(ruleCallParameterMapping1);
	ruleCall1.parameterMappings.push(ruleCallParameterMapping2);

	var ruleSplitCondition1 = microflows.RuleSplitCondition.create(model);
	ruleSplitCondition1.ruleCall = ruleCall1;   // Note: for this property a default value is defined.

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":770,"y":200};
	exclusiveSplit1.size = {"width":80,"height":40};
	exclusiveSplit1.splitCondition = ruleSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "VALID?";

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";
	translation1.text = "The reference field is mandatory when mapping type 'Reference' is selected";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "nl_NL";
	translation2.text = "Het referentie veld moet verplicht geselecteerd worden als het type 'Referentie' is geselecteerd";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_GB";
	translation3.text = "The reference field is mandatory when mapping type 'Reference' is selected";

	var translation4 = texts.Translation.create(model);
	translation4.languageCode = "en_ZA";
	translation4.text = "The reference field is mandatory when mapping type 'Reference' is selected";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);
	text1.translations.push(translation4);

	var textTemplate1 = microflows.TextTemplate.create(model);
	textTemplate1.text = text1;   // Note: for this property a default value is defined.

	var showMessageAction1 = microflows.ShowMessageAction.create(model);
	showMessageAction1.template = textTemplate1;   // Note: for this property a default value is defined.
	showMessageAction1.type = microflows.ShowMessageType.Warning;
	showMessageAction1.blocking = false;

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":575,"y":-95};
	actionActivity1.size = {"width":80,"height":30};
	actionActivity1.action = showMessageAction1;
	actionActivity1.caption = "WARN";
	actionActivity1.autoGenerateCaption = false;

	var translation5 = texts.Translation.create(model);
	translation5.languageCode = "en_US";
	translation5.text = "An objecttype must be selected when the mapping type 'Reference' is selected";

	var translation6 = texts.Translation.create(model);
	translation6.languageCode = "nl_NL";
	translation6.text = "Een objecttype moet geselecteerd worden als het bij mapping type 'Referentie' is geselecteerd";

	var translation7 = texts.Translation.create(model);
	translation7.languageCode = "en_GB";
	translation7.text = "An objecttype must be selected when the mapping type 'Reference' is selected";

	var translation8 = texts.Translation.create(model);
	translation8.languageCode = "en_ZA";
	translation8.text = "An objecttype must be selected when the mapping type 'Reference' is selected";

	var text2 = texts.Text.create(model);
	text2.translations.push(translation5);
	text2.translations.push(translation6);
	text2.translations.push(translation7);
	text2.translations.push(translation8);

	var textTemplate2 = microflows.TextTemplate.create(model);
	textTemplate2.text = text2;   // Note: for this property a default value is defined.

	var showMessageAction2 = microflows.ShowMessageAction.create(model);
	showMessageAction2.template = textTemplate2;   // Note: for this property a default value is defined.
	showMessageAction2.type = microflows.ShowMessageType.Warning;
	showMessageAction2.blocking = false;

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":675,"y":-95};
	actionActivity2.size = {"width":80,"height":30};
	actionActivity2.action = showMessageAction2;
	actionActivity2.caption = "WARN";
	actionActivity2.autoGenerateCaption = false;

	var translation9 = texts.Translation.create(model);
	translation9.languageCode = "en_US";
	translation9.text = "A mapping type must be selected before you can save this column";

	var translation10 = texts.Translation.create(model);
	translation10.languageCode = "nl_NL";
	translation10.text = "Een mapping type moet geselecteerd worden voor je deze kolom mag opslaan";

	var translation11 = texts.Translation.create(model);
	translation11.languageCode = "en_GB";
	translation11.text = "A mapping type must be selected before you can save this column";

	var translation12 = texts.Translation.create(model);
	translation12.languageCode = "en_ZA";
	translation12.text = "A mapping type must be selected before you can save this column";

	var text3 = texts.Text.create(model);
	text3.translations.push(translation9);
	text3.translations.push(translation10);
	text3.translations.push(translation11);
	text3.translations.push(translation12);

	var textTemplate3 = microflows.TextTemplate.create(model);
	textTemplate3.text = text3;   // Note: for this property a default value is defined.

	var showMessageAction3 = microflows.ShowMessageAction.create(model);
	showMessageAction3.template = textTemplate3;   // Note: for this property a default value is defined.
	showMessageAction3.type = microflows.ShowMessageType.Warning;

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":985,"y":225};
	actionActivity3.size = {"width":80,"height":30};
	actionActivity3.action = showMessageAction3;
	actionActivity3.caption = "WARN";
	actionActivity3.autoGenerateCaption = false;

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":1075,"y":225};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "false";

	var memberChange1 = microflows.MemberChange.create(model);
	memberChange1.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.Status");
	memberChange1.value = "ExcelImporter.Status.INFO";

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.items.push(memberChange1);
	changeObjectAction1.changeVariableName = "pColumn";

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":985,"y":160};
	actionActivity4.size = {"width":100,"height":40};
	actionActivity4.action = changeObjectAction1;
	actionActivity4.caption = "Set status info";
	actionActivity4.autoGenerateCaption = false;

	var translation13 = texts.Translation.create(model);
	translation13.languageCode = "en_US";
	translation13.text = "The attribute field is mandatory";

	var translation14 = texts.Translation.create(model);
	translation14.languageCode = "nl_NL";
	translation14.text = "Het attribuut veld is verplicht";

	var translation15 = texts.Translation.create(model);
	translation15.languageCode = "en_GB";
	translation15.text = "The attribute field is mandatory";

	var translation16 = texts.Translation.create(model);
	translation16.languageCode = "en_ZA";
	translation16.text = "The attribute field is mandatory";

	var text4 = texts.Text.create(model);
	text4.translations.push(translation13);
	text4.translations.push(translation14);
	text4.translations.push(translation15);
	text4.translations.push(translation16);

	var textTemplate4 = microflows.TextTemplate.create(model);
	textTemplate4.text = text4;   // Note: for this property a default value is defined.

	var validationFeedbackAction1 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction1.feedbackTemplate = textTemplate4;   // Note: for this property a default value is defined.
	validationFeedbackAction1.objectVariableName = "pColumn";
	validationFeedbackAction1.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectMember");

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":985,"y":325};
	actionActivity5.size = {"width":80,"height":30};
	actionActivity5.action = validationFeedbackAction1;
	actionActivity5.caption = "WARN";
	actionActivity5.autoGenerateCaption = false;

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":1075,"y":325};
	endEvent2.size = {"width":20,"height":20};
	endEvent2.returnValue = "false";

	var microflowCallParameterMapping1 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping1.__parameter.updateWithRawValue("ExcelImporter.prepareReferenceHandling.pColumn");
	microflowCallParameterMapping1.argument = "$pColumn";

	var microflowCall1 = microflows.MicroflowCall.create(model);
	microflowCall1.microflow = model.findMicroflowByQualifiedName("ExcelImporter.prepareReferenceHandling");
	microflowCall1.parameterMappings.push(microflowCallParameterMapping1);

	var microflowCallAction1 = microflows.MicroflowCallAction.create(model);
	microflowCallAction1.microflowCall = microflowCall1;   // Note: for this property a default value is defined.

	var actionActivity6 = microflows.ActionActivity.create(model);
	actionActivity6.relativeMiddlePoint = {"x":1145,"y":160};
	actionActivity6.size = {"width":140,"height":60};
	actionActivity6.action = microflowCallAction1;
	actionActivity6.caption = "Create or remove the reference handling objects";
	actionActivity6.autoGenerateCaption = false;

	var translation17 = texts.Translation.create(model);
	translation17.languageCode = "en_US";
	translation17.text = "An invalid reference was selected. The selected reference belongs to a different objectType";

	var translation18 = texts.Translation.create(model);
	translation18.languageCode = "nl_NL";
	translation18.text = "Een ongeldige referentie is geselecteerd, De referentie hoort niet bij het gekozen template objecttype";

	var translation19 = texts.Translation.create(model);
	translation19.languageCode = "en_GB";
	translation19.text = "An invalid reference was selected. The selected reference belongs to a different objectType";

	var translation20 = texts.Translation.create(model);
	translation20.languageCode = "en_ZA";
	translation20.text = "An invalid reference was selected. The selected reference belongs to a different objectType";

	var text5 = texts.Text.create(model);
	text5.translations.push(translation17);
	text5.translations.push(translation18);
	text5.translations.push(translation19);
	text5.translations.push(translation20);

	var textTemplate5 = microflows.TextTemplate.create(model);
	textTemplate5.text = text5;   // Note: for this property a default value is defined.

	var showMessageAction4 = microflows.ShowMessageAction.create(model);
	showMessageAction4.template = textTemplate5;   // Note: for this property a default value is defined.
	showMessageAction4.type = microflows.ShowMessageType.Warning;
	showMessageAction4.blocking = false;

	var actionActivity7 = microflows.ActionActivity.create(model);
	actionActivity7.relativeMiddlePoint = {"x":770,"y":-95};
	actionActivity7.size = {"width":80,"height":30};
	actionActivity7.action = showMessageAction4;
	actionActivity7.caption = "WARN";
	actionActivity7.autoGenerateCaption = false;

	var translation21 = texts.Translation.create(model);
	translation21.languageCode = "en_US";
	translation21.text = "So far there are no columns defined as key for this association. At least 1 column must be defined as a key.";

	var translation22 = texts.Translation.create(model);
	translation22.languageCode = "nl_NL";
	translation22.text = "Er zijn nog geen kolommen als zoeksleutel gedefinieerd voor deze referentie. Er moet tenminste 1 kolom ingesteld worden als sleutel";

	var translation23 = texts.Translation.create(model);
	translation23.languageCode = "en_GB";
	translation23.text = "So far there are no columns defined as key for this association. At least 1 column must be defined as a key.";

	var translation24 = texts.Translation.create(model);
	translation24.languageCode = "en_ZA";
	translation24.text = "So far there are no columns defined as key for this association. At least 1 column must be defined as a key.";

	var text6 = texts.Text.create(model);
	text6.translations.push(translation21);
	text6.translations.push(translation22);
	text6.translations.push(translation23);
	text6.translations.push(translation24);

	var textTemplate6 = microflows.TextTemplate.create(model);
	textTemplate6.text = text6;   // Note: for this property a default value is defined.

	var showMessageAction5 = microflows.ShowMessageAction.create(model);
	showMessageAction5.template = textTemplate6;   // Note: for this property a default value is defined.
	showMessageAction5.type = microflows.ShowMessageType.Warning;
	showMessageAction5.blocking = false;

	var actionActivity8 = microflows.ActionActivity.create(model);
	actionActivity8.relativeMiddlePoint = {"x":1055,"y":-95};
	actionActivity8.size = {"width":80,"height":30};
	actionActivity8.action = showMessageAction5;
	actionActivity8.caption = "WARN";
	actionActivity8.autoGenerateCaption = false;

	var translation25 = texts.Translation.create(model);
	translation25.languageCode = "en_US";
	translation25.text = "An invalid objectType was selected. The selected objectType is not part of this reference";

	var translation26 = texts.Translation.create(model);
	translation26.languageCode = "nl_NL";
	translation26.text = "Een ongeldig objecttype is geselecteerd. Het geselecteerde type maakt geen deel uit van de referentie";

	var translation27 = texts.Translation.create(model);
	translation27.languageCode = "en_GB";
	translation27.text = "An invalid objectType was selected. The selected objectType is not part of this reference";

	var translation28 = texts.Translation.create(model);
	translation28.languageCode = "en_ZA";
	translation28.text = "An invalid objectType was selected. The selected objectType is not part of this reference";

	var text7 = texts.Text.create(model);
	text7.translations.push(translation25);
	text7.translations.push(translation26);
	text7.translations.push(translation27);
	text7.translations.push(translation28);

	var textTemplate7 = microflows.TextTemplate.create(model);
	textTemplate7.text = text7;   // Note: for this property a default value is defined.

	var showMessageAction6 = microflows.ShowMessageAction.create(model);
	showMessageAction6.template = textTemplate7;   // Note: for this property a default value is defined.
	showMessageAction6.type = microflows.ShowMessageType.Warning;

	var actionActivity9 = microflows.ActionActivity.create(model);
	actionActivity9.relativeMiddlePoint = {"x":960,"y":-95};
	actionActivity9.size = {"width":80,"height":30};
	actionActivity9.action = showMessageAction6;
	actionActivity9.caption = "WARN";
	actionActivity9.autoGenerateCaption = false;

	var translation29 = texts.Translation.create(model);
	translation29.languageCode = "en_US";
	translation29.text = "An invalid attribute was selected. The selected attribute belongs to a different objectType";

	var translation30 = texts.Translation.create(model);
	translation30.languageCode = "nl_NL";
	translation30.text = "Een ongelige attribuut is geselecteerd. Het attribuut hoort bij een ander objecttype";

	var translation31 = texts.Translation.create(model);
	translation31.languageCode = "en_GB";
	translation31.text = "An invalid attribute was selected. The selected attribute belongs to a different objectType";

	var translation32 = texts.Translation.create(model);
	translation32.languageCode = "en_ZA";
	translation32.text = "An invalid attribute was selected. The selected attribute belongs to a different objectType";

	var text8 = texts.Text.create(model);
	text8.translations.push(translation29);
	text8.translations.push(translation30);
	text8.translations.push(translation31);
	text8.translations.push(translation32);

	var textTemplate8 = microflows.TextTemplate.create(model);
	textTemplate8.text = text8;   // Note: for this property a default value is defined.

	var showMessageAction7 = microflows.ShowMessageAction.create(model);
	showMessageAction7.template = textTemplate8;   // Note: for this property a default value is defined.
	showMessageAction7.type = microflows.ShowMessageType.Warning;

	var actionActivity10 = microflows.ActionActivity.create(model);
	actionActivity10.relativeMiddlePoint = {"x":865,"y":-95};
	actionActivity10.size = {"width":80,"height":30};
	actionActivity10.action = showMessageAction7;
	actionActivity10.caption = "WARN";
	actionActivity10.autoGenerateCaption = false;

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":105,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("ExcelImporter.Column");

	var pColumn1 = microflows.MicroflowParameterObject.create(model);
	pColumn1.relativeMiddlePoint = {"x":105,"y":105};
	pColumn1.size = {"width":30,"height":30};
	pColumn1.name = "pColumn";
	pColumn1.variableType = objectType1;   // Note: for this property a default value is defined.

	var microflowCallParameterMapping2 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping2.__parameter.updateWithRawValue("ExcelImporter.Column_SetDetails.pColumn");
	microflowCallParameterMapping2.argument = "$pColumn";

	var microflowCall2 = microflows.MicroflowCall.create(model);
	microflowCall2.microflow = model.findMicroflowByQualifiedName("ExcelImporter.Column_SetDetails");
	microflowCall2.parameterMappings.push(microflowCallParameterMapping2);

	var microflowCallAction2 = microflows.MicroflowCallAction.create(model);
	microflowCallAction2.microflowCall = microflowCall2;   // Note: for this property a default value is defined.

	var actionActivity11 = microflows.ActionActivity.create(model);
	actionActivity11.relativeMiddlePoint = {"x":215,"y":200};
	actionActivity11.size = {"width":120,"height":60};
	actionActivity11.action = microflowCallAction2;
	actionActivity11.caption = "Set the details of the column";
	actionActivity11.autoGenerateCaption = false;

	var memberChange2 = microflows.MemberChange.create(model);
	memberChange2.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.IsReferenceKey");
	memberChange2.value = "if( $pColumn/MappingType = ExcelImporter.MappingType.Attribute ) then \n\tif( $pColumn/IsKey = ExcelImporter.YesNo.Yes ) then\n\t\tExcelImporter.ReferenceKeyType.YesOnlyMainObject \n\telse\n\t\tExcelImporter.ReferenceKeyType.NoKey\nelse\n\t$pColumn/IsReferenceKey";

	var changeObjectAction2 = microflows.ChangeObjectAction.create(model);
	changeObjectAction2.items.push(memberChange2);
	changeObjectAction2.changeVariableName = "pColumn";

	var actionActivity12 = microflows.ActionActivity.create(model);
	actionActivity12.relativeMiddlePoint = {"x":380,"y":200};
	actionActivity12.size = {"width":130,"height":60};
	actionActivity12.action = changeObjectAction2;
	actionActivity12.caption = "Update the isreferencekey attribute";
	actionActivity12.autoGenerateCaption = false;

	var endEvent3 = microflows.EndEvent.create(model);
	endEvent3.relativeMiddlePoint = {"x":1450,"y":160};
	endEvent3.size = {"width":20,"height":20};
	endEvent3.returnValue = "true";

	var memberChange3 = microflows.MemberChange.create(model);
	memberChange3.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.FindAttribute");
	memberChange3.value = "empty";

	var memberChange4 = microflows.MemberChange.create(model);
	memberChange4.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.FindReference");
	memberChange4.value = "empty";

	var memberChange5 = microflows.MemberChange.create(model);
	memberChange5.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.FindObjectType");
	memberChange5.value = "empty";

	var memberChange6 = microflows.MemberChange.create(model);
	memberChange6.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.FindMicroflow");
	memberChange6.value = "empty";

	var memberChange7 = microflows.MemberChange.create(model);
	memberChange7.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectType_Reference");
	memberChange7.value = "empty";

	var memberChange8 = microflows.MemberChange.create(model);
	memberChange8.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectMember");
	memberChange8.value = "empty";

	var memberChange9 = microflows.MemberChange.create(model);
	memberChange9.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectMember_Reference");
	memberChange9.value = "empty";

	var memberChange10 = microflows.MemberChange.create(model);
	memberChange10.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_MxObjectReference");
	memberChange10.value = "empty";

	var memberChange11 = microflows.MemberChange.create(model);
	memberChange11.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_Microflows");
	memberChange11.value = "empty";

	var memberChange12 = microflows.MemberChange.create(model);
	memberChange12.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.IsKey");
	memberChange12.value = "ExcelImporter.YesNo.No";

	var memberChange13 = microflows.MemberChange.create(model);
	memberChange13.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.IsReferenceKey");
	memberChange13.value = "ExcelImporter.ReferenceKeyType.NoKey";

	var memberChange14 = microflows.MemberChange.create(model);
	memberChange14.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.Details");
	memberChange14.value = "empty";

	var changeObjectAction3 = microflows.ChangeObjectAction.create(model);
	changeObjectAction3.items.push(memberChange3);
	changeObjectAction3.items.push(memberChange4);
	changeObjectAction3.items.push(memberChange5);
	changeObjectAction3.items.push(memberChange6);
	changeObjectAction3.items.push(memberChange7);
	changeObjectAction3.items.push(memberChange8);
	changeObjectAction3.items.push(memberChange9);
	changeObjectAction3.items.push(memberChange10);
	changeObjectAction3.items.push(memberChange11);
	changeObjectAction3.items.push(memberChange12);
	changeObjectAction3.items.push(memberChange13);
	changeObjectAction3.items.push(memberChange14);
	changeObjectAction3.changeVariableName = "pColumn";

	var actionActivity13 = microflows.ActionActivity.create(model);
	actionActivity13.relativeMiddlePoint = {"x":1300,"y":160};
	actionActivity13.size = {"width":90,"height":60};
	actionActivity13.action = changeObjectAction3;
	actionActivity13.caption = "Reset all attributes";
	actionActivity13.autoGenerateCaption = false;

	var endEvent4 = microflows.EndEvent.create(model);
	endEvent4.relativeMiddlePoint = {"x":1540,"y":510};
	endEvent4.size = {"width":20,"height":20};
	endEvent4.returnValue = "true";

	var ruleCallParameterMapping3 = microflows.RuleCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	ruleCallParameterMapping3.__parameter.updateWithRawValue("ExcelImporter.ValidateColumnMF.Column");
	ruleCallParameterMapping3.argument = "$pColumn";

	var ruleCall2 = microflows.RuleCall.create(model);
	ruleCall2.rule = model.findRuleByQualifiedName("ExcelImporter.ValidateColumnMF");
	ruleCall2.parameterMappings.push(ruleCallParameterMapping3);

	var ruleSplitCondition2 = microflows.RuleSplitCondition.create(model);
	ruleSplitCondition2.ruleCall = ruleCall2;   // Note: for this property a default value is defined.

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":1185,"y":510};
	exclusiveSplit2.size = {"width":60,"height":40};
	exclusiveSplit2.splitCondition = ruleSplitCondition2;   // Note: for this property a default value is defined.

	var memberChange15 = microflows.MemberChange.create(model);
	memberChange15.attribute = model.findAttributeByQualifiedName("ExcelImporter.Column.Status");
	memberChange15.value = "ExcelImporter.Status.VALID";

	var changeObjectAction4 = microflows.ChangeObjectAction.create(model);
	changeObjectAction4.items.push(memberChange15);
	changeObjectAction4.changeVariableName = "pColumn";

	var actionActivity14 = microflows.ActionActivity.create(model);
	actionActivity14.relativeMiddlePoint = {"x":1440,"y":510};
	actionActivity14.size = {"width":90,"height":60};
	actionActivity14.action = changeObjectAction4;
	actionActivity14.caption = "Set the column valid";
	actionActivity14.autoGenerateCaption = false;

	var translation33 = texts.Translation.create(model);
	translation33.languageCode = "en_US";
	translation33.text = "The selected microflow must have 1 input parameter but has 0 parameters.";

	var translation34 = texts.Translation.create(model);
	translation34.languageCode = "nl_NL";
	translation34.text = "De geselecteerde microflow moet 1 input parameter hebben, maar heeft geen parameters";

	var translation35 = texts.Translation.create(model);
	translation35.languageCode = "en_GB";
	translation35.text = "The selected microflow must have 1 input parameter but has 0 parameters.";

	var translation36 = texts.Translation.create(model);
	translation36.languageCode = "en_ZA";
	translation36.text = "The selected microflow must have 1 input parameter but has 0 parameters.";

	var text9 = texts.Text.create(model);
	text9.translations.push(translation33);
	text9.translations.push(translation34);
	text9.translations.push(translation35);
	text9.translations.push(translation36);

	var textTemplate9 = microflows.TextTemplate.create(model);
	textTemplate9.text = text9;   // Note: for this property a default value is defined.

	var validationFeedbackAction2 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction2.feedbackTemplate = textTemplate9;   // Note: for this property a default value is defined.
	validationFeedbackAction2.objectVariableName = "pColumn";
	validationFeedbackAction2.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_Microflows");

	var actionActivity15 = microflows.ActionActivity.create(model);
	actionActivity15.relativeMiddlePoint = {"x":1185,"y":385};
	actionActivity15.size = {"width":80,"height":60};
	actionActivity15.action = validationFeedbackAction2;
	actionActivity15.caption = "Show warning";
	actionActivity15.autoGenerateCaption = false;

	var translation37 = texts.Translation.create(model);
	translation37.languageCode = "en_US";
	translation37.text = "The selected microflow must have 1 input parameter";

	var translation38 = texts.Translation.create(model);
	translation38.languageCode = "nl_NL";
	translation38.text = "De geselecteerde microflow moet 1 input parameter hebben";

	var translation39 = texts.Translation.create(model);
	translation39.languageCode = "en_GB";
	translation39.text = "The selected microflow must have 1 input parameter";

	var translation40 = texts.Translation.create(model);
	translation40.languageCode = "en_ZA";
	translation40.text = "The selected microflow must have 1 input parameter";

	var text10 = texts.Text.create(model);
	text10.translations.push(translation37);
	text10.translations.push(translation38);
	text10.translations.push(translation39);
	text10.translations.push(translation40);

	var textTemplate10 = microflows.TextTemplate.create(model);
	textTemplate10.text = text10;   // Note: for this property a default value is defined.

	var validationFeedbackAction3 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction3.feedbackTemplate = textTemplate10;   // Note: for this property a default value is defined.
	validationFeedbackAction3.objectVariableName = "pColumn";
	validationFeedbackAction3.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_Microflows");

	var actionActivity16 = microflows.ActionActivity.create(model);
	actionActivity16.relativeMiddlePoint = {"x":1335,"y":410};
	actionActivity16.size = {"width":80,"height":60};
	actionActivity16.action = validationFeedbackAction3;
	actionActivity16.caption = "Show warning";
	actionActivity16.autoGenerateCaption = false;

	var translation41 = texts.Translation.create(model);
	translation41.languageCode = "en_US";
	translation41.text = "The return type of the microflow must be of the same type as the selected member";

	var translation42 = texts.Translation.create(model);
	translation42.languageCode = "nl_NL";
	translation42.text = "Het returntype va de microflow moet hetzelfde type zijn als het geselecteerd attribuut";

	var translation43 = texts.Translation.create(model);
	translation43.languageCode = "en_GB";
	translation43.text = "The return type of the microflow must be of the same type as the selected member";

	var translation44 = texts.Translation.create(model);
	translation44.languageCode = "en_ZA";
	translation44.text = "The return type of the microflow must be of the same type as the selected member";

	var text11 = texts.Text.create(model);
	text11.translations.push(translation41);
	text11.translations.push(translation42);
	text11.translations.push(translation43);
	text11.translations.push(translation44);

	var textTemplate11 = microflows.TextTemplate.create(model);
	textTemplate11.text = text11;   // Note: for this property a default value is defined.

	var validationFeedbackAction4 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction4.feedbackTemplate = textTemplate11;   // Note: for this property a default value is defined.
	validationFeedbackAction4.objectVariableName = "pColumn";
	validationFeedbackAction4.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_Microflows");

	var actionActivity17 = microflows.ActionActivity.create(model);
	actionActivity17.relativeMiddlePoint = {"x":1185,"y":615};
	actionActivity17.size = {"width":80,"height":60};
	actionActivity17.action = validationFeedbackAction4;
	actionActivity17.caption = "Show warning";
	actionActivity17.autoGenerateCaption = false;

	var endEvent5 = microflows.EndEvent.create(model);
	endEvent5.relativeMiddlePoint = {"x":1185,"y":285};
	endEvent5.size = {"width":20,"height":20};
	endEvent5.returnValue = "false";

	var endEvent6 = microflows.EndEvent.create(model);
	endEvent6.relativeMiddlePoint = {"x":1185,"y":695};
	endEvent6.size = {"width":20,"height":20};
	endEvent6.returnValue = "false";

	var endEvent7 = microflows.EndEvent.create(model);
	endEvent7.relativeMiddlePoint = {"x":1335,"y":320};
	endEvent7.size = {"width":20,"height":20};
	endEvent7.returnValue = "false";

	var endEvent8 = microflows.EndEvent.create(model);
	endEvent8.relativeMiddlePoint = {"x":1335,"y":615};
	endEvent8.size = {"width":20,"height":20};
	endEvent8.returnValue = "true";

	var exclusiveMerge1 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge1.relativeMiddlePoint = {"x":925,"y":510};
	exclusiveMerge1.size = {"width":60,"height":40};

	var microflowCallParameterMapping3 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping3.__parameter.updateWithRawValue("ExcelImporter.prepareReferenceHandling.pColumn");
	microflowCallParameterMapping3.argument = "$pColumn";

	var microflowCall3 = microflows.MicroflowCall.create(model);
	microflowCall3.microflow = model.findMicroflowByQualifiedName("ExcelImporter.prepareReferenceHandling");
	microflowCall3.parameterMappings.push(microflowCallParameterMapping3);

	var microflowCallAction3 = microflows.MicroflowCallAction.create(model);
	microflowCallAction3.microflowCall = microflowCall3;   // Note: for this property a default value is defined.

	var actionActivity18 = microflows.ActionActivity.create(model);
	actionActivity18.relativeMiddlePoint = {"x":1055,"y":510};
	actionActivity18.size = {"width":140,"height":60};
	actionActivity18.action = microflowCallAction3;
	actionActivity18.caption = "Create or remove the reference handling objects";
	actionActivity18.autoGenerateCaption = false;

	var constantRange1 = microflows.ConstantRange.create(model);
	constantRange1.singleObject = true;

	var sortItemList1 = microflows.SortItemList.create(model);

	var databaseRetrieveSource1 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource1.entity = model.findEntityByQualifiedName("ExcelImporter.Column");
	databaseRetrieveSource1.range = constantRange1;   // Note: for this property a default value is defined.
	databaseRetrieveSource1.xPathConstraint = "[ExcelImporter.Column_Template=$pColumn/ExcelImporter.Column_Template]\n[MappingType='Attribute']\n[ExcelImporter.Column_MxObjectMember=$pColumn/ExcelImporter.Column_MxObjectMember]\n[id!=$pColumn]";
	databaseRetrieveSource1.sortItemList = sortItemList1;   // Note: for this property a default value is defined.

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = databaseRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "DuplicateMapping";

	var actionActivity19 = microflows.ActionActivity.create(model);
	actionActivity19.relativeMiddlePoint = {"x":770,"y":415};
	actionActivity19.size = {"width":130,"height":60};
	actionActivity19.action = retrieveAction1;
	actionActivity19.caption = "Find a column with the same mapping";
	actionActivity19.autoGenerateCaption = false;

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$DuplicateMapping != empty";

	var exclusiveSplit3 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit3.relativeMiddlePoint = {"x":770,"y":510};
	exclusiveSplit3.size = {"width":60,"height":40};
	exclusiveSplit3.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit3.caption = "found?";

	var templateArgument1 = microflows.TemplateArgument.create(model);
	templateArgument1.expression = "$DuplicateMapping/ColNumber + ' - ' + $DuplicateMapping/Text";

	var translation45 = texts.Translation.create(model);
	translation45.languageCode = "en_US";
	translation45.text = "This excel template already contains a mapping for this attribute. The other column is: {1}";

	var translation46 = texts.Translation.create(model);
	translation46.languageCode = "nl_NL";
	translation46.text = "Deze excel template bevat al een mapping voor dit attribuut. The other column is: {1}";

	var translation47 = texts.Translation.create(model);
	translation47.languageCode = "en_GB";
	translation47.text = "This excel template already contains a mapping for this attribute. The other column is: {1}";

	var translation48 = texts.Translation.create(model);
	translation48.languageCode = "en_ZA";
	translation48.text = "This excel template already contains a mapping for this attribute. The other column is: {1}";

	var text12 = texts.Text.create(model);
	text12.translations.push(translation45);
	text12.translations.push(translation46);
	text12.translations.push(translation47);
	text12.translations.push(translation48);

	var textTemplate12 = microflows.TextTemplate.create(model);
	textTemplate12.arguments.push(templateArgument1);
	textTemplate12.text = text12;   // Note: for this property a default value is defined.

	var showMessageAction8 = microflows.ShowMessageAction.create(model);
	showMessageAction8.template = textTemplate12;   // Note: for this property a default value is defined.
	showMessageAction8.type = microflows.ShowMessageType.Warning;

	var actionActivity20 = microflows.ActionActivity.create(model);
	actionActivity20.relativeMiddlePoint = {"x":770,"y":615};
	actionActivity20.size = {"width":80,"height":60};
	actionActivity20.action = showMessageAction8;
	actionActivity20.caption = "Show warning";
	actionActivity20.autoGenerateCaption = false;

	var endEvent9 = microflows.EndEvent.create(model);
	endEvent9.relativeMiddlePoint = {"x":770,"y":695};
	endEvent9.size = {"width":20,"height":20};
	endEvent9.returnValue = "false";

	var endEvent10 = microflows.EndEvent.create(model);
	endEvent10.relativeMiddlePoint = {"x":575,"y":-165};
	endEvent10.size = {"width":20,"height":20};
	endEvent10.returnValue = "false";

	var endEvent11 = microflows.EndEvent.create(model);
	endEvent11.relativeMiddlePoint = {"x":675,"y":-165};
	endEvent11.size = {"width":20,"height":20};
	endEvent11.returnValue = "false";

	var endEvent12 = microflows.EndEvent.create(model);
	endEvent12.relativeMiddlePoint = {"x":770,"y":-165};
	endEvent12.size = {"width":20,"height":20};
	endEvent12.returnValue = "false";

	var endEvent13 = microflows.EndEvent.create(model);
	endEvent13.relativeMiddlePoint = {"x":865,"y":-165};
	endEvent13.size = {"width":20,"height":20};
	endEvent13.returnValue = "false";

	var endEvent14 = microflows.EndEvent.create(model);
	endEvent14.relativeMiddlePoint = {"x":960,"y":-165};
	endEvent14.size = {"width":20,"height":20};
	endEvent14.returnValue = "false";

	var endEvent15 = microflows.EndEvent.create(model);
	endEvent15.relativeMiddlePoint = {"x":1055,"y":-165};
	endEvent15.size = {"width":20,"height":20};
	endEvent15.returnValue = "false";

	var translation49 = texts.Translation.create(model);
	translation49.languageCode = "en_US";
	translation49.text = "An 'AutoNumber' field can only be used as a key to search on, it cannot be set by the mapping";

	var translation50 = texts.Translation.create(model);
	translation50.languageCode = "nl_NL";
	translation50.text = "Het referentie veld moet verplicht geselecteerd worden als het type 'Referentie' is geselecteerd";

	var translation51 = texts.Translation.create(model);
	translation51.languageCode = "en_GB";
	translation51.text = "An 'AutoNumber' field can only be used as a key to search on, it cannot be set by the mapping";

	var translation52 = texts.Translation.create(model);
	translation52.languageCode = "en_ZA";
	translation52.text = "An 'AutoNumber' field can only be used as a key to search on, it cannot be set by the mapping";

	var text13 = texts.Text.create(model);
	text13.translations.push(translation49);
	text13.translations.push(translation50);
	text13.translations.push(translation51);
	text13.translations.push(translation52);

	var textTemplate13 = microflows.TextTemplate.create(model);
	textTemplate13.text = text13;   // Note: for this property a default value is defined.

	var showMessageAction9 = microflows.ShowMessageAction.create(model);
	showMessageAction9.template = textTemplate13;   // Note: for this property a default value is defined.
	showMessageAction9.type = microflows.ShowMessageType.Warning;
	showMessageAction9.blocking = false;

	var actionActivity21 = microflows.ActionActivity.create(model);
	actionActivity21.relativeMiddlePoint = {"x":480,"y":-95};
	actionActivity21.size = {"width":80,"height":30};
	actionActivity21.action = showMessageAction9;
	actionActivity21.caption = "WARN";
	actionActivity21.autoGenerateCaption = false;

	var endEvent16 = microflows.EndEvent.create(model);
	endEvent16.relativeMiddlePoint = {"x":480,"y":-165};
	endEvent16.size = {"width":20,"height":20};
	endEvent16.returnValue = "false";

	var associationRetrieveSource1 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource1.startVariableName = "pColumn";
	associationRetrieveSource1.association = model.findAssociationBaseByQualifiedName("ExcelImporter.Column_Template");

	var retrieveAction2 = microflows.RetrieveAction.create(model);
	retrieveAction2.retrieveSource = associationRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction2.outputVariableName = "Template";

	var actionActivity22 = microflows.ActionActivity.create(model);
	actionActivity22.relativeMiddlePoint = {"x":575,"y":200};
	actionActivity22.size = {"width":200,"height":60};
	actionActivity22.action = retrieveAction2;

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(actionActivity5);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(actionActivity6);
	microflowObjectCollection1.objects.push(actionActivity7);
	microflowObjectCollection1.objects.push(actionActivity8);
	microflowObjectCollection1.objects.push(actionActivity9);
	microflowObjectCollection1.objects.push(actionActivity10);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(pColumn1);
	microflowObjectCollection1.objects.push(actionActivity11);
	microflowObjectCollection1.objects.push(actionActivity12);
	microflowObjectCollection1.objects.push(endEvent3);
	microflowObjectCollection1.objects.push(actionActivity13);
	microflowObjectCollection1.objects.push(endEvent4);
	microflowObjectCollection1.objects.push(exclusiveSplit2);
	microflowObjectCollection1.objects.push(actionActivity14);
	microflowObjectCollection1.objects.push(actionActivity15);
	microflowObjectCollection1.objects.push(actionActivity16);
	microflowObjectCollection1.objects.push(actionActivity17);
	microflowObjectCollection1.objects.push(endEvent5);
	microflowObjectCollection1.objects.push(endEvent6);
	microflowObjectCollection1.objects.push(endEvent7);
	microflowObjectCollection1.objects.push(endEvent8);
	microflowObjectCollection1.objects.push(exclusiveMerge1);
	microflowObjectCollection1.objects.push(actionActivity18);
	microflowObjectCollection1.objects.push(actionActivity19);
	microflowObjectCollection1.objects.push(exclusiveSplit3);
	microflowObjectCollection1.objects.push(actionActivity20);
	microflowObjectCollection1.objects.push(endEvent9);
	microflowObjectCollection1.objects.push(endEvent10);
	microflowObjectCollection1.objects.push(endEvent11);
	microflowObjectCollection1.objects.push(endEvent12);
	microflowObjectCollection1.objects.push(endEvent13);
	microflowObjectCollection1.objects.push(endEvent14);
	microflowObjectCollection1.objects.push(endEvent15);
	microflowObjectCollection1.objects.push(actionActivity21);
	microflowObjectCollection1.objects.push(endEvent16);
	microflowObjectCollection1.objects.push(actionActivity22);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "ValidAttribute";

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 2;
	sequenceFlow2.originBezierVector = {"width":0,"height":15};
	sequenceFlow2.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow2.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":30,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow3.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "NoReferenceSelected";

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.destinationConnectionIndex = 2;
	sequenceFlow4.originBezierVector = {"width":-270,"height":-85};
	sequenceFlow4.destinationBezierVector = {"width":0,"height":100};
	sequenceFlow4.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "NoReferencedObjectSelected";

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.destinationConnectionIndex = 2;
	sequenceFlow5.originBezierVector = {"width":-130,"height":-170};
	sequenceFlow5.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow5.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "ValidReference";

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 2;
	sequenceFlow6.originBezierVector = {"width":0,"height":15};
	sequenceFlow6.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow6.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var enumerationCase5 = microflows.EnumerationCase.create(model);
	enumerationCase5.value = "NoAttributeSelected";

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":15,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow7.caseValue = enumerationCase5;   // Note: for this property a default value is defined.

	var enumerationCase6 = microflows.EnumerationCase.create(model);
	enumerationCase6.value = "UnUsed";

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 1;
	sequenceFlow8.destinationConnectionIndex = 3;
	sequenceFlow8.originBezierVector = {"width":15,"height":0};
	sequenceFlow8.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow8.caseValue = enumerationCase6;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 1;
	sequenceFlow9.destinationConnectionIndex = 3;
	sequenceFlow9.originBezierVector = {"width":30,"height":0};
	sequenceFlow9.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow9.caseValue = noCase3;   // Note: for this property a default value is defined.

	var enumerationCase7 = microflows.EnumerationCase.create(model);
	enumerationCase7.value = "InvalidReference";

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.destinationConnectionIndex = 2;
	sequenceFlow10.originBezierVector = {"width":0,"height":-90};
	sequenceFlow10.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow10.caseValue = enumerationCase7;   // Note: for this property a default value is defined.

	var enumerationCase8 = microflows.EnumerationCase.create(model);
	enumerationCase8.value = "InvalidAttribute";

	var sequenceFlow11 = microflows.SequenceFlow.create(model);
	sequenceFlow11.destinationConnectionIndex = 2;
	sequenceFlow11.originBezierVector = {"width":130,"height":-165};
	sequenceFlow11.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow11.caseValue = enumerationCase8;   // Note: for this property a default value is defined.

	var enumerationCase9 = microflows.EnumerationCase.create(model);
	enumerationCase9.value = "InvalidReferencedObject";

	var sequenceFlow12 = microflows.SequenceFlow.create(model);
	sequenceFlow12.destinationConnectionIndex = 2;
	sequenceFlow12.originBezierVector = {"width":205,"height":-50};
	sequenceFlow12.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow12.caseValue = enumerationCase9;   // Note: for this property a default value is defined.

	var enumerationCase10 = microflows.EnumerationCase.create(model);
	enumerationCase10.value = "(empty)";

	var sequenceFlow13 = microflows.SequenceFlow.create(model);
	sequenceFlow13.originConnectionIndex = 1;
	sequenceFlow13.destinationConnectionIndex = 3;
	sequenceFlow13.originBezierVector = {"width":15,"height":0};
	sequenceFlow13.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow13.caseValue = enumerationCase10;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow14 = microflows.SequenceFlow.create(model);
	sequenceFlow14.originConnectionIndex = 1;
	sequenceFlow14.destinationConnectionIndex = 3;
	sequenceFlow14.originBezierVector = {"width":30,"height":0};
	sequenceFlow14.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow14.caseValue = noCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow15 = microflows.SequenceFlow.create(model);
	sequenceFlow15.originConnectionIndex = 1;
	sequenceFlow15.destinationConnectionIndex = 3;
	sequenceFlow15.originBezierVector = {"width":15,"height":0};
	sequenceFlow15.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow15.caseValue = noCase5;   // Note: for this property a default value is defined.

	var enumerationCase11 = microflows.EnumerationCase.create(model);
	enumerationCase11.value = "Valid";

	var sequenceFlow16 = microflows.SequenceFlow.create(model);
	sequenceFlow16.originConnectionIndex = 1;
	sequenceFlow16.destinationConnectionIndex = 3;
	sequenceFlow16.originBezierVector = {"width":15,"height":0};
	sequenceFlow16.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow16.caseValue = enumerationCase11;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow17 = microflows.SequenceFlow.create(model);
	sequenceFlow17.originConnectionIndex = 1;
	sequenceFlow17.destinationConnectionIndex = 3;
	sequenceFlow17.originBezierVector = {"width":30,"height":0};
	sequenceFlow17.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow17.caseValue = noCase6;   // Note: for this property a default value is defined.

	var enumerationCase12 = microflows.EnumerationCase.create(model);
	enumerationCase12.value = "NoInputParams";

	var sequenceFlow18 = microflows.SequenceFlow.create(model);
	sequenceFlow18.destinationConnectionIndex = 2;
	sequenceFlow18.originBezierVector = {"width":0,"height":-30};
	sequenceFlow18.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow18.caseValue = enumerationCase12;   // Note: for this property a default value is defined.

	var enumerationCase13 = microflows.EnumerationCase.create(model);
	enumerationCase13.value = "WrongNrOfInputParams";

	var sequenceFlow19 = microflows.SequenceFlow.create(model);
	sequenceFlow19.destinationConnectionIndex = 2;
	sequenceFlow19.originBezierVector = {"width":35,"height":-15};
	sequenceFlow19.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow19.caseValue = enumerationCase13;   // Note: for this property a default value is defined.

	var enumerationCase14 = microflows.EnumerationCase.create(model);
	enumerationCase14.value = "WrongReturnType";

	var sequenceFlow20 = microflows.SequenceFlow.create(model);
	sequenceFlow20.originConnectionIndex = 2;
	sequenceFlow20.originBezierVector = {"width":0,"height":15};
	sequenceFlow20.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow20.caseValue = enumerationCase14;   // Note: for this property a default value is defined.

	var enumerationCase15 = microflows.EnumerationCase.create(model);
	enumerationCase15.value = "(empty)";

	var sequenceFlow21 = microflows.SequenceFlow.create(model);
	sequenceFlow21.originConnectionIndex = 1;
	sequenceFlow21.originBezierVector = {"width":15,"height":0};
	sequenceFlow21.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow21.caseValue = enumerationCase15;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow22 = microflows.SequenceFlow.create(model);
	sequenceFlow22.originConnectionIndex = 2;
	sequenceFlow22.originBezierVector = {"width":0,"height":30};
	sequenceFlow22.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow22.caseValue = noCase7;   // Note: for this property a default value is defined.

	var noCase8 = microflows.NoCase.create(model);

	var sequenceFlow23 = microflows.SequenceFlow.create(model);
	sequenceFlow23.destinationConnectionIndex = 2;
	sequenceFlow23.originBezierVector = {"width":0,"height":-30};
	sequenceFlow23.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow23.caseValue = noCase8;   // Note: for this property a default value is defined.

	var noCase9 = microflows.NoCase.create(model);

	var sequenceFlow24 = microflows.SequenceFlow.create(model);
	sequenceFlow24.destinationConnectionIndex = 2;
	sequenceFlow24.originBezierVector = {"width":0,"height":-30};
	sequenceFlow24.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow24.caseValue = noCase9;   // Note: for this property a default value is defined.

	var noCase10 = microflows.NoCase.create(model);

	var sequenceFlow25 = microflows.SequenceFlow.create(model);
	sequenceFlow25.originConnectionIndex = 1;
	sequenceFlow25.destinationConnectionIndex = 3;
	sequenceFlow25.originBezierVector = {"width":30,"height":0};
	sequenceFlow25.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow25.caseValue = noCase10;   // Note: for this property a default value is defined.

	var noCase11 = microflows.NoCase.create(model);

	var sequenceFlow26 = microflows.SequenceFlow.create(model);
	sequenceFlow26.originConnectionIndex = 1;
	sequenceFlow26.destinationConnectionIndex = 3;
	sequenceFlow26.originBezierVector = {"width":30,"height":0};
	sequenceFlow26.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow26.caseValue = noCase11;   // Note: for this property a default value is defined.

	var enumerationCase16 = microflows.EnumerationCase.create(model);
	enumerationCase16.value = "NoAssociationKeys";

	var sequenceFlow27 = microflows.SequenceFlow.create(model);
	sequenceFlow27.destinationConnectionIndex = 2;
	sequenceFlow27.originBezierVector = {"width":370,"height":-100};
	sequenceFlow27.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow27.caseValue = enumerationCase16;   // Note: for this property a default value is defined.

	var noCase12 = microflows.NoCase.create(model);

	var sequenceFlow28 = microflows.SequenceFlow.create(model);
	sequenceFlow28.originConnectionIndex = 1;
	sequenceFlow28.destinationConnectionIndex = 3;
	sequenceFlow28.originBezierVector = {"width":30,"height":0};
	sequenceFlow28.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow28.caseValue = noCase12;   // Note: for this property a default value is defined.

	var noCase13 = microflows.NoCase.create(model);

	var sequenceFlow29 = microflows.SequenceFlow.create(model);
	sequenceFlow29.originConnectionIndex = 2;
	sequenceFlow29.originBezierVector = {"width":0,"height":30};
	sequenceFlow29.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow29.caseValue = noCase13;   // Note: for this property a default value is defined.

	var enumerationCase17 = microflows.EnumerationCase.create(model);
	enumerationCase17.value = "false";

	var sequenceFlow30 = microflows.SequenceFlow.create(model);
	sequenceFlow30.originConnectionIndex = 1;
	sequenceFlow30.destinationConnectionIndex = 3;
	sequenceFlow30.originBezierVector = {"width":15,"height":0};
	sequenceFlow30.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow30.caseValue = enumerationCase17;   // Note: for this property a default value is defined.

	var noCase14 = microflows.NoCase.create(model);

	var sequenceFlow31 = microflows.SequenceFlow.create(model);
	sequenceFlow31.originConnectionIndex = 2;
	sequenceFlow31.originBezierVector = {"width":0,"height":30};
	sequenceFlow31.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow31.caseValue = noCase14;   // Note: for this property a default value is defined.

	var enumerationCase18 = microflows.EnumerationCase.create(model);
	enumerationCase18.value = "true";

	var sequenceFlow32 = microflows.SequenceFlow.create(model);
	sequenceFlow32.originConnectionIndex = 2;
	sequenceFlow32.originBezierVector = {"width":0,"height":15};
	sequenceFlow32.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow32.caseValue = enumerationCase18;   // Note: for this property a default value is defined.

	var noCase15 = microflows.NoCase.create(model);

	var sequenceFlow33 = microflows.SequenceFlow.create(model);
	sequenceFlow33.originConnectionIndex = 1;
	sequenceFlow33.destinationConnectionIndex = 3;
	sequenceFlow33.originBezierVector = {"width":30,"height":0};
	sequenceFlow33.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow33.caseValue = noCase15;   // Note: for this property a default value is defined.

	var noCase16 = microflows.NoCase.create(model);

	var sequenceFlow34 = microflows.SequenceFlow.create(model);
	sequenceFlow34.originConnectionIndex = 1;
	sequenceFlow34.destinationConnectionIndex = 3;
	sequenceFlow34.originBezierVector = {"width":30,"height":0};
	sequenceFlow34.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow34.caseValue = noCase16;   // Note: for this property a default value is defined.

	var noCase17 = microflows.NoCase.create(model);

	var sequenceFlow35 = microflows.SequenceFlow.create(model);
	sequenceFlow35.destinationConnectionIndex = 2;
	sequenceFlow35.originBezierVector = {"width":0,"height":-30};
	sequenceFlow35.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow35.caseValue = noCase17;   // Note: for this property a default value is defined.

	var noCase18 = microflows.NoCase.create(model);

	var sequenceFlow36 = microflows.SequenceFlow.create(model);
	sequenceFlow36.destinationConnectionIndex = 2;
	sequenceFlow36.originBezierVector = {"width":0,"height":-30};
	sequenceFlow36.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow36.caseValue = noCase18;   // Note: for this property a default value is defined.

	var noCase19 = microflows.NoCase.create(model);

	var sequenceFlow37 = microflows.SequenceFlow.create(model);
	sequenceFlow37.destinationConnectionIndex = 2;
	sequenceFlow37.originBezierVector = {"width":0,"height":-30};
	sequenceFlow37.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow37.caseValue = noCase19;   // Note: for this property a default value is defined.

	var noCase20 = microflows.NoCase.create(model);

	var sequenceFlow38 = microflows.SequenceFlow.create(model);
	sequenceFlow38.destinationConnectionIndex = 2;
	sequenceFlow38.originBezierVector = {"width":0,"height":-30};
	sequenceFlow38.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow38.caseValue = noCase20;   // Note: for this property a default value is defined.

	var noCase21 = microflows.NoCase.create(model);

	var sequenceFlow39 = microflows.SequenceFlow.create(model);
	sequenceFlow39.destinationConnectionIndex = 2;
	sequenceFlow39.originBezierVector = {"width":0,"height":-30};
	sequenceFlow39.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow39.caseValue = noCase21;   // Note: for this property a default value is defined.

	var noCase22 = microflows.NoCase.create(model);

	var sequenceFlow40 = microflows.SequenceFlow.create(model);
	sequenceFlow40.destinationConnectionIndex = 2;
	sequenceFlow40.originBezierVector = {"width":0,"height":-30};
	sequenceFlow40.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow40.caseValue = noCase22;   // Note: for this property a default value is defined.

	var noCase23 = microflows.NoCase.create(model);

	var sequenceFlow41 = microflows.SequenceFlow.create(model);
	sequenceFlow41.destinationConnectionIndex = 2;
	sequenceFlow41.originBezierVector = {"width":0,"height":-30};
	sequenceFlow41.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow41.caseValue = noCase23;   // Note: for this property a default value is defined.

	var enumerationCase19 = microflows.EnumerationCase.create(model);
	enumerationCase19.value = "InvalidAutoNumberSelection";

	var sequenceFlow42 = microflows.SequenceFlow.create(model);
	sequenceFlow42.destinationConnectionIndex = 2;
	sequenceFlow42.originBezierVector = {"width":-315,"height":-30};
	sequenceFlow42.destinationBezierVector = {"width":0,"height":150};
	sequenceFlow42.caseValue = enumerationCase19;   // Note: for this property a default value is defined.

	var noCase24 = microflows.NoCase.create(model);

	var sequenceFlow43 = microflows.SequenceFlow.create(model);
	sequenceFlow43.originConnectionIndex = 1;
	sequenceFlow43.destinationConnectionIndex = 3;
	sequenceFlow43.originBezierVector = {"width":30,"height":0};
	sequenceFlow43.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow43.caseValue = noCase24;   // Note: for this property a default value is defined.

	var booleanType1 = datatypes.BooleanType.create(model);

	var translation53 = texts.Translation.create(model);
	translation53.languageCode = "en_US";

	var translation54 = texts.Translation.create(model);
	translation54.languageCode = "en_GB";

	var translation55 = texts.Translation.create(model);
	translation55.languageCode = "en_ZA";

	var text14 = texts.Text.create(model);
	text14.translations.push(translation53);
	text14.translations.push(translation54);
	text14.translations.push(translation55);

	var bCo_Column1 = microflows.Microflow.createIn(unit);
	bCo_Column1.name = "BCo_Column";
	bCo_Column1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	bCo_Column1.flows.push(sequenceFlow1);
	bCo_Column1.flows.push(sequenceFlow2);
	bCo_Column1.flows.push(sequenceFlow3);
	bCo_Column1.flows.push(sequenceFlow4);
	bCo_Column1.flows.push(sequenceFlow5);
	bCo_Column1.flows.push(sequenceFlow6);
	bCo_Column1.flows.push(sequenceFlow7);
	bCo_Column1.flows.push(sequenceFlow8);
	bCo_Column1.flows.push(sequenceFlow9);
	bCo_Column1.flows.push(sequenceFlow10);
	bCo_Column1.flows.push(sequenceFlow11);
	bCo_Column1.flows.push(sequenceFlow12);
	bCo_Column1.flows.push(sequenceFlow13);
	bCo_Column1.flows.push(sequenceFlow14);
	bCo_Column1.flows.push(sequenceFlow15);
	bCo_Column1.flows.push(sequenceFlow16);
	bCo_Column1.flows.push(sequenceFlow17);
	bCo_Column1.flows.push(sequenceFlow18);
	bCo_Column1.flows.push(sequenceFlow19);
	bCo_Column1.flows.push(sequenceFlow20);
	bCo_Column1.flows.push(sequenceFlow21);
	bCo_Column1.flows.push(sequenceFlow22);
	bCo_Column1.flows.push(sequenceFlow23);
	bCo_Column1.flows.push(sequenceFlow24);
	bCo_Column1.flows.push(sequenceFlow25);
	bCo_Column1.flows.push(sequenceFlow26);
	bCo_Column1.flows.push(sequenceFlow27);
	bCo_Column1.flows.push(sequenceFlow28);
	bCo_Column1.flows.push(sequenceFlow29);
	bCo_Column1.flows.push(sequenceFlow30);
	bCo_Column1.flows.push(sequenceFlow31);
	bCo_Column1.flows.push(sequenceFlow32);
	bCo_Column1.flows.push(sequenceFlow33);
	bCo_Column1.flows.push(sequenceFlow34);
	bCo_Column1.flows.push(sequenceFlow35);
	bCo_Column1.flows.push(sequenceFlow36);
	bCo_Column1.flows.push(sequenceFlow37);
	bCo_Column1.flows.push(sequenceFlow38);
	bCo_Column1.flows.push(sequenceFlow39);
	bCo_Column1.flows.push(sequenceFlow40);
	bCo_Column1.flows.push(sequenceFlow41);
	bCo_Column1.flows.push(sequenceFlow42);
	bCo_Column1.flows.push(sequenceFlow43);
	bCo_Column1.microflowReturnType = booleanType1;
	bCo_Column1.applyEntityAccess = true;
	bCo_Column1.concurrencyErrorMessage = text14;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity11;

	sequenceFlow2.origin = exclusiveSplit1;
	sequenceFlow2.destination = actionActivity19;

	sequenceFlow3.origin = actionActivity5;
	sequenceFlow3.destination = endEvent2;

	sequenceFlow4.origin = exclusiveSplit1;
	sequenceFlow4.destination = actionActivity1;

	sequenceFlow5.origin = exclusiveSplit1;
	sequenceFlow5.destination = actionActivity2;

	sequenceFlow6.origin = exclusiveSplit1;
	sequenceFlow6.destination = exclusiveMerge1;

	sequenceFlow7.origin = exclusiveSplit1;
	sequenceFlow7.destination = actionActivity5;

	sequenceFlow8.origin = exclusiveSplit1;
	sequenceFlow8.destination = actionActivity4;

	sequenceFlow9.origin = actionActivity4;
	sequenceFlow9.destination = actionActivity6;

	sequenceFlow10.origin = exclusiveSplit1;
	sequenceFlow10.destination = actionActivity7;

	sequenceFlow11.origin = exclusiveSplit1;
	sequenceFlow11.destination = actionActivity10;

	sequenceFlow12.origin = exclusiveSplit1;
	sequenceFlow12.destination = actionActivity9;

	sequenceFlow13.origin = exclusiveSplit1;
	sequenceFlow13.destination = actionActivity3;

	sequenceFlow14.origin = actionActivity3;
	sequenceFlow14.destination = endEvent1;

	sequenceFlow15.origin = exclusiveMerge1;
	sequenceFlow15.destination = actionActivity18;

	sequenceFlow16.origin = exclusiveSplit2;
	sequenceFlow16.destination = actionActivity14;

	sequenceFlow17.origin = actionActivity14;
	sequenceFlow17.destination = endEvent4;

	sequenceFlow18.origin = exclusiveSplit2;
	sequenceFlow18.destination = actionActivity15;

	sequenceFlow19.origin = exclusiveSplit2;
	sequenceFlow19.destination = actionActivity16;

	sequenceFlow20.origin = exclusiveSplit2;
	sequenceFlow20.destination = actionActivity17;

	sequenceFlow21.origin = exclusiveSplit2;
	sequenceFlow21.destination = endEvent8;

	sequenceFlow22.origin = actionActivity17;
	sequenceFlow22.destination = endEvent6;

	sequenceFlow23.origin = actionActivity16;
	sequenceFlow23.destination = endEvent7;

	sequenceFlow24.origin = actionActivity15;
	sequenceFlow24.destination = endEvent5;

	sequenceFlow25.origin = actionActivity18;
	sequenceFlow25.destination = exclusiveSplit2;

	sequenceFlow26.origin = actionActivity6;
	sequenceFlow26.destination = actionActivity13;

	sequenceFlow27.origin = exclusiveSplit1;
	sequenceFlow27.destination = actionActivity8;

	sequenceFlow28.origin = actionActivity11;
	sequenceFlow28.destination = actionActivity12;

	sequenceFlow29.origin = actionActivity19;
	sequenceFlow29.destination = exclusiveSplit3;

	sequenceFlow30.origin = exclusiveSplit3;
	sequenceFlow30.destination = exclusiveMerge1;

	sequenceFlow31.origin = actionActivity20;
	sequenceFlow31.destination = endEvent9;

	sequenceFlow32.origin = exclusiveSplit3;
	sequenceFlow32.destination = actionActivity20;

	sequenceFlow33.origin = actionActivity12;
	sequenceFlow33.destination = actionActivity22;

	sequenceFlow34.origin = actionActivity13;
	sequenceFlow34.destination = endEvent3;

	sequenceFlow35.origin = actionActivity8;
	sequenceFlow35.destination = endEvent15;

	sequenceFlow36.origin = actionActivity9;
	sequenceFlow36.destination = endEvent14;

	sequenceFlow37.origin = actionActivity10;
	sequenceFlow37.destination = endEvent13;

	sequenceFlow38.origin = actionActivity7;
	sequenceFlow38.destination = endEvent12;

	sequenceFlow39.origin = actionActivity2;
	sequenceFlow39.destination = endEvent11;

	sequenceFlow40.origin = actionActivity1;
	sequenceFlow40.destination = endEvent10;

	sequenceFlow41.origin = actionActivity21;
	sequenceFlow41.destination = endEvent16;

	sequenceFlow42.origin = exclusiveSplit1;
	sequenceFlow42.destination = actionActivity21;

	sequenceFlow43.origin = actionActivity22;
	sequenceFlow43.destination = exclusiveSplit1;

})