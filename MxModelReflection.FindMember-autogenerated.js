(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "a05df8a8-fcd5-4c27-b1f3-e6d5b8b30e9e" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":-155,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var stringType1 = datatypes.StringType.create(model);

	var memberSearchString1 = microflows.MicroflowParameterObject.create(model);
	memberSearchString1.relativeMiddlePoint = {"x":-155,"y":90};
	memberSearchString1.size = {"width":30,"height":30};
	memberSearchString1.name = "MemberSearchString";
	memberSearchString1.variableType = stringType1;   // Note: for this property a default value is defined.

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("MxModelReflection.MxObjectType");

	var mxObjectType1 = microflows.MicroflowParameterObject.create(model);
	mxObjectType1.relativeMiddlePoint = {"x":-155,"y":15};
	mxObjectType1.size = {"width":30,"height":30};
	mxObjectType1.name = "MxObjectType";
	mxObjectType1.variableType = objectType1;   // Note: for this property a default value is defined.

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$MemberSearchString != empty";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":-45,"y":200};
	exclusiveSplit1.size = {"width":90,"height":60};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "member str != empty";

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":-45,"y":310};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "empty";

	var stringType2 = datatypes.StringType.create(model);

	var createVariableAction1 = microflows.CreateVariableAction.create(model);
	createVariableAction1.variableName = "MemberSearch";
	createVariableAction1.variableType = stringType2;   // Note: for this property a default value is defined.
	createVariableAction1.initialValue = "replaceAll(trim( $MemberSearchString), ' ', '')";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":165,"y":200};
	actionActivity1.size = {"width":120,"height":60};
	actionActivity1.action = createVariableAction1;

	var constantRange1 = microflows.ConstantRange.create(model);
	constantRange1.singleObject = true;

	var attributeRef1 = domainmodels.AttributeRef.create(model);
	attributeRef1.attribute = model.findAttributeByQualifiedName("MxModelReflection.MxObjectMember.AttributeName");

	var sortItem1 = microflows.SortItem.create(model);
	sortItem1.attributeRef = attributeRef1;   // Note: for this property a default value is defined.

	var sortItemList1 = microflows.SortItemList.create(model);
	sortItemList1.items.push(sortItem1);

	var databaseRetrieveSource1 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource1.entity = model.findEntityByQualifiedName("MxModelReflection.MxObjectMember");
	databaseRetrieveSource1.range = constantRange1;   // Note: for this property a default value is defined.
	databaseRetrieveSource1.xPathConstraint = "[AttributeName=$MemberSearch]\n[MxModelReflection.MxObjectMember_MxObjectType=$MxObjectType]\n";
	databaseRetrieveSource1.sortItemList = sortItemList1;   // Note: for this property a default value is defined.

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = databaseRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "RetrievedMember";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":345,"y":200};
	actionActivity2.size = {"width":190,"height":60};
	actionActivity2.action = retrieveAction1;
	actionActivity2.caption = "Try to find a member with a name like the specified search string";
	actionActivity2.autoGenerateCaption = false;

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":895,"y":200};
	endEvent2.size = {"width":20,"height":20};
	endEvent2.returnValue = "$RetrievedMember_1";

	var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition2.expression = "$RetrievedMember != empty";

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":525,"y":200};
	exclusiveSplit2.size = {"width":90,"height":60};
	exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
	exclusiveSplit2.caption = "is RetrievedMember?";

	var constantRange2 = microflows.ConstantRange.create(model);
	constantRange2.singleObject = true;

	var attributeRef2 = domainmodels.AttributeRef.create(model);
	attributeRef2.attribute = model.findAttributeByQualifiedName("MxModelReflection.MxObjectMember.AttributeName");

	var sortItem2 = microflows.SortItem.create(model);
	sortItem2.attributeRef = attributeRef2;   // Note: for this property a default value is defined.

	var sortItemList2 = microflows.SortItemList.create(model);
	sortItemList2.items.push(sortItem2);

	var databaseRetrieveSource2 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource2.entity = model.findEntityByQualifiedName("MxModelReflection.MxObjectMember");
	databaseRetrieveSource2.range = constantRange2;   // Note: for this property a default value is defined.
	databaseRetrieveSource2.xPathConstraint = "[contains(AttributeName,$MemberSearch)]\n[MxModelReflection.MxObjectMember_MxObjectType=$MxObjectType]\n";
	databaseRetrieveSource2.sortItemList = sortItemList2;   // Note: for this property a default value is defined.

	var retrieveAction2 = microflows.RetrieveAction.create(model);
	retrieveAction2.retrieveSource = databaseRetrieveSource2;   // Note: for this property a default value is defined.
	retrieveAction2.outputVariableName = "RetrievedMember_1";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":740,"y":200};
	actionActivity3.size = {"width":190,"height":60};
	actionActivity3.action = retrieveAction2;
	actionActivity3.caption = "Try to find a member with a name like the specified search string";
	actionActivity3.autoGenerateCaption = false;

	var endEvent3 = microflows.EndEvent.create(model);
	endEvent3.relativeMiddlePoint = {"x":525,"y":310};
	endEvent3.size = {"width":20,"height":20};
	endEvent3.returnValue = "$RetrievedMember";

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(memberSearchString1);
	microflowObjectCollection1.objects.push(mxObjectType1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(exclusiveSplit2);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(endEvent3);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":15,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "false";

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 2;
	sequenceFlow4.originBezierVector = {"width":0,"height":15};
	sequenceFlow4.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow4.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":30,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 1;
	sequenceFlow6.destinationConnectionIndex = 3;
	sequenceFlow6.originBezierVector = {"width":30,"height":0};
	sequenceFlow6.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow6.caseValue = noCase4;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "false";

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":15,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow7.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "true";

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 2;
	sequenceFlow8.originBezierVector = {"width":0,"height":15};
	sequenceFlow8.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow8.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var objectType2 = datatypes.ObjectType.create(model);
	objectType2.entity = model.findEntityByQualifiedName("MxModelReflection.MxObjectMember");

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "en_GB";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_ZA";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);

	var findMember1 = microflows.Microflow.createIn(unit);
	findMember1.name = "FindMember";
	findMember1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	findMember1.flows.push(sequenceFlow1);
	findMember1.flows.push(sequenceFlow2);
	findMember1.flows.push(sequenceFlow3);
	findMember1.flows.push(sequenceFlow4);
	findMember1.flows.push(sequenceFlow5);
	findMember1.flows.push(sequenceFlow6);
	findMember1.flows.push(sequenceFlow7);
	findMember1.flows.push(sequenceFlow8);
	findMember1.microflowReturnType = objectType2;
	findMember1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = exclusiveSplit1;

	sequenceFlow2.origin = actionActivity2;
	sequenceFlow2.destination = exclusiveSplit2;

	sequenceFlow3.origin = exclusiveSplit1;
	sequenceFlow3.destination = actionActivity1;

	sequenceFlow4.origin = exclusiveSplit1;
	sequenceFlow4.destination = endEvent1;

	sequenceFlow5.origin = actionActivity1;
	sequenceFlow5.destination = actionActivity2;

	sequenceFlow6.origin = actionActivity3;
	sequenceFlow6.destination = endEvent2;

	sequenceFlow7.origin = exclusiveSplit2;
	sequenceFlow7.destination = actionActivity3;

	sequenceFlow8.origin = exclusiveSplit2;
	sequenceFlow8.destination = endEvent3;

})