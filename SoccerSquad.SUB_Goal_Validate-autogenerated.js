(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "1a2fec35-f79e-41ee-9187-a96d84195973" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":100,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("SoccerSquad.Goal");

	var goal1 = microflows.MicroflowParameterObject.create(model);
	goal1.relativeMiddlePoint = {"x":100,"y":45};
	goal1.size = {"width":30,"height":30};
	goal1.name = "Goal";
	goal1.variableType = objectType1;   // Note: for this property a default value is defined.

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":1050,"y":200};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "$Commit";

	var booleanType1 = datatypes.BooleanType.create(model);

	var createVariableAction1 = microflows.CreateVariableAction.create(model);
	createVariableAction1.variableName = "Commit";
	createVariableAction1.variableType = booleanType1;   // Note: for this property a default value is defined.
	createVariableAction1.initialValue = "true";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":235,"y":200};
	actionActivity1.size = {"width":120,"height":60};
	actionActivity1.action = createVariableAction1;

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$Goal/Minute >= 0";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":410,"y":200};
	exclusiveSplit1.size = {"width":90,"height":60};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "Minute set?";

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";
	translation1.text = "Please enter the minute ";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);

	var textTemplate1 = microflows.TextTemplate.create(model);
	textTemplate1.text = text1;   // Note: for this property a default value is defined.

	var validationFeedbackAction1 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction1.feedbackTemplate = textTemplate1;   // Note: for this property a default value is defined.
	validationFeedbackAction1.objectVariableName = "Goal";
	validationFeedbackAction1.attribute = model.findAttributeByQualifiedName("SoccerSquad.Goal.Minute");

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":410,"y":445};
	actionActivity2.size = {"width":120,"height":60};
	actionActivity2.action = validationFeedbackAction1;

	var changeVariableAction1 = microflows.ChangeVariableAction.create(model);
	changeVariableAction1.changeVariableName = "Commit";
	changeVariableAction1.value = "false";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":410,"y":330};
	actionActivity3.size = {"width":120,"height":60};
	actionActivity3.action = changeVariableAction1;

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "en_US";
	translation2.text = "Please select a player";

	var text2 = texts.Text.create(model);
	text2.translations.push(translation2);

	var textTemplate2 = microflows.TextTemplate.create(model);
	textTemplate2.text = text2;   // Note: for this property a default value is defined.

	var validationFeedbackAction2 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction2.feedbackTemplate = textTemplate2;   // Note: for this property a default value is defined.
	validationFeedbackAction2.objectVariableName = "Goal";
	validationFeedbackAction2.association = model.findAssociationBaseByQualifiedName("SoccerSquad.Goal_Player");

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":745,"y":445};
	actionActivity4.size = {"width":120,"height":60};
	actionActivity4.action = validationFeedbackAction2;

	var changeVariableAction2 = microflows.ChangeVariableAction.create(model);
	changeVariableAction2.changeVariableName = "Commit";
	changeVariableAction2.value = "false";

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":745,"y":330};
	actionActivity5.size = {"width":120,"height":60};
	actionActivity5.action = changeVariableAction2;

	var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition2.expression = "$Goal/SoccerSquad.Goal_Player != empty";

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":745,"y":200};
	exclusiveSplit2.size = {"width":90,"height":60};
	exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
	exclusiveSplit2.caption = "Player selected?";

	var exclusiveMerge1 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge1.relativeMiddlePoint = {"x":585,"y":200};
	exclusiveMerge1.size = {"width":90,"height":60};

	var exclusiveMerge2 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge2.relativeMiddlePoint = {"x":915,"y":200};
	exclusiveMerge2.size = {"width":90,"height":60};

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(goal1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(actionActivity5);
	microflowObjectCollection1.objects.push(exclusiveSplit2);
	microflowObjectCollection1.objects.push(exclusiveMerge1);
	microflowObjectCollection1.objects.push(exclusiveMerge2);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":30,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "false";

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 2;
	sequenceFlow2.originBezierVector = {"width":0,"height":15};
	sequenceFlow2.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow2.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 2;
	sequenceFlow3.originBezierVector = {"width":0,"height":30};
	sequenceFlow3.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow3.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "true";

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":15,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow4.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 2;
	sequenceFlow5.originBezierVector = {"width":0,"height":30};
	sequenceFlow5.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow5.caseValue = noCase3;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "true";

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 1;
	sequenceFlow6.destinationConnectionIndex = 3;
	sequenceFlow6.originBezierVector = {"width":15,"height":0};
	sequenceFlow6.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow6.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":15,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow7.caseValue = noCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 1;
	sequenceFlow8.destinationConnectionIndex = 3;
	sequenceFlow8.originBezierVector = {"width":15,"height":0};
	sequenceFlow8.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow8.caseValue = noCase5;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "false";

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 2;
	sequenceFlow9.originBezierVector = {"width":0,"height":15};
	sequenceFlow9.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow9.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.originConnectionIndex = 1;
	sequenceFlow10.destinationConnectionIndex = 2;
	sequenceFlow10.originBezierVector = {"width":30,"height":0};
	sequenceFlow10.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow10.caseValue = noCase6;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow11 = microflows.SequenceFlow.create(model);
	sequenceFlow11.originConnectionIndex = 1;
	sequenceFlow11.destinationConnectionIndex = 2;
	sequenceFlow11.originBezierVector = {"width":30,"height":0};
	sequenceFlow11.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow11.caseValue = noCase7;   // Note: for this property a default value is defined.

	var noCase8 = microflows.NoCase.create(model);

	var sequenceFlow12 = microflows.SequenceFlow.create(model);
	sequenceFlow12.originConnectionIndex = 1;
	sequenceFlow12.destinationConnectionIndex = 3;
	sequenceFlow12.originBezierVector = {"width":15,"height":0};
	sequenceFlow12.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow12.caseValue = noCase8;   // Note: for this property a default value is defined.

	var booleanType2 = datatypes.BooleanType.create(model);

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_US";

	var text3 = texts.Text.create(model);
	text3.translations.push(translation3);

	var sUB_Goal_Validate1 = microflows.Microflow.createIn(unit);
	sUB_Goal_Validate1.name = "SUB_Goal_Validate";
	sUB_Goal_Validate1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	sUB_Goal_Validate1.flows.push(sequenceFlow1);
	sUB_Goal_Validate1.flows.push(sequenceFlow2);
	sUB_Goal_Validate1.flows.push(sequenceFlow3);
	sUB_Goal_Validate1.flows.push(sequenceFlow4);
	sUB_Goal_Validate1.flows.push(sequenceFlow5);
	sUB_Goal_Validate1.flows.push(sequenceFlow6);
	sUB_Goal_Validate1.flows.push(sequenceFlow7);
	sUB_Goal_Validate1.flows.push(sequenceFlow8);
	sUB_Goal_Validate1.flows.push(sequenceFlow9);
	sUB_Goal_Validate1.flows.push(sequenceFlow10);
	sUB_Goal_Validate1.flows.push(sequenceFlow11);
	sUB_Goal_Validate1.flows.push(sequenceFlow12);
	sUB_Goal_Validate1.microflowReturnType = booleanType2;
	sUB_Goal_Validate1.concurrencyErrorMessage = text3;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = actionActivity1;
	sequenceFlow1.destination = exclusiveSplit1;

	sequenceFlow2.origin = exclusiveSplit1;
	sequenceFlow2.destination = actionActivity3;

	sequenceFlow3.origin = actionActivity3;
	sequenceFlow3.destination = actionActivity2;

	sequenceFlow4.origin = exclusiveSplit1;
	sequenceFlow4.destination = exclusiveMerge1;

	sequenceFlow5.origin = actionActivity5;
	sequenceFlow5.destination = actionActivity4;

	sequenceFlow6.origin = exclusiveSplit2;
	sequenceFlow6.destination = exclusiveMerge2;

	sequenceFlow7.origin = exclusiveMerge1;
	sequenceFlow7.destination = exclusiveSplit2;

	sequenceFlow8.origin = exclusiveMerge2;
	sequenceFlow8.destination = endEvent1;

	sequenceFlow9.origin = exclusiveSplit2;
	sequenceFlow9.destination = actionActivity5;

	sequenceFlow10.origin = actionActivity2;
	sequenceFlow10.destination = exclusiveMerge1;

	sequenceFlow11.origin = actionActivity4;
	sequenceFlow11.destination = exclusiveMerge2;

	sequenceFlow12.origin = startEvent1;
	sequenceFlow12.destination = actionActivity1;

})