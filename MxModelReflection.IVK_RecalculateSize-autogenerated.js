(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "b02927c3-ec9d-4356-b066-5a12c7444981" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":100,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var constantRange1 = microflows.ConstantRange.create(model);

	var attributeRef1 = domainmodels.AttributeRef.create(model);
	attributeRef1.attribute = model.findAttributeByQualifiedName("MxModelReflection.DbSizeEstimate.NrOfRecords");

	var sortItem1 = microflows.SortItem.create(model);
	sortItem1.attributeRef = attributeRef1;   // Note: for this property a default value is defined.

	var sortItemList1 = microflows.SortItemList.create(model);
	sortItemList1.items.push(sortItem1);

	var databaseRetrieveSource1 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource1.entity = model.findEntityByQualifiedName("MxModelReflection.DbSizeEstimate");
	databaseRetrieveSource1.range = constantRange1;   // Note: for this property a default value is defined.
	databaseRetrieveSource1.xPathConstraint = "[NrOfRecords!=empty]\n[MxModelReflection.DbSizeEstimate_MxObjectType/MxModelReflection.MxObjectType]";
	databaseRetrieveSource1.sortItemList = sortItemList1;   // Note: for this property a default value is defined.

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = databaseRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "DbSizeEstimateList";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":240,"y":200};
	actionActivity1.size = {"width":170,"height":60};
	actionActivity1.action = retrieveAction1;

	var commitAction1 = microflows.CommitAction.create(model);
	commitAction1.commitVariableName = "DbSizeEstimateList";
	commitAction1.refreshInClient = true;

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":2180,"y":200};
	actionActivity2.size = {"width":120,"height":60};
	actionActivity2.action = commitAction1;

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":2295,"y":200};
	endEvent1.size = {"width":20,"height":20};

	var constantRange2 = microflows.ConstantRange.create(model);

	var sortItemList2 = microflows.SortItemList.create(model);

	var databaseRetrieveSource2 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource2.entity = model.findEntityByQualifiedName("MxModelReflection.MxObjectMember");
	databaseRetrieveSource2.range = constantRange2;   // Note: for this property a default value is defined.
	databaseRetrieveSource2.xPathConstraint = "[MxModelReflection.MxObjectMember_MxObjectType/MxModelReflection.MxObjectType/MxModelReflection.DbSizeEstimate_MxObjectType = $Estimate]";
	databaseRetrieveSource2.sortItemList = sortItemList2;   // Note: for this property a default value is defined.

	var retrieveAction2 = microflows.RetrieveAction.create(model);
	retrieveAction2.retrieveSource = databaseRetrieveSource2;   // Note: for this property a default value is defined.
	retrieveAction2.outputVariableName = "MxObjectMemberList";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":85,"y":180};
	actionActivity3.size = {"width":160,"height":60};
	actionActivity3.action = retrieveAction2;

	var aggregateListAction1 = microflows.AggregateListAction.create(model);
	aggregateListAction1.inputListVariableName = "MxObjectMemberList";
	aggregateListAction1.outputVariableName = "count";

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":245,"y":180};
	actionActivity4.size = {"width":140,"height":60};
	actionActivity4.action = aggregateListAction1;

	var integerType1 = datatypes.IntegerType.create(model);

	var createVariableAction1 = microflows.CreateVariableAction.create(model);
	createVariableAction1.variableName = "Size";
	createVariableAction1.variableType = integerType1;   // Note: for this property a default value is defined.
	createVariableAction1.initialValue = "8 + $count";

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":405,"y":180};
	actionActivity5.size = {"width":120,"height":60};
	actionActivity5.action = createVariableAction1;

	var memberChange1 = microflows.MemberChange.create(model);
	memberChange1.attribute = model.findAttributeByQualifiedName("MxModelReflection.DbSizeEstimate.CalculatedSizeInBytes");
	memberChange1.value = "$Size";

	var memberChange2 = microflows.MemberChange.create(model);
	memberChange2.attribute = model.findAttributeByQualifiedName("MxModelReflection.DbSizeEstimate.CalculatedSizeInKiloBytes");
	memberChange2.value = "ceil($Size : 1024)";

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.items.push(memberChange1);
	changeObjectAction1.items.push(memberChange2);
	changeObjectAction1.changeVariableName = "Estimate";

	var actionActivity6 = microflows.ActionActivity.create(model);
	actionActivity6.relativeMiddlePoint = {"x":1635,"y":180};
	actionActivity6.size = {"width":120,"height":60};
	actionActivity6.action = changeObjectAction1;

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$ValueType/TypeEnum";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":290,"y":180};
	exclusiveSplit1.size = {"width":60,"height":40};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.

	var changeVariableAction1 = microflows.ChangeVariableAction.create(model);
	changeVariableAction1.changeVariableName = "Size";
	changeVariableAction1.value = "$Size + 8";

	var actionActivity7 = microflows.ActionActivity.create(model);
	actionActivity7.relativeMiddlePoint = {"x":570,"y":35};
	actionActivity7.size = {"width":120,"height":60};
	actionActivity7.action = changeVariableAction1;
	actionActivity7.caption = "Add 8";
	actionActivity7.autoGenerateCaption = false;

	var exclusiveMerge1 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge1.relativeMiddlePoint = {"x":455,"y":35};
	exclusiveMerge1.size = {"width":60,"height":40};

	var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition2.expression = "contains( toLowerCase($Member/CompleteName), 'owner')\n or\ncontains( toLowerCase($Member/CompleteName), 'changedby')";

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":290,"y":320};
	exclusiveSplit2.size = {"width":110,"height":50};
	exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
	exclusiveSplit2.caption = "has owner or changed by";

	var changeVariableAction2 = microflows.ChangeVariableAction.create(model);
	changeVariableAction2.changeVariableName = "Size";
	changeVariableAction2.value = "$Size + 8";

	var actionActivity8 = microflows.ActionActivity.create(model);
	actionActivity8.relativeMiddlePoint = {"x":625,"y":315};
	actionActivity8.size = {"width":120,"height":60};
	actionActivity8.action = changeVariableAction2;
	actionActivity8.caption = "Add 8";
	actionActivity8.autoGenerateCaption = false;

	var continueEvent1 = microflows.ContinueEvent.create(model);
	continueEvent1.relativeMiddlePoint = {"x":535,"y":335};
	continueEvent1.size = {"width":20,"height":20};

	var changeVariableAction3 = microflows.ChangeVariableAction.create(model);
	changeVariableAction3.changeVariableName = "Size";
	changeVariableAction3.value = "$Size + 4";

	var actionActivity9 = microflows.ActionActivity.create(model);
	actionActivity9.relativeMiddlePoint = {"x":945,"y":40};
	actionActivity9.size = {"width":120,"height":60};
	actionActivity9.action = changeVariableAction3;
	actionActivity9.caption = "Add 4";
	actionActivity9.autoGenerateCaption = false;

	var exclusiveMerge2 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge2.relativeMiddlePoint = {"x":835,"y":40};
	exclusiveMerge2.size = {"width":60,"height":40};

	var changeVariableAction4 = microflows.ChangeVariableAction.create(model);
	changeVariableAction4.changeVariableName = "Size";
	changeVariableAction4.value = "$Size + 1";

	var actionActivity10 = microflows.ActionActivity.create(model);
	actionActivity10.relativeMiddlePoint = {"x":195,"y":35};
	actionActivity10.size = {"width":120,"height":60};
	actionActivity10.action = changeVariableAction4;
	actionActivity10.caption = "Add 1";
	actionActivity10.autoGenerateCaption = false;

	var changeVariableAction5 = microflows.ChangeVariableAction.create(model);
	changeVariableAction5.changeVariableName = "Size";
	changeVariableAction5.value = "$Size + 2+(20*2)";

	var actionActivity11 = microflows.ActionActivity.create(model);
	actionActivity11.relativeMiddlePoint = {"x":945,"y":105};
	actionActivity11.size = {"width":120,"height":60};
	actionActivity11.action = changeVariableAction5;
	actionActivity11.caption = "Add length for enum with 20 chars";
	actionActivity11.autoGenerateCaption = false;

	var changeVariableAction6 = microflows.ChangeVariableAction.create(model);
	changeVariableAction6.changeVariableName = "Size";
	changeVariableAction6.value = "$Size + 2+(68*2)";

	var actionActivity12 = microflows.ActionActivity.create(model);
	actionActivity12.relativeMiddlePoint = {"x":935,"y":170};
	actionActivity12.size = {"width":140,"height":60};
	actionActivity12.action = changeVariableAction6;
	actionActivity12.caption = "Add length for hash string (68 chars)";
	actionActivity12.autoGenerateCaption = false;

	var changeVariableAction7 = microflows.ChangeVariableAction.create(model);
	changeVariableAction7.changeVariableName = "Size";
	changeVariableAction7.value = "$Size + 2+(\nceil(if $Member/FieldLength != empty\nthen $Member/FieldLength *.8\nelse 200) *2)";

	var actionActivity13 = microflows.ActionActivity.create(model);
	actionActivity13.relativeMiddlePoint = {"x":85,"y":315};
	actionActivity13.size = {"width":140,"height":60};
	actionActivity13.action = changeVariableAction7;
	actionActivity13.caption = "Add length for field, assuming 80% populated";
	actionActivity13.autoGenerateCaption = false;

	var exclusiveMerge3 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge3.relativeMiddlePoint = {"x":290,"y":265};
	exclusiveMerge3.size = {"width":70,"height":20};

	var changeVariableAction8 = microflows.ChangeVariableAction.create(model);
	changeVariableAction8.changeVariableName = "Size";
	changeVariableAction8.value = "$Size + 36";

	var actionActivity14 = microflows.ActionActivity.create(model);
	actionActivity14.relativeMiddlePoint = {"x":645,"y":240};
	actionActivity14.size = {"width":120,"height":60};
	actionActivity14.action = changeVariableAction8;
	actionActivity14.caption = "Add 36";
	actionActivity14.autoGenerateCaption = false;

	var changeVariableAction9 = microflows.ChangeVariableAction.create(model);
	changeVariableAction9.changeVariableName = "Size";
	changeVariableAction9.value = "$Size + ceil($LogProduct:8 )";

	var actionActivity15 = microflows.ActionActivity.create(model);
	actionActivity15.relativeMiddlePoint = {"x":935,"y":240};
	actionActivity15.size = {"width":130,"height":60};
	actionActivity15.action = changeVariableAction9;
	actionActivity15.caption = "Add ceil($LogProduct:8 )";
	actionActivity15.autoGenerateCaption = false;

	var microflowCallParameterMapping1 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping1.__parameter.updateWithRawValue("MxModelReflection.Log.Base");
	microflowCallParameterMapping1.argument = "2";

	var microflowCallParameterMapping2 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping2.__parameter.updateWithRawValue("MxModelReflection.Log.x");
	microflowCallParameterMapping2.argument = "8";

	var microflowCall1 = microflows.MicroflowCall.create(model);
	microflowCall1.microflow = model.findMicroflowByQualifiedName("MxModelReflection.Log");
	microflowCall1.parameterMappings.push(microflowCallParameterMapping1);
	microflowCall1.parameterMappings.push(microflowCallParameterMapping2);

	var microflowCallAction1 = microflows.MicroflowCallAction.create(model);
	microflowCallAction1.microflowCall = microflowCall1;   // Note: for this property a default value is defined.
	microflowCallAction1.outputVariableName = "LogProduct";

	var actionActivity16 = microflows.ActionActivity.create(model);
	actionActivity16.relativeMiddlePoint = {"x":790,"y":240};
	actionActivity16.size = {"width":120,"height":40};
	actionActivity16.action = microflowCallAction1;

	var associationRetrieveSource1 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource1.startVariableName = "Member";
	associationRetrieveSource1.association = model.findAssociationBaseByQualifiedName("MxModelReflection.MxObjectMember_Type");

	var retrieveAction3 = microflows.RetrieveAction.create(model);
	retrieveAction3.retrieveSource = associationRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction3.outputVariableName = "ValueType";

	var actionActivity17 = microflows.ActionActivity.create(model);
	actionActivity17.relativeMiddlePoint = {"x":120,"y":180};
	actionActivity17.size = {"width":200,"height":60};
	actionActivity17.action = retrieveAction3;

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity7);
	microflowObjectCollection1.objects.push(exclusiveMerge1);
	microflowObjectCollection1.objects.push(exclusiveSplit2);
	microflowObjectCollection1.objects.push(actionActivity8);
	microflowObjectCollection1.objects.push(continueEvent1);
	microflowObjectCollection1.objects.push(actionActivity9);
	microflowObjectCollection1.objects.push(exclusiveMerge2);
	microflowObjectCollection1.objects.push(actionActivity10);
	microflowObjectCollection1.objects.push(actionActivity11);
	microflowObjectCollection1.objects.push(actionActivity12);
	microflowObjectCollection1.objects.push(actionActivity13);
	microflowObjectCollection1.objects.push(exclusiveMerge3);
	microflowObjectCollection1.objects.push(actionActivity14);
	microflowObjectCollection1.objects.push(actionActivity15);
	microflowObjectCollection1.objects.push(actionActivity16);
	microflowObjectCollection1.objects.push(actionActivity17);

	var iterableList1 = microflows.IterableList.create(model);
	iterableList1.listVariableName = "MxObjectMemberList";
	iterableList1.variableName = "Member";

	var loopedActivity1 = microflows.LoopedActivity.create(model);
	loopedActivity1.relativeMiddlePoint = {"x":1010,"y":180};
	loopedActivity1.size = {"width":1020,"height":360};
	loopedActivity1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	loopedActivity1.loopSource = iterableList1;   // Note: for this property a default value is defined.

	var microflowObjectCollection2 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection2.objects.push(actionActivity3);
	microflowObjectCollection2.objects.push(actionActivity4);
	microflowObjectCollection2.objects.push(actionActivity5);
	microflowObjectCollection2.objects.push(actionActivity6);
	microflowObjectCollection2.objects.push(loopedActivity1);

	var iterableList2 = microflows.IterableList.create(model);
	iterableList2.listVariableName = "DbSizeEstimateList";
	iterableList2.variableName = "Estimate";

	var loopedActivity2 = microflows.LoopedActivity.create(model);
	loopedActivity2.relativeMiddlePoint = {"x":1215,"y":200};
	loopedActivity2.size = {"width":1710,"height":360};
	loopedActivity2.objectCollection = microflowObjectCollection2;   // Note: for this property a default value is defined.
	loopedActivity2.loopSource = iterableList2;   // Note: for this property a default value is defined.

	var microflowObjectCollection3 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection3.objects.push(startEvent1);
	microflowObjectCollection3.objects.push(actionActivity1);
	microflowObjectCollection3.objects.push(actionActivity2);
	microflowObjectCollection3.objects.push(endEvent1);
	microflowObjectCollection3.objects.push(loopedActivity2);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":30,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":30,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow4.caseValue = noCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":30,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow5.caseValue = noCase5;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "AutoNumber";

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originBezierVector = {"width":0,"height":-15};
	sequenceFlow6.destinationBezierVector = {"width":-145,"height":-25};
	sequenceFlow6.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":15,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow7.caseValue = noCase6;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "LongType";

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.destinationConnectionIndex = 3;
	sequenceFlow8.originBezierVector = {"width":0,"height":-15};
	sequenceFlow8.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow8.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 1;
	sequenceFlow9.destinationConnectionIndex = 3;
	sequenceFlow9.originBezierVector = {"width":30,"height":0};
	sequenceFlow9.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow9.caseValue = noCase7;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "DateTime";

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.destinationConnectionIndex = 2;
	sequenceFlow10.originBezierVector = {"width":0,"height":-15};
	sequenceFlow10.destinationBezierVector = {"width":-5,"height":35};
	sequenceFlow10.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "(empty)";

	var sequenceFlow11 = microflows.SequenceFlow.create(model);
	sequenceFlow11.originConnectionIndex = 2;
	sequenceFlow11.originBezierVector = {"width":0,"height":15};
	sequenceFlow11.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow11.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var enumerationCase5 = microflows.EnumerationCase.create(model);
	enumerationCase5.value = "true";

	var sequenceFlow12 = microflows.SequenceFlow.create(model);
	sequenceFlow12.originConnectionIndex = 1;
	sequenceFlow12.destinationConnectionIndex = 3;
	sequenceFlow12.originBezierVector = {"width":15,"height":0};
	sequenceFlow12.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow12.caseValue = enumerationCase5;   // Note: for this property a default value is defined.

	var enumerationCase6 = microflows.EnumerationCase.create(model);
	enumerationCase6.value = "false";

	var sequenceFlow13 = microflows.SequenceFlow.create(model);
	sequenceFlow13.originConnectionIndex = 2;
	sequenceFlow13.destinationConnectionIndex = 3;
	sequenceFlow13.originBezierVector = {"width":0,"height":15};
	sequenceFlow13.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow13.caseValue = enumerationCase6;   // Note: for this property a default value is defined.

	var enumerationCase7 = microflows.EnumerationCase.create(model);
	enumerationCase7.value = "Currency";

	var sequenceFlow14 = microflows.SequenceFlow.create(model);
	sequenceFlow14.originConnectionIndex = 1;
	sequenceFlow14.destinationConnectionIndex = 3;
	sequenceFlow14.originBezierVector = {"width":15,"height":0};
	sequenceFlow14.destinationBezierVector = {"width":60,"height":20};
	sequenceFlow14.caseValue = enumerationCase7;   // Note: for this property a default value is defined.

	var noCase8 = microflows.NoCase.create(model);

	var sequenceFlow15 = microflows.SequenceFlow.create(model);
	sequenceFlow15.originConnectionIndex = 1;
	sequenceFlow15.destinationConnectionIndex = 3;
	sequenceFlow15.originBezierVector = {"width":15,"height":0};
	sequenceFlow15.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow15.caseValue = noCase8;   // Note: for this property a default value is defined.

	var enumerationCase8 = microflows.EnumerationCase.create(model);
	enumerationCase8.value = "FloatType";

	var sequenceFlow16 = microflows.SequenceFlow.create(model);
	sequenceFlow16.originConnectionIndex = 1;
	sequenceFlow16.originBezierVector = {"width":15,"height":0};
	sequenceFlow16.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow16.caseValue = enumerationCase8;   // Note: for this property a default value is defined.

	var enumerationCase9 = microflows.EnumerationCase.create(model);
	enumerationCase9.value = "IntegerType";

	var sequenceFlow17 = microflows.SequenceFlow.create(model);
	sequenceFlow17.originConnectionIndex = 1;
	sequenceFlow17.destinationConnectionIndex = 2;
	sequenceFlow17.originBezierVector = {"width":15,"height":0};
	sequenceFlow17.destinationBezierVector = {"width":-25,"height":30};
	sequenceFlow17.caseValue = enumerationCase9;   // Note: for this property a default value is defined.

	var enumerationCase10 = microflows.EnumerationCase.create(model);
	enumerationCase10.value = "BooleanType";

	var sequenceFlow18 = microflows.SequenceFlow.create(model);
	sequenceFlow18.destinationConnectionIndex = 2;
	sequenceFlow18.originBezierVector = {"width":0,"height":-15};
	sequenceFlow18.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow18.caseValue = enumerationCase10;   // Note: for this property a default value is defined.

	var enumerationCase11 = microflows.EnumerationCase.create(model);
	enumerationCase11.value = "EnumType";

	var sequenceFlow19 = microflows.SequenceFlow.create(model);
	sequenceFlow19.originConnectionIndex = 1;
	sequenceFlow19.destinationConnectionIndex = 3;
	sequenceFlow19.originBezierVector = {"width":15,"height":0};
	sequenceFlow19.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow19.caseValue = enumerationCase11;   // Note: for this property a default value is defined.

	var enumerationCase12 = microflows.EnumerationCase.create(model);
	enumerationCase12.value = "HashString";

	var sequenceFlow20 = microflows.SequenceFlow.create(model);
	sequenceFlow20.originConnectionIndex = 1;
	sequenceFlow20.destinationConnectionIndex = 3;
	sequenceFlow20.originBezierVector = {"width":15,"height":0};
	sequenceFlow20.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow20.caseValue = enumerationCase12;   // Note: for this property a default value is defined.

	var enumerationCase13 = microflows.EnumerationCase.create(model);
	enumerationCase13.value = "StringType";

	var sequenceFlow21 = microflows.SequenceFlow.create(model);
	sequenceFlow21.originConnectionIndex = 2;
	sequenceFlow21.destinationConnectionIndex = 1;
	sequenceFlow21.originBezierVector = {"width":-145,"height":40};
	sequenceFlow21.destinationBezierVector = {"width":30,"height":0};
	sequenceFlow21.caseValue = enumerationCase13;   // Note: for this property a default value is defined.

	var noCase9 = microflows.NoCase.create(model);

	var sequenceFlow22 = microflows.SequenceFlow.create(model);
	sequenceFlow22.originConnectionIndex = 1;
	sequenceFlow22.destinationConnectionIndex = 3;
	sequenceFlow22.originBezierVector = {"width":30,"height":0};
	sequenceFlow22.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow22.caseValue = noCase9;   // Note: for this property a default value is defined.

	var noCase10 = microflows.NoCase.create(model);

	var sequenceFlow23 = microflows.SequenceFlow.create(model);
	sequenceFlow23.originConnectionIndex = 1;
	sequenceFlow23.destinationConnectionIndex = 3;
	sequenceFlow23.originBezierVector = {"width":30,"height":0};
	sequenceFlow23.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow23.caseValue = noCase10;   // Note: for this property a default value is defined.

	var noCase11 = microflows.NoCase.create(model);

	var sequenceFlow24 = microflows.SequenceFlow.create(model);
	sequenceFlow24.originConnectionIndex = 1;
	sequenceFlow24.destinationConnectionIndex = 3;
	sequenceFlow24.originBezierVector = {"width":30,"height":0};
	sequenceFlow24.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow24.caseValue = noCase11;   // Note: for this property a default value is defined.

	var noCase12 = microflows.NoCase.create(model);

	var sequenceFlow25 = microflows.SequenceFlow.create(model);
	sequenceFlow25.originConnectionIndex = 2;
	sequenceFlow25.originBezierVector = {"width":0,"height":15};
	sequenceFlow25.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow25.caseValue = noCase12;   // Note: for this property a default value is defined.

	var enumerationCase14 = microflows.EnumerationCase.create(model);
	enumerationCase14.value = "ObjectType";

	var sequenceFlow26 = microflows.SequenceFlow.create(model);
	sequenceFlow26.originConnectionIndex = 2;
	sequenceFlow26.destinationConnectionIndex = 3;
	sequenceFlow26.originBezierVector = {"width":-70,"height":30};
	sequenceFlow26.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow26.caseValue = enumerationCase14;   // Note: for this property a default value is defined.

	var enumerationCase15 = microflows.EnumerationCase.create(model);
	enumerationCase15.value = "ObjectList";

	var sequenceFlow27 = microflows.SequenceFlow.create(model);
	sequenceFlow27.originConnectionIndex = 2;
	sequenceFlow27.destinationConnectionIndex = 1;
	sequenceFlow27.originBezierVector = {"width":90,"height":30};
	sequenceFlow27.destinationBezierVector = {"width":15,"height":0};
	sequenceFlow27.caseValue = enumerationCase15;   // Note: for this property a default value is defined.

	var enumerationCase16 = microflows.EnumerationCase.create(model);
	enumerationCase16.value = "Decimal";

	var sequenceFlow28 = microflows.SequenceFlow.create(model);
	sequenceFlow28.originConnectionIndex = 1;
	sequenceFlow28.destinationConnectionIndex = 3;
	sequenceFlow28.originBezierVector = {"width":15,"height":0};
	sequenceFlow28.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow28.caseValue = enumerationCase16;   // Note: for this property a default value is defined.

	var noCase13 = microflows.NoCase.create(model);

	var sequenceFlow29 = microflows.SequenceFlow.create(model);
	sequenceFlow29.originConnectionIndex = 1;
	sequenceFlow29.destinationConnectionIndex = 3;
	sequenceFlow29.originBezierVector = {"width":30,"height":0};
	sequenceFlow29.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow29.caseValue = noCase13;   // Note: for this property a default value is defined.

	var noCase14 = microflows.NoCase.create(model);

	var sequenceFlow30 = microflows.SequenceFlow.create(model);
	sequenceFlow30.originConnectionIndex = 1;
	sequenceFlow30.destinationConnectionIndex = 3;
	sequenceFlow30.originBezierVector = {"width":30,"height":0};
	sequenceFlow30.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow30.caseValue = noCase14;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "en_GB";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_ZA";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);

	var iVK_RecalculateSize1 = microflows.Microflow.createIn(unit);
	iVK_RecalculateSize1.name = "IVK_RecalculateSize";
	iVK_RecalculateSize1.objectCollection = microflowObjectCollection3;   // Note: for this property a default value is defined.
	iVK_RecalculateSize1.flows.push(sequenceFlow1);
	iVK_RecalculateSize1.flows.push(sequenceFlow2);
	iVK_RecalculateSize1.flows.push(sequenceFlow3);
	iVK_RecalculateSize1.flows.push(sequenceFlow4);
	iVK_RecalculateSize1.flows.push(sequenceFlow5);
	iVK_RecalculateSize1.flows.push(sequenceFlow6);
	iVK_RecalculateSize1.flows.push(sequenceFlow7);
	iVK_RecalculateSize1.flows.push(sequenceFlow8);
	iVK_RecalculateSize1.flows.push(sequenceFlow9);
	iVK_RecalculateSize1.flows.push(sequenceFlow10);
	iVK_RecalculateSize1.flows.push(sequenceFlow11);
	iVK_RecalculateSize1.flows.push(sequenceFlow12);
	iVK_RecalculateSize1.flows.push(sequenceFlow13);
	iVK_RecalculateSize1.flows.push(sequenceFlow14);
	iVK_RecalculateSize1.flows.push(sequenceFlow15);
	iVK_RecalculateSize1.flows.push(sequenceFlow16);
	iVK_RecalculateSize1.flows.push(sequenceFlow17);
	iVK_RecalculateSize1.flows.push(sequenceFlow18);
	iVK_RecalculateSize1.flows.push(sequenceFlow19);
	iVK_RecalculateSize1.flows.push(sequenceFlow20);
	iVK_RecalculateSize1.flows.push(sequenceFlow21);
	iVK_RecalculateSize1.flows.push(sequenceFlow22);
	iVK_RecalculateSize1.flows.push(sequenceFlow23);
	iVK_RecalculateSize1.flows.push(sequenceFlow24);
	iVK_RecalculateSize1.flows.push(sequenceFlow25);
	iVK_RecalculateSize1.flows.push(sequenceFlow26);
	iVK_RecalculateSize1.flows.push(sequenceFlow27);
	iVK_RecalculateSize1.flows.push(sequenceFlow28);
	iVK_RecalculateSize1.flows.push(sequenceFlow29);
	iVK_RecalculateSize1.flows.push(sequenceFlow30);
	iVK_RecalculateSize1.microflowReturnType = voidType1;
	iVK_RecalculateSize1.allowedModuleRoles.push(model.findModuleRoleByQualifiedName("MxModelReflection.ModelAdministrator"));
	iVK_RecalculateSize1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity1;

	sequenceFlow2.origin = actionActivity1;
	sequenceFlow2.destination = loopedActivity2;

	sequenceFlow3.origin = actionActivity3;
	sequenceFlow3.destination = actionActivity4;

	sequenceFlow4.origin = actionActivity4;
	sequenceFlow4.destination = actionActivity5;

	sequenceFlow5.origin = actionActivity17;
	sequenceFlow5.destination = exclusiveSplit1;

	sequenceFlow6.origin = exclusiveSplit1;
	sequenceFlow6.destination = exclusiveMerge1;

	sequenceFlow7.origin = exclusiveMerge1;
	sequenceFlow7.destination = actionActivity7;

	sequenceFlow8.origin = exclusiveSplit1;
	sequenceFlow8.destination = exclusiveMerge1;

	sequenceFlow9.origin = actionActivity5;
	sequenceFlow9.destination = loopedActivity1;

	sequenceFlow10.origin = exclusiveSplit1;
	sequenceFlow10.destination = exclusiveMerge1;

	sequenceFlow11.origin = exclusiveSplit1;
	sequenceFlow11.destination = exclusiveMerge3;

	sequenceFlow12.origin = exclusiveSplit2;
	sequenceFlow12.destination = actionActivity8;

	sequenceFlow13.origin = exclusiveSplit2;
	sequenceFlow13.destination = continueEvent1;

	sequenceFlow14.origin = exclusiveSplit1;
	sequenceFlow14.destination = exclusiveMerge2;

	sequenceFlow15.origin = exclusiveMerge2;
	sequenceFlow15.destination = actionActivity9;

	sequenceFlow16.origin = exclusiveSplit1;
	sequenceFlow16.destination = exclusiveMerge2;

	sequenceFlow17.origin = exclusiveSplit1;
	sequenceFlow17.destination = exclusiveMerge2;

	sequenceFlow18.origin = exclusiveSplit1;
	sequenceFlow18.destination = actionActivity10;

	sequenceFlow19.origin = exclusiveSplit1;
	sequenceFlow19.destination = actionActivity11;

	sequenceFlow20.origin = exclusiveSplit1;
	sequenceFlow20.destination = actionActivity12;

	sequenceFlow21.origin = exclusiveSplit1;
	sequenceFlow21.destination = actionActivity13;

	sequenceFlow22.origin = loopedActivity1;
	sequenceFlow22.destination = actionActivity6;

	sequenceFlow23.origin = loopedActivity2;
	sequenceFlow23.destination = actionActivity2;

	sequenceFlow24.origin = actionActivity2;
	sequenceFlow24.destination = endEvent1;

	sequenceFlow25.origin = exclusiveMerge3;
	sequenceFlow25.destination = exclusiveSplit2;

	sequenceFlow26.origin = exclusiveSplit1;
	sequenceFlow26.destination = exclusiveMerge3;

	sequenceFlow27.origin = exclusiveSplit1;
	sequenceFlow27.destination = exclusiveMerge3;

	sequenceFlow28.origin = exclusiveSplit1;
	sequenceFlow28.destination = actionActivity14;

	sequenceFlow29.origin = actionActivity14;
	sequenceFlow29.destination = actionActivity16;

	sequenceFlow30.origin = actionActivity16;
	sequenceFlow30.destination = actionActivity15;

})