(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "5680fb26-1eee-4cad-b494-d911d3522ae0" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var constantRange1 = microflows.ConstantRange.create(model);

	var sortItemList1 = microflows.SortItemList.create(model);

	var databaseRetrieveSource1 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource1.entity = model.findEntityByQualifiedName("ExcelImporter.Column");
	databaseRetrieveSource1.range = constantRange1;   // Note: for this property a default value is defined.
	databaseRetrieveSource1.xPathConstraint = "[ExcelImporter.Column_Template=$Template]\n[ (IsKey='Yes' and MappingType='Attribute' ) or\n  (MappingType='Reference' and (IsReferenceKey='YesOnlyMainObject' or IsReferenceKey = 'YesMainAndAssociatedObject'))\n]";
	databaseRetrieveSource1.sortItemList = sortItemList1;   // Note: for this property a default value is defined.

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = databaseRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "AllKeyColumns";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":1065,"y":230};
	actionActivity1.size = {"width":130,"height":60};
	actionActivity1.action = retrieveAction1;
	actionActivity1.caption = "Get all attribute key colums";
	actionActivity1.autoGenerateCaption = false;

	var aggregateListAction1 = microflows.AggregateListAction.create(model);
	aggregateListAction1.inputListVariableName = "AllKeyColumns";
	aggregateListAction1.outputVariableName = "Count";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":1195,"y":230};
	actionActivity2.size = {"width":70,"height":30};
	actionActivity2.action = aggregateListAction1;
	actionActivity2.caption = "count";
	actionActivity2.autoGenerateCaption = false;

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$Template/ImportAction";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":1295,"y":230};
	exclusiveSplit1.size = {"width":60,"height":40};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "import action";

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";
	translation1.text = "This field is required";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "nl_NL";
	translation2.text = "Dit veld is verplicht";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_GB";
	translation3.text = "This field is required";

	var translation4 = texts.Translation.create(model);
	translation4.languageCode = "en_ZA";
	translation4.text = "This field is required";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);
	text1.translations.push(translation4);

	var textTemplate1 = microflows.TextTemplate.create(model);
	textTemplate1.text = text1;   // Note: for this property a default value is defined.

	var validationFeedbackAction1 = microflows.ValidationFeedbackAction.create(model);
	validationFeedbackAction1.feedbackTemplate = textTemplate1;   // Note: for this property a default value is defined.
	validationFeedbackAction1.objectVariableName = "Template";
	validationFeedbackAction1.attribute = model.findAttributeByQualifiedName("ExcelImporter.Template.ImportAction");

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":1295,"y":145};
	actionActivity3.size = {"width":140,"height":50};
	actionActivity3.action = validationFeedbackAction1;
	actionActivity3.caption = "Set import action required";
	actionActivity3.autoGenerateCaption = false;

	var exclusiveMerge1 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge1.relativeMiddlePoint = {"x":1380,"y":355};
	exclusiveMerge1.size = {"width":60,"height":40};

	var changeVariableAction1 = microflows.ChangeVariableAction.create(model);
	changeVariableAction1.changeVariableName = "WarningString";
	changeVariableAction1.value = "$WarningString + '\n' + $OutputWarning_NoKeyAllowed";

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":1830,"y":230};
	actionActivity4.size = {"width":120,"height":40};
	actionActivity4.action = changeVariableAction1;
	actionActivity4.caption = "Add the output to the warning";
	actionActivity4.autoGenerateCaption = false;

	var microflowCallParameterMapping1 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping1.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextNL");
	microflowCallParameterMapping1.argument = "'- Als de import actie ''creeer alles'' is dan mogen er geen sleutel kolommen zijn ingesteld'";

	var microflowCallParameterMapping2 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping2.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextEN");
	microflowCallParameterMapping2.argument = "'- When the import action is ''create everything'' no colums can be defined as key'";

	var microflowCallParameterMapping3 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping3.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.CurLanguage");
	microflowCallParameterMapping3.argument = "$UserLanguage";

	var microflowCall1 = microflows.MicroflowCall.create(model);
	microflowCall1.microflow = model.findMicroflowByQualifiedName("ExcelImporter.GetCorrectString");
	microflowCall1.parameterMappings.push(microflowCallParameterMapping1);
	microflowCall1.parameterMappings.push(microflowCallParameterMapping2);
	microflowCall1.parameterMappings.push(microflowCallParameterMapping3);

	var microflowCallAction1 = microflows.MicroflowCallAction.create(model);
	microflowCallAction1.microflowCall = microflowCall1;   // Note: for this property a default value is defined.
	microflowCallAction1.outputVariableName = "OutputWarning_NoKeyAllowed";

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":1660,"y":230};
	actionActivity5.size = {"width":150,"height":40};
	actionActivity5.action = microflowCallAction1;
	actionActivity5.caption = "Get the warning in the correct language";
	actionActivity5.autoGenerateCaption = false;

	var microflowCallParameterMapping4 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping4.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextNL");
	microflowCallParameterMapping4.argument = "'- Als de import actie moet synchronizeren dan moet er tenminste 1 kolom zijn ingesteld als zoeksleutel'";

	var microflowCallParameterMapping5 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping5.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextEN");
	microflowCallParameterMapping5.argument = "'- When the import action is synchronize at least one colum must be defined as key'\n";

	var microflowCallParameterMapping6 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping6.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.CurLanguage");
	microflowCallParameterMapping6.argument = "$UserLanguage";

	var microflowCall2 = microflows.MicroflowCall.create(model);
	microflowCall2.microflow = model.findMicroflowByQualifiedName("ExcelImporter.GetCorrectString");
	microflowCall2.parameterMappings.push(microflowCallParameterMapping4);
	microflowCall2.parameterMappings.push(microflowCallParameterMapping5);
	microflowCall2.parameterMappings.push(microflowCallParameterMapping6);

	var microflowCallAction2 = microflows.MicroflowCallAction.create(model);
	microflowCallAction2.microflowCall = microflowCall2;   // Note: for this property a default value is defined.
	microflowCallAction2.outputVariableName = "OutputWarning_NoKeyFound";

	var actionActivity6 = microflows.ActionActivity.create(model);
	actionActivity6.relativeMiddlePoint = {"x":1660,"y":355};
	actionActivity6.size = {"width":150,"height":40};
	actionActivity6.action = microflowCallAction2;
	actionActivity6.caption = "Get the warning in the correct language";
	actionActivity6.autoGenerateCaption = false;

	var changeVariableAction2 = microflows.ChangeVariableAction.create(model);
	changeVariableAction2.changeVariableName = "WarningString";
	changeVariableAction2.value = "$WarningString + '\n' + $OutputWarning_NoKeyFound";

	var actionActivity7 = microflows.ActionActivity.create(model);
	actionActivity7.relativeMiddlePoint = {"x":1830,"y":355};
	actionActivity7.size = {"width":120,"height":40};
	actionActivity7.action = changeVariableAction2;
	actionActivity7.caption = "Add the output to the warning";
	actionActivity7.autoGenerateCaption = false;

	var exclusiveMerge2 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge2.relativeMiddlePoint = {"x":1910,"y":290};
	exclusiveMerge2.size = {"width":60,"height":40};

	var changeVariableAction3 = microflows.ChangeVariableAction.create(model);
	changeVariableAction3.changeVariableName = "WarningString";
	changeVariableAction3.value = "$WarningString + '\n' + $OutputWarning_ReqField";

	var actionActivity8 = microflows.ActionActivity.create(model);
	actionActivity8.relativeMiddlePoint = {"x":1830,"y":145};
	actionActivity8.size = {"width":120,"height":40};
	actionActivity8.action = changeVariableAction3;
	actionActivity8.caption = "Add the output to the warning";
	actionActivity8.autoGenerateCaption = false;

	var microflowCallParameterMapping7 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping7.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextNL");
	microflowCallParameterMapping7.argument = "'- Niet alle verplichte velden zijn ingevuld'";

	var microflowCallParameterMapping8 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping8.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextEN");
	microflowCallParameterMapping8.argument = "'- Some of the required fields are empty'";

	var microflowCallParameterMapping9 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping9.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.CurLanguage");
	microflowCallParameterMapping9.argument = "$UserLanguage";

	var microflowCall3 = microflows.MicroflowCall.create(model);
	microflowCall3.microflow = model.findMicroflowByQualifiedName("ExcelImporter.GetCorrectString");
	microflowCall3.parameterMappings.push(microflowCallParameterMapping7);
	microflowCall3.parameterMappings.push(microflowCallParameterMapping8);
	microflowCall3.parameterMappings.push(microflowCallParameterMapping9);

	var microflowCallAction3 = microflows.MicroflowCallAction.create(model);
	microflowCallAction3.microflowCall = microflowCall3;   // Note: for this property a default value is defined.
	microflowCallAction3.outputVariableName = "OutputWarning_ReqField";

	var actionActivity9 = microflows.ActionActivity.create(model);
	actionActivity9.relativeMiddlePoint = {"x":1660,"y":145};
	actionActivity9.size = {"width":150,"height":40};
	actionActivity9.action = microflowCallAction3;
	actionActivity9.caption = "Get the warning in the correct language";
	actionActivity9.autoGenerateCaption = false;

	var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition2.expression = "$Count > 0";

	var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit2.relativeMiddlePoint = {"x":1485,"y":230};
	exclusiveSplit2.size = {"width":90,"height":70};
	exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
	exclusiveSplit2.caption = "key columns > 0";

	var expressionSplitCondition3 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition3.expression = "$Count > 0 or not( $AnyColumnUsed ) ";

	var exclusiveSplit3 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit3.relativeMiddlePoint = {"x":1485,"y":355};
	exclusiveSplit3.size = {"width":90,"height":70};
	exclusiveSplit3.splitCondition = expressionSplitCondition3;   // Note: for this property a default value is defined.
	exclusiveSplit3.caption = "key columns > 0";

	var constantRange2 = microflows.ConstantRange.create(model);

	var sortItemList2 = microflows.SortItemList.create(model);

	var databaseRetrieveSource2 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource2.entity = model.findEntityByQualifiedName("ExcelImporter.Column");
	databaseRetrieveSource2.range = constantRange2;   // Note: for this property a default value is defined.
	databaseRetrieveSource2.xPathConstraint = "[ExcelImporter.Column_Template=$Template]";
	databaseRetrieveSource2.sortItemList = sortItemList2;   // Note: for this property a default value is defined.

	var retrieveAction2 = microflows.RetrieveAction.create(model);
	retrieveAction2.retrieveSource = databaseRetrieveSource2;   // Note: for this property a default value is defined.
	retrieveAction2.outputVariableName = "Columns";

	var actionActivity10 = microflows.ActionActivity.create(model);
	actionActivity10.relativeMiddlePoint = {"x":80,"y":230};
	actionActivity10.size = {"width":160,"height":60};
	actionActivity10.action = retrieveAction2;
	actionActivity10.caption = "Get all associated col attribute relations";
	actionActivity10.autoGenerateCaption = false;

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":-1300,"y":230};
	startEvent1.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("ExcelImporter.Template");

	var template1 = microflows.MicroflowParameterObject.create(model);
	template1.relativeMiddlePoint = {"x":-1300,"y":120};
	template1.size = {"width":30,"height":30};
	template1.name = "Template";
	template1.variableType = objectType1;   // Note: for this property a default value is defined.

	var associationRetrieveSource1 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource1.startVariableName = "currentUser";
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	associationRetrieveSource1.__association.updateWithRawValue("System.User_Language");

	var retrieveAction3 = microflows.RetrieveAction.create(model);
	retrieveAction3.retrieveSource = associationRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction3.outputVariableName = "UserLanguage";

	var actionActivity11 = microflows.ActionActivity.create(model);
	actionActivity11.relativeMiddlePoint = {"x":-1190,"y":230};
	actionActivity11.size = {"width":130,"height":60};
	actionActivity11.action = retrieveAction3;
	actionActivity11.caption = "Get the language from the user";
	actionActivity11.autoGenerateCaption = false;

	var stringType1 = datatypes.StringType.create(model);

	var createVariableAction1 = microflows.CreateVariableAction.create(model);
	createVariableAction1.variableName = "WarningString";
	createVariableAction1.variableType = stringType1;   // Note: for this property a default value is defined.
	createVariableAction1.initialValue = "''";

	var actionActivity12 = microflows.ActionActivity.create(model);
	actionActivity12.relativeMiddlePoint = {"x":-1020,"y":230};
	actionActivity12.size = {"width":140,"height":60};
	actionActivity12.action = createVariableAction1;
	actionActivity12.caption = "Initialize an empty warning string";
	actionActivity12.autoGenerateCaption = false;

	var booleanType1 = datatypes.BooleanType.create(model);

	var createVariableAction2 = microflows.CreateVariableAction.create(model);
	createVariableAction2.variableName = "AnyColumnUsed";
	createVariableAction2.variableType = booleanType1;   // Note: for this property a default value is defined.
	createVariableAction2.initialValue = "false";

	var actionActivity13 = microflows.ActionActivity.create(model);
	actionActivity13.relativeMiddlePoint = {"x":250,"y":230};
	actionActivity13.size = {"width":130,"height":60};
	actionActivity13.action = createVariableAction2;
	actionActivity13.caption = "Create a variable to check if the column is used?";
	actionActivity13.autoGenerateCaption = false;

	var expressionSplitCondition4 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition4.expression = "$ColumnIter/Status";

	var exclusiveSplit4 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit4.relativeMiddlePoint = {"x":390,"y":100};
	exclusiveSplit4.size = {"width":100,"height":40};
	exclusiveSplit4.splitCondition = expressionSplitCondition4;   // Note: for this property a default value is defined.
	exclusiveSplit4.caption = "column status invalid?";

	var microflowCallParameterMapping10 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping10.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextNL");
	microflowCallParameterMapping10.argument = "'- Kolom: ' + $ColumnIter/ColNumber + ' is niet geldig'";

	var microflowCallParameterMapping11 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping11.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextEN");
	microflowCallParameterMapping11.argument = "'- Column: ' + $ColumnIter/ColNumber + ' is invalid'";

	var microflowCallParameterMapping12 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping12.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.CurLanguage");
	microflowCallParameterMapping12.argument = "$UserLanguage";

	var microflowCall4 = microflows.MicroflowCall.create(model);
	microflowCall4.microflow = model.findMicroflowByQualifiedName("ExcelImporter.GetCorrectString");
	microflowCall4.parameterMappings.push(microflowCallParameterMapping10);
	microflowCall4.parameterMappings.push(microflowCallParameterMapping11);
	microflowCall4.parameterMappings.push(microflowCallParameterMapping12);

	var microflowCallAction4 = microflows.MicroflowCallAction.create(model);
	microflowCallAction4.microflowCall = microflowCall4;   // Note: for this property a default value is defined.
	microflowCallAction4.outputVariableName = "OutputWarning_Col";

	var actionActivity14 = microflows.ActionActivity.create(model);
	actionActivity14.relativeMiddlePoint = {"x":390,"y":170};
	actionActivity14.size = {"width":150,"height":40};
	actionActivity14.action = microflowCallAction4;
	actionActivity14.caption = "Get the warning in the correct language";
	actionActivity14.autoGenerateCaption = false;

	var changeVariableAction4 = microflows.ChangeVariableAction.create(model);
	changeVariableAction4.changeVariableName = "WarningString";
	changeVariableAction4.value = "$WarningString + '\n' + $OutputWarning_Col";

	var actionActivity15 = microflows.ActionActivity.create(model);
	actionActivity15.relativeMiddlePoint = {"x":545,"y":170};
	actionActivity15.size = {"width":120,"height":50};
	actionActivity15.action = changeVariableAction4;
	actionActivity15.caption = "Add the output to the warning";
	actionActivity15.autoGenerateCaption = false;

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.refreshInClient = true;
	changeObjectAction1.commit = microflows.CommitEnum.YesWithoutEvents;
	changeObjectAction1.changeVariableName = "ColumnIter";

	var actionActivity16 = microflows.ActionActivity.create(model);
	actionActivity16.relativeMiddlePoint = {"x":255,"y":100};
	actionActivity16.size = {"width":120,"height":60};
	actionActivity16.action = changeObjectAction1;
	actionActivity16.caption = "Commit the column without events";
	actionActivity16.autoGenerateCaption = false;

	var microflowCallParameterMapping13 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping13.__parameter.updateWithRawValue("ExcelImporter.SetColumnStatus.Column");
	microflowCallParameterMapping13.argument = "$ColumnIter";

	var microflowCallParameterMapping14 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping14.__parameter.updateWithRawValue("ExcelImporter.SetColumnStatus.Template");
	microflowCallParameterMapping14.argument = "$Template";

	var microflowCall5 = microflows.MicroflowCall.create(model);
	microflowCall5.microflow = model.findMicroflowByQualifiedName("ExcelImporter.SetColumnStatus");
	microflowCall5.parameterMappings.push(microflowCallParameterMapping13);
	microflowCall5.parameterMappings.push(microflowCallParameterMapping14);

	var microflowCallAction5 = microflows.MicroflowCallAction.create(model);
	microflowCallAction5.microflowCall = microflowCall5;   // Note: for this property a default value is defined.
	microflowCallAction5.outputVariableName = "Variable";

	var actionActivity17 = microflows.ActionActivity.create(model);
	actionActivity17.relativeMiddlePoint = {"x":125,"y":100};
	actionActivity17.size = {"width":110,"height":60};
	actionActivity17.action = microflowCallAction5;
	actionActivity17.caption = "Validate and set column status";
	actionActivity17.autoGenerateCaption = false;

	var exclusiveMerge3 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge3.relativeMiddlePoint = {"x":475,"y":25};
	exclusiveMerge3.size = {"width":30,"height":20};

	var changeVariableAction5 = microflows.ChangeVariableAction.create(model);
	changeVariableAction5.changeVariableName = "AnyColumnUsed";
	changeVariableAction5.value = "true";

	var actionActivity18 = microflows.ActionActivity.create(model);
	actionActivity18.relativeMiddlePoint = {"x":545,"y":100};
	actionActivity18.size = {"width":100,"height":60};
	actionActivity18.action = changeVariableAction5;
	actionActivity18.caption = "Update the is used boolean";
	actionActivity18.autoGenerateCaption = false;

	var continueEvent1 = microflows.ContinueEvent.create(model);
	continueEvent1.relativeMiddlePoint = {"x":545,"y":25};
	continueEvent1.size = {"width":20,"height":20};

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(exclusiveSplit4);
	microflowObjectCollection1.objects.push(actionActivity14);
	microflowObjectCollection1.objects.push(actionActivity15);
	microflowObjectCollection1.objects.push(actionActivity16);
	microflowObjectCollection1.objects.push(actionActivity17);
	microflowObjectCollection1.objects.push(exclusiveMerge3);
	microflowObjectCollection1.objects.push(actionActivity18);
	microflowObjectCollection1.objects.push(continueEvent1);

	var iterableList1 = microflows.IterableList.create(model);
	iterableList1.listVariableName = "Columns";
	iterableList1.variableName = "ColumnIter";

	var loopedActivity1 = microflows.LoopedActivity.create(model);
	loopedActivity1.relativeMiddlePoint = {"x":645,"y":230};
	loopedActivity1.size = {"width":610,"height":210};
	loopedActivity1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	loopedActivity1.loopSource = iterableList1;   // Note: for this property a default value is defined.

	var expressionSplitCondition5 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition5.expression = "$AnyColumnUsed";

	var exclusiveSplit5 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit5.relativeMiddlePoint = {"x":2035,"y":290};
	exclusiveSplit5.size = {"width":80,"height":50};
	exclusiveSplit5.splitCondition = expressionSplitCondition5;   // Note: for this property a default value is defined.
	exclusiveSplit5.caption = "Any column used?";

	var constantRange3 = microflows.ConstantRange.create(model);

	var sortItemList3 = microflows.SortItemList.create(model);

	var databaseRetrieveSource3 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource3.entity = model.findEntityByQualifiedName("ExcelImporter.ReferenceHandling");
	databaseRetrieveSource3.range = constantRange3;   // Note: for this property a default value is defined.
	databaseRetrieveSource3.xPathConstraint = "[ExcelImporter.ReferenceHandling_Template = $Template]";
	databaseRetrieveSource3.sortItemList = sortItemList3;   // Note: for this property a default value is defined.

	var retrieveAction4 = microflows.RetrieveAction.create(model);
	retrieveAction4.retrieveSource = databaseRetrieveSource3;   // Note: for this property a default value is defined.
	retrieveAction4.outputVariableName = "AllReferences";

	var actionActivity19 = microflows.ActionActivity.create(model);
	actionActivity19.relativeMiddlePoint = {"x":2155,"y":290};
	actionActivity19.size = {"width":100,"height":60};
	actionActivity19.action = retrieveAction4;
	actionActivity19.caption = "Get all references";
	actionActivity19.autoGenerateCaption = false;

	var microflowCallParameterMapping15 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping15.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextNL");
	microflowCallParameterMapping15.argument = "'- Als de import actie is ingesteld om alleen niet bestaande objecten toe te voegen dan moet er tenminste 1 kolom zijn ingesteld als zoeksleutel'";

	var microflowCallParameterMapping16 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping16.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextEN");
	microflowCallParameterMapping16.argument = "'- When only new objects should be created at least one colum must be defined as key'\n";

	var microflowCallParameterMapping17 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping17.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.CurLanguage");
	microflowCallParameterMapping17.argument = "$UserLanguage";

	var microflowCall6 = microflows.MicroflowCall.create(model);
	microflowCall6.microflow = model.findMicroflowByQualifiedName("ExcelImporter.GetCorrectString");
	microflowCall6.parameterMappings.push(microflowCallParameterMapping15);
	microflowCall6.parameterMappings.push(microflowCallParameterMapping16);
	microflowCall6.parameterMappings.push(microflowCallParameterMapping17);

	var microflowCallAction6 = microflows.MicroflowCallAction.create(model);
	microflowCallAction6.microflowCall = microflowCall6;   // Note: for this property a default value is defined.
	microflowCallAction6.outputVariableName = "OutputWarning_NoKeyFound_1";

	var actionActivity20 = microflows.ActionActivity.create(model);
	actionActivity20.relativeMiddlePoint = {"x":1660,"y":480};
	actionActivity20.size = {"width":150,"height":40};
	actionActivity20.action = microflowCallAction6;
	actionActivity20.caption = "Get the warning in the correct language";
	actionActivity20.autoGenerateCaption = false;

	var changeVariableAction6 = microflows.ChangeVariableAction.create(model);
	changeVariableAction6.changeVariableName = "WarningString";
	changeVariableAction6.value = "$WarningString + '\n' + $OutputWarning_NoKeyFound_1";

	var actionActivity21 = microflows.ActionActivity.create(model);
	actionActivity21.relativeMiddlePoint = {"x":1830,"y":480};
	actionActivity21.size = {"width":120,"height":40};
	actionActivity21.action = changeVariableAction6;
	actionActivity21.caption = "Add the output to the warning";
	actionActivity21.autoGenerateCaption = false;

	var expressionSplitCondition6 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition6.expression = "$Count > 0 or not( $AnyColumnUsed ) ";

	var exclusiveSplit6 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit6.relativeMiddlePoint = {"x":1485,"y":480};
	exclusiveSplit6.size = {"width":90,"height":70};
	exclusiveSplit6.splitCondition = expressionSplitCondition6;   // Note: for this property a default value is defined.
	exclusiveSplit6.caption = "key columns > 0";

	var expressionSplitCondition7 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition7.expression = "trim( $WarningString ) != ''";

	var exclusiveSplit7 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit7.relativeMiddlePoint = {"x":3345,"y":290};
	exclusiveSplit7.size = {"width":90,"height":60};
	exclusiveSplit7.splitCondition = expressionSplitCondition7;   // Note: for this property a default value is defined.
	exclusiveSplit7.caption = "has warning message?";

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":3710,"y":290};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "$IsValid";

	var microflowCallParameterMapping18 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping18.__parameter.updateWithRawValue("ExcelImporter.SF_Template_CheckNrs.Template");
	microflowCallParameterMapping18.argument = "$Template";

	var microflowCallParameterMapping19 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping19.__parameter.updateWithRawValue("ExcelImporter.SF_Template_CheckNrs.ShowWarningPopup");
	microflowCallParameterMapping19.argument = "$ShowWarningPopup";

	var microflowCall7 = microflows.MicroflowCall.create(model);
	microflowCall7.microflow = model.findMicroflowByQualifiedName("ExcelImporter.SF_Template_CheckNrs");
	microflowCall7.parameterMappings.push(microflowCallParameterMapping18);
	microflowCall7.parameterMappings.push(microflowCallParameterMapping19);

	var microflowCallAction7 = microflows.MicroflowCallAction.create(model);
	microflowCallAction7.microflowCall = microflowCall7;   // Note: for this property a default value is defined.
	microflowCallAction7.outputVariableName = "IsValid";

	var actionActivity22 = microflows.ActionActivity.create(model);
	actionActivity22.relativeMiddlePoint = {"x":3565,"y":290};
	actionActivity22.size = {"width":120,"height":60};
	actionActivity22.action = microflowCallAction7;

	var exclusiveMerge4 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge4.relativeMiddlePoint = {"x":3345,"y":145};
	exclusiveMerge4.size = {"width":60,"height":40};

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":3960,"y":145};
	endEvent2.size = {"width":20,"height":20};
	endEvent2.returnValue = "$IsValid_2 and false";

	var microflowCallParameterMapping20 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping20.__parameter.updateWithRawValue("ExcelImporter.SF_Template_CheckNrs.Template");
	microflowCallParameterMapping20.argument = "$Template";

	var microflowCallParameterMapping21 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping21.__parameter.updateWithRawValue("ExcelImporter.SF_Template_CheckNrs.ShowWarningPopup");
	microflowCallParameterMapping21.argument = "$ShowWarningPopup";

	var microflowCall8 = microflows.MicroflowCall.create(model);
	microflowCall8.microflow = model.findMicroflowByQualifiedName("ExcelImporter.SF_Template_CheckNrs");
	microflowCall8.parameterMappings.push(microflowCallParameterMapping20);
	microflowCall8.parameterMappings.push(microflowCallParameterMapping21);

	var microflowCallAction8 = microflows.MicroflowCallAction.create(model);
	microflowCallAction8.microflowCall = microflowCall8;   // Note: for this property a default value is defined.
	microflowCallAction8.outputVariableName = "IsValid_2";

	var actionActivity23 = microflows.ActionActivity.create(model);
	actionActivity23.relativeMiddlePoint = {"x":3815,"y":145};
	actionActivity23.size = {"width":120,"height":60};
	actionActivity23.action = microflowCallAction8;

	var exclusiveMerge5 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge5.relativeMiddlePoint = {"x":3230,"y":290};
	exclusiveMerge5.size = {"width":60,"height":40};

	var microflowCallParameterMapping22 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping22.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextNL");
	microflowCallParameterMapping22.argument = "'- Er is geen sleutel gedefinieerd voor de referentie: ' + $MxReference/CompleteName + ' er moet tenminste 1 sleutel gedefinieerd zijn'";

	var microflowCallParameterMapping23 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping23.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextEN");
	microflowCallParameterMapping23.argument = "'- There is not key column definied for reference: ' + $MxReference/CompleteName + ' at least one colum must be defined as key'";

	var microflowCallParameterMapping24 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping24.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.CurLanguage");
	microflowCallParameterMapping24.argument = "$UserLanguage";

	var microflowCall9 = microflows.MicroflowCall.create(model);
	microflowCall9.microflow = model.findMicroflowByQualifiedName("ExcelImporter.GetCorrectString");
	microflowCall9.parameterMappings.push(microflowCallParameterMapping22);
	microflowCall9.parameterMappings.push(microflowCallParameterMapping23);
	microflowCall9.parameterMappings.push(microflowCallParameterMapping24);

	var microflowCallAction9 = microflows.MicroflowCallAction.create(model);
	microflowCallAction9.microflowCall = microflowCall9;   // Note: for this property a default value is defined.
	microflowCallAction9.outputVariableName = "OutputWarning_NoRefKey";

	var actionActivity24 = microflows.ActionActivity.create(model);
	actionActivity24.relativeMiddlePoint = {"x":690,"y":25};
	actionActivity24.size = {"width":150,"height":40};
	actionActivity24.action = microflowCallAction9;
	actionActivity24.caption = "Get the warning in the correct language";
	actionActivity24.autoGenerateCaption = false;

	var changeVariableAction7 = microflows.ChangeVariableAction.create(model);
	changeVariableAction7.changeVariableName = "WarningString";
	changeVariableAction7.value = "$WarningString + '\n' + $OutputWarning_NoRefKey";

	var actionActivity25 = microflows.ActionActivity.create(model);
	actionActivity25.relativeMiddlePoint = {"x":690,"y":120};
	actionActivity25.size = {"width":120,"height":40};
	actionActivity25.action = changeVariableAction7;
	actionActivity25.caption = "Add the output to the warning";
	actionActivity25.autoGenerateCaption = false;

	var expressionSplitCondition8 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition8.expression = "$Count_1 > 0";

	var exclusiveSplit8 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit8.relativeMiddlePoint = {"x":585,"y":115};
	exclusiveSplit8.size = {"width":60,"height":40};
	exclusiveSplit8.splitCondition = expressionSplitCondition8;   // Note: for this property a default value is defined.
	exclusiveSplit8.caption = " > 0";

	var continueEvent2 = microflows.ContinueEvent.create(model);
	continueEvent2.relativeMiddlePoint = {"x":585,"y":185};
	continueEvent2.size = {"width":20,"height":20};

	var microflowCallParameterMapping25 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping25.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextNL");
	microflowCallParameterMapping25.argument = "'- Er is geen sleutel gedefinieerd voor de referentie: ' + $MxReference/CompleteName + ' dit is niet toegestaan omdat alle objecten aangemaakt moeten worden'";

	var microflowCallParameterMapping26 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping26.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextEN");
	microflowCallParameterMapping26.argument = "'- There is a  key column definied for reference: ' + $MxReference/CompleteName + ' this isn''t allowed because the handling is set to create everything'";

	var microflowCallParameterMapping27 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping27.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.CurLanguage");
	microflowCallParameterMapping27.argument = "$UserLanguage";

	var microflowCall10 = microflows.MicroflowCall.create(model);
	microflowCall10.microflow = model.findMicroflowByQualifiedName("ExcelImporter.GetCorrectString");
	microflowCall10.parameterMappings.push(microflowCallParameterMapping25);
	microflowCall10.parameterMappings.push(microflowCallParameterMapping26);
	microflowCall10.parameterMappings.push(microflowCallParameterMapping27);

	var microflowCallAction10 = microflows.MicroflowCallAction.create(model);
	microflowCallAction10.microflowCall = microflowCall10;   // Note: for this property a default value is defined.
	microflowCallAction10.outputVariableName = "OutputWarning_HasRefKey";

	var actionActivity26 = microflows.ActionActivity.create(model);
	actionActivity26.relativeMiddlePoint = {"x":490,"y":30};
	actionActivity26.size = {"width":150,"height":40};
	actionActivity26.action = microflowCallAction10;
	actionActivity26.caption = "Get the warning in the correct language";
	actionActivity26.autoGenerateCaption = false;

	var changeVariableAction8 = microflows.ChangeVariableAction.create(model);
	changeVariableAction8.changeVariableName = "WarningString";
	changeVariableAction8.value = "$WarningString + '\n' + $OutputWarning_HasRefKey";

	var actionActivity27 = microflows.ActionActivity.create(model);
	actionActivity27.relativeMiddlePoint = {"x":490,"y":90};
	actionActivity27.size = {"width":120,"height":40};
	actionActivity27.action = changeVariableAction8;
	actionActivity27.caption = "Add the output to the warning";
	actionActivity27.autoGenerateCaption = false;

	var expressionSplitCondition9 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition9.expression = "$Reference/Handling = ExcelImporter.ReferenceHandlingEnum.CreateEverything";

	var exclusiveSplit9 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit9.relativeMiddlePoint = {"x":345,"y":115};
	exclusiveSplit9.size = {"width":80,"height":60};
	exclusiveSplit9.splitCondition = expressionSplitCondition9;   // Note: for this property a default value is defined.
	exclusiveSplit9.caption = "Create everything?";

	var expressionSplitCondition10 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition10.expression = "$Count_1 > 0";

	var exclusiveSplit10 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit10.relativeMiddlePoint = {"x":345,"y":30};
	exclusiveSplit10.size = {"width":60,"height":40};
	exclusiveSplit10.splitCondition = expressionSplitCondition10;   // Note: for this property a default value is defined.
	exclusiveSplit10.caption = " > 0";

	var continueEvent3 = microflows.ContinueEvent.create(model);
	continueEvent3.relativeMiddlePoint = {"x":215,"y":30};
	continueEvent3.size = {"width":20,"height":20};

	var constantRange4 = microflows.ConstantRange.create(model);

	var sortItemList4 = microflows.SortItemList.create(model);

	var databaseRetrieveSource4 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource4.entity = model.findEntityByQualifiedName("ExcelImporter.Column");
	databaseRetrieveSource4.range = constantRange4;   // Note: for this property a default value is defined.
	databaseRetrieveSource4.xPathConstraint = "[ExcelImporter.Column_Template=$Template]\n[ExcelImporter.Column_MxObjectReference/MxModelReflection.MxObjectReference/ExcelImporter.ReferenceHandling_MxObjectReference=$Reference]\n[ (MappingType='Reference' and \n(IsReferenceKey='YesOnlyAssociatedObject' or IsReferenceKey = 'YesMainAndAssociatedObject'))\n]";
	databaseRetrieveSource4.sortItemList = sortItemList4;   // Note: for this property a default value is defined.

	var retrieveAction5 = microflows.RetrieveAction.create(model);
	retrieveAction5.retrieveSource = databaseRetrieveSource4;   // Note: for this property a default value is defined.
	retrieveAction5.outputVariableName = "KeyColumnsForReference";

	var actionActivity28 = microflows.ActionActivity.create(model);
	actionActivity28.relativeMiddlePoint = {"x":75,"y":140};
	actionActivity28.size = {"width":110,"height":60};
	actionActivity28.action = retrieveAction5;
	actionActivity28.caption = "Get all key colums for the reference";
	actionActivity28.autoGenerateCaption = false;

	var aggregateListAction2 = microflows.AggregateListAction.create(model);
	aggregateListAction2.inputListVariableName = "KeyColumnsForReference";
	aggregateListAction2.outputVariableName = "Count_1";

	var actionActivity29 = microflows.ActionActivity.create(model);
	actionActivity29.relativeMiddlePoint = {"x":175,"y":140};
	actionActivity29.size = {"width":70,"height":30};
	actionActivity29.action = aggregateListAction2;
	actionActivity29.caption = "count";
	actionActivity29.autoGenerateCaption = false;

	var associationRetrieveSource2 = microflows.AssociationRetrieveSource.create(model);
	associationRetrieveSource2.startVariableName = "Reference";
	associationRetrieveSource2.association = model.findAssociationBaseByQualifiedName("ExcelImporter.ReferenceHandling_MxObjectReference");

	var retrieveAction6 = microflows.RetrieveAction.create(model);
	retrieveAction6.retrieveSource = associationRetrieveSource2;   // Note: for this property a default value is defined.
	retrieveAction6.outputVariableName = "MxReference";

	var actionActivity30 = microflows.ActionActivity.create(model);
	actionActivity30.relativeMiddlePoint = {"x":175,"y":65};
	actionActivity30.size = {"width":140,"height":50};
	actionActivity30.action = retrieveAction6;
	actionActivity30.caption = "Get the selected mxreference";
	actionActivity30.autoGenerateCaption = false;

	var microflowObjectCollection2 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection2.objects.push(actionActivity24);
	microflowObjectCollection2.objects.push(actionActivity25);
	microflowObjectCollection2.objects.push(exclusiveSplit8);
	microflowObjectCollection2.objects.push(continueEvent2);
	microflowObjectCollection2.objects.push(actionActivity26);
	microflowObjectCollection2.objects.push(actionActivity27);
	microflowObjectCollection2.objects.push(exclusiveSplit9);
	microflowObjectCollection2.objects.push(exclusiveSplit10);
	microflowObjectCollection2.objects.push(continueEvent3);
	microflowObjectCollection2.objects.push(actionActivity28);
	microflowObjectCollection2.objects.push(actionActivity29);
	microflowObjectCollection2.objects.push(actionActivity30);

	var iterableList2 = microflows.IterableList.create(model);
	iterableList2.listVariableName = "AllReferences";
	iterableList2.variableName = "Reference";

	var loopedActivity2 = microflows.LoopedActivity.create(model);
	loopedActivity2.relativeMiddlePoint = {"x":2610,"y":290};
	loopedActivity2.size = {"width":770,"height":200};
	loopedActivity2.objectCollection = microflowObjectCollection2;   // Note: for this property a default value is defined.
	loopedActivity2.loopSource = iterableList2;   // Note: for this property a default value is defined.

	var microflowCallParameterMapping28 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping28.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextNL");
	microflowCallParameterMapping28.argument = "'- Er is geen objecttype ingesteld voor de template'";

	var microflowCallParameterMapping29 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping29.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextEN");
	microflowCallParameterMapping29.argument = "'- No objecttype is selected for the template'\n";

	var microflowCallParameterMapping30 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping30.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.CurLanguage");
	microflowCallParameterMapping30.argument = "$UserLanguage";

	var microflowCall11 = microflows.MicroflowCall.create(model);
	microflowCall11.microflow = model.findMicroflowByQualifiedName("ExcelImporter.GetCorrectString");
	microflowCall11.parameterMappings.push(microflowCallParameterMapping28);
	microflowCall11.parameterMappings.push(microflowCallParameterMapping29);
	microflowCall11.parameterMappings.push(microflowCallParameterMapping30);

	var microflowCallAction11 = microflows.MicroflowCallAction.create(model);
	microflowCallAction11.microflowCall = microflowCall11;   // Note: for this property a default value is defined.
	microflowCallAction11.outputVariableName = "OutputWarning_NoTemplateObjectType";

	var actionActivity31 = microflows.ActionActivity.create(model);
	actionActivity31.relativeMiddlePoint = {"x":-850,"y":340};
	actionActivity31.size = {"width":150,"height":40};
	actionActivity31.action = microflowCallAction11;
	actionActivity31.caption = "Get the warning in the correct language";
	actionActivity31.autoGenerateCaption = false;

	var expressionSplitCondition11 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition11.expression = "$Template/ExcelImporter.Template_MxObjectType != empty";

	var exclusiveSplit11 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit11.relativeMiddlePoint = {"x":-850,"y":230};
	exclusiveSplit11.size = {"width":90,"height":70};
	exclusiveSplit11.splitCondition = expressionSplitCondition11;   // Note: for this property a default value is defined.
	exclusiveSplit11.caption = "Has object type";

	var booleanType2 = datatypes.BooleanType.create(model);

	var showWarningPopup1 = microflows.MicroflowParameterObject.create(model);
	showWarningPopup1.relativeMiddlePoint = {"x":-1300,"y":55};
	showWarningPopup1.size = {"width":30,"height":30};
	showWarningPopup1.name = "ShowWarningPopup";
	showWarningPopup1.variableType = booleanType2;   // Note: for this property a default value is defined.

	var expressionSplitCondition12 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition12.expression = "$ShowWarningPopup";

	var exclusiveSplit12 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit12.relativeMiddlePoint = {"x":3480,"y":145};
	exclusiveSplit12.size = {"width":60,"height":40};
	exclusiveSplit12.splitCondition = expressionSplitCondition12;   // Note: for this property a default value is defined.
	exclusiveSplit12.caption = "Show messages";

	var templateArgument1 = microflows.TemplateArgument.create(model);
	templateArgument1.expression = "trim( $WarningString )";

	var translation5 = texts.Translation.create(model);
	translation5.languageCode = "en_US";
	translation5.text = "The template is not valid because of the following reason(s):\r\n{1}";

	var translation6 = texts.Translation.create(model);
	translation6.languageCode = "nl_NL";
	translation6.text = "De template is niet geldig om de volgende reden(en):\r\n{1}";

	var translation7 = texts.Translation.create(model);
	translation7.languageCode = "en_GB";
	translation7.text = "The template is not valid because of the following reason(s):\r\n{1}";

	var translation8 = texts.Translation.create(model);
	translation8.languageCode = "en_ZA";
	translation8.text = "The template is not valid because of the following reason(s):\r\n{1}";

	var text2 = texts.Text.create(model);
	text2.translations.push(translation5);
	text2.translations.push(translation6);
	text2.translations.push(translation7);
	text2.translations.push(translation8);

	var textTemplate2 = microflows.TextTemplate.create(model);
	textTemplate2.arguments.push(templateArgument1);
	textTemplate2.text = text2;   // Note: for this property a default value is defined.

	var showMessageAction1 = microflows.ShowMessageAction.create(model);
	showMessageAction1.template = textTemplate2;   // Note: for this property a default value is defined.
	showMessageAction1.type = microflows.ShowMessageType.Warning;

	var actionActivity32 = microflows.ActionActivity.create(model);
	actionActivity32.relativeMiddlePoint = {"x":3585,"y":65};
	actionActivity32.size = {"width":130,"height":60};
	actionActivity32.action = showMessageAction1;
	actionActivity32.caption = "Show a warning message";
	actionActivity32.autoGenerateCaption = false;

	var exclusiveMerge6 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge6.relativeMiddlePoint = {"x":3585,"y":145};
	exclusiveMerge6.size = {"width":20,"height":20};

	var changeVariableAction9 = microflows.ChangeVariableAction.create(model);
	changeVariableAction9.changeVariableName = "WarningString";
	changeVariableAction9.value = "$WarningString + '\n' + $OutputWarning_NoTemplateObjectType";

	var actionActivity33 = microflows.ActionActivity.create(model);
	actionActivity33.relativeMiddlePoint = {"x":-850,"y":420};
	actionActivity33.size = {"width":120,"height":40};
	actionActivity33.action = changeVariableAction9;
	actionActivity33.caption = "Add the output to the warning";
	actionActivity33.autoGenerateCaption = false;

	var exclusiveMerge7 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge7.relativeMiddlePoint = {"x":-725,"y":230};
	exclusiveMerge7.size = {"width":20,"height":20};

	var microflowCallParameterMapping31 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping31.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextNL");
	microflowCallParameterMapping31.argument = "'- Als je een verdwijder actie insteld is het vereist om ongewijzigde objecten te committen'";

	var microflowCallParameterMapping32 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping32.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextEN");
	microflowCallParameterMapping32.argument = "'- When you choose a remove indicator you must also commit unchanged objects'\n";

	var microflowCallParameterMapping33 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping33.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.CurLanguage");
	microflowCallParameterMapping33.argument = "$UserLanguage";

	var microflowCall12 = microflows.MicroflowCall.create(model);
	microflowCall12.microflow = model.findMicroflowByQualifiedName("ExcelImporter.GetCorrectString");
	microflowCall12.parameterMappings.push(microflowCallParameterMapping31);
	microflowCall12.parameterMappings.push(microflowCallParameterMapping32);
	microflowCall12.parameterMappings.push(microflowCallParameterMapping33);

	var microflowCallAction12 = microflows.MicroflowCallAction.create(model);
	microflowCallAction12.microflowCall = microflowCall12;   // Note: for this property a default value is defined.
	microflowCallAction12.outputVariableName = "OutputWarning_CommitUnchObjs";

	var actionActivity34 = microflows.ActionActivity.create(model);
	actionActivity34.relativeMiddlePoint = {"x":-425,"y":470};
	actionActivity34.size = {"width":150,"height":40};
	actionActivity34.action = microflowCallAction12;
	actionActivity34.caption = "Get the warning in the correct language";
	actionActivity34.autoGenerateCaption = false;

	var expressionSplitCondition13 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition13.expression = "$AddProperties/RemoveUnsyncedObjects != empty\nand\n$AddProperties/RemoveUnsyncedObjects != ExcelImporter.RemoveIndicator.Nothing";

	var exclusiveSplit13 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit13.relativeMiddlePoint = {"x":-425,"y":230};
	exclusiveSplit13.size = {"width":90,"height":70};
	exclusiveSplit13.splitCondition = expressionSplitCondition13;   // Note: for this property a default value is defined.
	exclusiveSplit13.caption = "Has Remove Indicator?";

	var changeVariableAction10 = microflows.ChangeVariableAction.create(model);
	changeVariableAction10.changeVariableName = "WarningString";
	changeVariableAction10.value = "$WarningString + '\n' + $OutputWarning_CommitUnchObjs";

	var actionActivity35 = microflows.ActionActivity.create(model);
	actionActivity35.relativeMiddlePoint = {"x":-425,"y":550};
	actionActivity35.size = {"width":120,"height":40};
	actionActivity35.action = changeVariableAction10;
	actionActivity35.caption = "Add the output to the warning";
	actionActivity35.autoGenerateCaption = false;

	var exclusiveMerge8 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge8.relativeMiddlePoint = {"x":-90,"y":230};
	exclusiveMerge8.size = {"width":20,"height":20};

	var expressionSplitCondition14 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition14.expression = "$AddProperties/CommitUnchangedObjects_MainObject = true";

	var exclusiveSplit14 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit14.relativeMiddlePoint = {"x":-425,"y":360};
	exclusiveSplit14.size = {"width":90,"height":70};
	exclusiveSplit14.splitCondition = expressionSplitCondition14;   // Note: for this property a default value is defined.
	exclusiveSplit14.caption = "Commit Unchanged Objects?";

	var microflowCallParameterMapping34 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping34.__parameter.updateWithRawValue("ExcelImporter.GetAddProperties.Template");
	microflowCallParameterMapping34.argument = "$Template";

	var microflowCall13 = microflows.MicroflowCall.create(model);
	microflowCall13.microflow = model.findMicroflowByQualifiedName("ExcelImporter.GetAddProperties");
	microflowCall13.parameterMappings.push(microflowCallParameterMapping34);

	var microflowCallAction13 = microflows.MicroflowCallAction.create(model);
	microflowCallAction13.microflowCall = microflowCall13;   // Note: for this property a default value is defined.
	microflowCallAction13.outputVariableName = "AddProperties";

	var actionActivity36 = microflows.ActionActivity.create(model);
	actionActivity36.relativeMiddlePoint = {"x":-570,"y":230};
	actionActivity36.size = {"width":140,"height":60};
	actionActivity36.action = microflowCallAction13;

	var exclusiveMerge9 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge9.relativeMiddlePoint = {"x":-305,"y":360};
	exclusiveMerge9.size = {"width":20,"height":20};

	var changeVariableAction11 = microflows.ChangeVariableAction.create(model);
	changeVariableAction11.changeVariableName = "WarningString";
	changeVariableAction11.value = "$WarningString + '\n' + $OutputWarning_Indicator";

	var actionActivity37 = microflows.ActionActivity.create(model);
	actionActivity37.relativeMiddlePoint = {"x":-210,"y":550};
	actionActivity37.size = {"width":120,"height":40};
	actionActivity37.action = changeVariableAction11;
	actionActivity37.caption = "Add the output to the warning";
	actionActivity37.autoGenerateCaption = false;

	var expressionSplitCondition15 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition15.expression = "$AddProperties/ExcelImporter.AdditionalProperties_MxObjectMember_RemoveIndicator != empty";

	var exclusiveSplit15 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit15.relativeMiddlePoint = {"x":-210,"y":360};
	exclusiveSplit15.size = {"width":90,"height":70};
	exclusiveSplit15.splitCondition = expressionSplitCondition15;   // Note: for this property a default value is defined.
	exclusiveSplit15.caption = "Remove indicator selected?";

	var exclusiveMerge10 = microflows.ExclusiveMerge.create(model);
	exclusiveMerge10.relativeMiddlePoint = {"x":-90,"y":360};
	exclusiveMerge10.size = {"width":20,"height":20};

	var microflowCallParameterMapping35 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping35.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextNL");
	microflowCallParameterMapping35.argument = "'- Als je een verdwijder actie insteld moet er ook een indicator attribute geselecteerd worden van het type: Integer of Long'";

	var microflowCallParameterMapping36 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping36.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.TextEN");
	microflowCallParameterMapping36.argument = "'- When you choose a remove indicator you must also select an indicator attribute of the type: Integer or Long'\n";

	var microflowCallParameterMapping37 = microflows.MicroflowCallParameterMapping.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	microflowCallParameterMapping37.__parameter.updateWithRawValue("ExcelImporter.GetCorrectString.CurLanguage");
	microflowCallParameterMapping37.argument = "$UserLanguage";

	var microflowCall14 = microflows.MicroflowCall.create(model);
	microflowCall14.microflow = model.findMicroflowByQualifiedName("ExcelImporter.GetCorrectString");
	microflowCall14.parameterMappings.push(microflowCallParameterMapping35);
	microflowCall14.parameterMappings.push(microflowCallParameterMapping36);
	microflowCall14.parameterMappings.push(microflowCallParameterMapping37);

	var microflowCallAction14 = microflows.MicroflowCallAction.create(model);
	microflowCallAction14.microflowCall = microflowCall14;   // Note: for this property a default value is defined.
	microflowCallAction14.outputVariableName = "OutputWarning_Indicator";

	var actionActivity38 = microflows.ActionActivity.create(model);
	actionActivity38.relativeMiddlePoint = {"x":-210,"y":470};
	actionActivity38.size = {"width":150,"height":40};
	actionActivity38.action = microflowCallAction14;
	actionActivity38.caption = "Get the warning in the correct language";
	actionActivity38.autoGenerateCaption = false;

	var microflowObjectCollection3 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection3.objects.push(actionActivity1);
	microflowObjectCollection3.objects.push(actionActivity2);
	microflowObjectCollection3.objects.push(exclusiveSplit1);
	microflowObjectCollection3.objects.push(actionActivity3);
	microflowObjectCollection3.objects.push(exclusiveMerge1);
	microflowObjectCollection3.objects.push(actionActivity4);
	microflowObjectCollection3.objects.push(actionActivity5);
	microflowObjectCollection3.objects.push(actionActivity6);
	microflowObjectCollection3.objects.push(actionActivity7);
	microflowObjectCollection3.objects.push(exclusiveMerge2);
	microflowObjectCollection3.objects.push(actionActivity8);
	microflowObjectCollection3.objects.push(actionActivity9);
	microflowObjectCollection3.objects.push(exclusiveSplit2);
	microflowObjectCollection3.objects.push(exclusiveSplit3);
	microflowObjectCollection3.objects.push(actionActivity10);
	microflowObjectCollection3.objects.push(startEvent1);
	microflowObjectCollection3.objects.push(template1);
	microflowObjectCollection3.objects.push(actionActivity11);
	microflowObjectCollection3.objects.push(actionActivity12);
	microflowObjectCollection3.objects.push(actionActivity13);
	microflowObjectCollection3.objects.push(loopedActivity1);
	microflowObjectCollection3.objects.push(exclusiveSplit5);
	microflowObjectCollection3.objects.push(actionActivity19);
	microflowObjectCollection3.objects.push(actionActivity20);
	microflowObjectCollection3.objects.push(actionActivity21);
	microflowObjectCollection3.objects.push(exclusiveSplit6);
	microflowObjectCollection3.objects.push(exclusiveSplit7);
	microflowObjectCollection3.objects.push(endEvent1);
	microflowObjectCollection3.objects.push(actionActivity22);
	microflowObjectCollection3.objects.push(exclusiveMerge4);
	microflowObjectCollection3.objects.push(endEvent2);
	microflowObjectCollection3.objects.push(actionActivity23);
	microflowObjectCollection3.objects.push(exclusiveMerge5);
	microflowObjectCollection3.objects.push(loopedActivity2);
	microflowObjectCollection3.objects.push(actionActivity31);
	microflowObjectCollection3.objects.push(exclusiveSplit11);
	microflowObjectCollection3.objects.push(showWarningPopup1);
	microflowObjectCollection3.objects.push(exclusiveSplit12);
	microflowObjectCollection3.objects.push(actionActivity32);
	microflowObjectCollection3.objects.push(exclusiveMerge6);
	microflowObjectCollection3.objects.push(actionActivity33);
	microflowObjectCollection3.objects.push(exclusiveMerge7);
	microflowObjectCollection3.objects.push(actionActivity34);
	microflowObjectCollection3.objects.push(exclusiveSplit13);
	microflowObjectCollection3.objects.push(actionActivity35);
	microflowObjectCollection3.objects.push(exclusiveMerge8);
	microflowObjectCollection3.objects.push(exclusiveSplit14);
	microflowObjectCollection3.objects.push(actionActivity36);
	microflowObjectCollection3.objects.push(exclusiveMerge9);
	microflowObjectCollection3.objects.push(actionActivity37);
	microflowObjectCollection3.objects.push(exclusiveSplit15);
	microflowObjectCollection3.objects.push(exclusiveMerge10);
	microflowObjectCollection3.objects.push(actionActivity38);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":30,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = noCase3;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":30,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow4.caseValue = noCase4;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "VALID";

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":15,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow5.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "INVALID";

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 2;
	sequenceFlow6.originBezierVector = {"width":0,"height":15};
	sequenceFlow6.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow6.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var enumerationCase3 = microflows.EnumerationCase.create(model);
	enumerationCase3.value = "CreateObjects";

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":15,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow7.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 1;
	sequenceFlow8.destinationConnectionIndex = 3;
	sequenceFlow8.originBezierVector = {"width":15,"height":0};
	sequenceFlow8.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow8.caseValue = noCase5;   // Note: for this property a default value is defined.

	var enumerationCase4 = microflows.EnumerationCase.create(model);
	enumerationCase4.value = "SynchronizeObjects";

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 2;
	sequenceFlow9.destinationConnectionIndex = 3;
	sequenceFlow9.originBezierVector = {"width":0,"height":25};
	sequenceFlow9.destinationBezierVector = {"width":-65,"height":0};
	sequenceFlow9.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

	var enumerationCase5 = microflows.EnumerationCase.create(model);
	enumerationCase5.value = "SynchronizeOnlyExisting";

	var sequenceFlow10 = microflows.SequenceFlow.create(model);
	sequenceFlow10.originConnectionIndex = 2;
	sequenceFlow10.originBezierVector = {"width":85,"height":0};
	sequenceFlow10.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow10.caseValue = enumerationCase5;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow11 = microflows.SequenceFlow.create(model);
	sequenceFlow11.originConnectionIndex = 1;
	sequenceFlow11.destinationConnectionIndex = 3;
	sequenceFlow11.originBezierVector = {"width":30,"height":0};
	sequenceFlow11.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow11.caseValue = noCase6;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow12 = microflows.SequenceFlow.create(model);
	sequenceFlow12.originConnectionIndex = 1;
	sequenceFlow12.destinationConnectionIndex = 3;
	sequenceFlow12.originBezierVector = {"width":30,"height":0};
	sequenceFlow12.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow12.caseValue = noCase7;   // Note: for this property a default value is defined.

	var noCase8 = microflows.NoCase.create(model);

	var sequenceFlow13 = microflows.SequenceFlow.create(model);
	sequenceFlow13.originConnectionIndex = 1;
	sequenceFlow13.destinationConnectionIndex = 3;
	sequenceFlow13.originBezierVector = {"width":30,"height":0};
	sequenceFlow13.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow13.caseValue = noCase8;   // Note: for this property a default value is defined.

	var enumerationCase6 = microflows.EnumerationCase.create(model);
	enumerationCase6.value = "(empty)";

	var sequenceFlow14 = microflows.SequenceFlow.create(model);
	sequenceFlow14.destinationConnectionIndex = 2;
	sequenceFlow14.originBezierVector = {"width":0,"height":-15};
	sequenceFlow14.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow14.caseValue = enumerationCase6;   // Note: for this property a default value is defined.

	var noCase9 = microflows.NoCase.create(model);

	var sequenceFlow15 = microflows.SequenceFlow.create(model);
	sequenceFlow15.originConnectionIndex = 1;
	sequenceFlow15.destinationConnectionIndex = 3;
	sequenceFlow15.originBezierVector = {"width":30,"height":0};
	sequenceFlow15.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow15.caseValue = noCase9;   // Note: for this property a default value is defined.

	var noCase10 = microflows.NoCase.create(model);

	var sequenceFlow16 = microflows.SequenceFlow.create(model);
	sequenceFlow16.originConnectionIndex = 1;
	sequenceFlow16.destinationConnectionIndex = 3;
	sequenceFlow16.originBezierVector = {"width":30,"height":0};
	sequenceFlow16.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow16.caseValue = noCase10;   // Note: for this property a default value is defined.

	var noCase11 = microflows.NoCase.create(model);

	var sequenceFlow17 = microflows.SequenceFlow.create(model);
	sequenceFlow17.originConnectionIndex = 1;
	sequenceFlow17.destinationConnectionIndex = 3;
	sequenceFlow17.originBezierVector = {"width":30,"height":0};
	sequenceFlow17.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow17.caseValue = noCase11;   // Note: for this property a default value is defined.

	var noCase12 = microflows.NoCase.create(model);

	var sequenceFlow18 = microflows.SequenceFlow.create(model);
	sequenceFlow18.originConnectionIndex = 1;
	sequenceFlow18.destinationConnectionIndex = 3;
	sequenceFlow18.originBezierVector = {"width":30,"height":0};
	sequenceFlow18.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow18.caseValue = noCase12;   // Note: for this property a default value is defined.

	var enumerationCase7 = microflows.EnumerationCase.create(model);
	enumerationCase7.value = "true";

	var sequenceFlow19 = microflows.SequenceFlow.create(model);
	sequenceFlow19.originConnectionIndex = 1;
	sequenceFlow19.destinationConnectionIndex = 3;
	sequenceFlow19.originBezierVector = {"width":15,"height":0};
	sequenceFlow19.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow19.caseValue = enumerationCase7;   // Note: for this property a default value is defined.

	var noCase13 = microflows.NoCase.create(model);

	var sequenceFlow20 = microflows.SequenceFlow.create(model);
	sequenceFlow20.originConnectionIndex = 1;
	sequenceFlow20.destinationConnectionIndex = 3;
	sequenceFlow20.originBezierVector = {"width":30,"height":0};
	sequenceFlow20.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow20.caseValue = noCase13;   // Note: for this property a default value is defined.

	var enumerationCase8 = microflows.EnumerationCase.create(model);
	enumerationCase8.value = "false";

	var sequenceFlow21 = microflows.SequenceFlow.create(model);
	sequenceFlow21.originConnectionIndex = 2;
	sequenceFlow21.destinationConnectionIndex = 3;
	sequenceFlow21.originBezierVector = {"width":20,"height":15};
	sequenceFlow21.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow21.caseValue = enumerationCase8;   // Note: for this property a default value is defined.

	var noCase14 = microflows.NoCase.create(model);

	var sequenceFlow22 = microflows.SequenceFlow.create(model);
	sequenceFlow22.originConnectionIndex = 1;
	sequenceFlow22.destinationConnectionIndex = 3;
	sequenceFlow22.originBezierVector = {"width":15,"height":0};
	sequenceFlow22.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow22.caseValue = noCase14;   // Note: for this property a default value is defined.

	var enumerationCase9 = microflows.EnumerationCase.create(model);
	enumerationCase9.value = "true";

	var sequenceFlow23 = microflows.SequenceFlow.create(model);
	sequenceFlow23.destinationConnectionIndex = 3;
	sequenceFlow23.originBezierVector = {"width":25,"height":-10};
	sequenceFlow23.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow23.caseValue = enumerationCase9;   // Note: for this property a default value is defined.

	var enumerationCase10 = microflows.EnumerationCase.create(model);
	enumerationCase10.value = "false";

	var sequenceFlow24 = microflows.SequenceFlow.create(model);
	sequenceFlow24.originConnectionIndex = 1;
	sequenceFlow24.destinationConnectionIndex = 3;
	sequenceFlow24.originBezierVector = {"width":15,"height":0};
	sequenceFlow24.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow24.caseValue = enumerationCase10;   // Note: for this property a default value is defined.

	var noCase15 = microflows.NoCase.create(model);

	var sequenceFlow25 = microflows.SequenceFlow.create(model);
	sequenceFlow25.originConnectionIndex = 2;
	sequenceFlow25.destinationConnectionIndex = 3;
	sequenceFlow25.originBezierVector = {"width":0,"height":30};
	sequenceFlow25.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow25.caseValue = noCase15;   // Note: for this property a default value is defined.

	var noCase16 = microflows.NoCase.create(model);

	var sequenceFlow26 = microflows.SequenceFlow.create(model);
	sequenceFlow26.originConnectionIndex = 1;
	sequenceFlow26.destinationConnectionIndex = 3;
	sequenceFlow26.originBezierVector = {"width":30,"height":0};
	sequenceFlow26.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow26.caseValue = noCase16;   // Note: for this property a default value is defined.

	var noCase17 = microflows.NoCase.create(model);

	var sequenceFlow27 = microflows.SequenceFlow.create(model);
	sequenceFlow27.destinationConnectionIndex = 3;
	sequenceFlow27.originBezierVector = {"width":0,"height":-30};
	sequenceFlow27.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow27.caseValue = noCase17;   // Note: for this property a default value is defined.

	var enumerationCase11 = microflows.EnumerationCase.create(model);
	enumerationCase11.value = "false";

	var sequenceFlow28 = microflows.SequenceFlow.create(model);
	sequenceFlow28.originConnectionIndex = 1;
	sequenceFlow28.destinationConnectionIndex = 3;
	sequenceFlow28.originBezierVector = {"width":15,"height":0};
	sequenceFlow28.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow28.caseValue = enumerationCase11;   // Note: for this property a default value is defined.

	var enumerationCase12 = microflows.EnumerationCase.create(model);
	enumerationCase12.value = "true";

	var sequenceFlow29 = microflows.SequenceFlow.create(model);
	sequenceFlow29.destinationConnectionIndex = 2;
	sequenceFlow29.originBezierVector = {"width":0,"height":-15};
	sequenceFlow29.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow29.caseValue = enumerationCase12;   // Note: for this property a default value is defined.

	var noCase18 = microflows.NoCase.create(model);

	var sequenceFlow30 = microflows.SequenceFlow.create(model);
	sequenceFlow30.originConnectionIndex = 1;
	sequenceFlow30.destinationConnectionIndex = 3;
	sequenceFlow30.originBezierVector = {"width":15,"height":0};
	sequenceFlow30.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow30.caseValue = noCase18;   // Note: for this property a default value is defined.

	var noCase19 = microflows.NoCase.create(model);

	var sequenceFlow31 = microflows.SequenceFlow.create(model);
	sequenceFlow31.originConnectionIndex = 1;
	sequenceFlow31.destinationConnectionIndex = 3;
	sequenceFlow31.originBezierVector = {"width":30,"height":0};
	sequenceFlow31.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow31.caseValue = noCase19;   // Note: for this property a default value is defined.

	var noCase20 = microflows.NoCase.create(model);

	var sequenceFlow32 = microflows.SequenceFlow.create(model);
	sequenceFlow32.originConnectionIndex = 1;
	sequenceFlow32.destinationConnectionIndex = 3;
	sequenceFlow32.originBezierVector = {"width":30,"height":0};
	sequenceFlow32.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow32.caseValue = noCase20;   // Note: for this property a default value is defined.

	var noCase21 = microflows.NoCase.create(model);

	var sequenceFlow33 = microflows.SequenceFlow.create(model);
	sequenceFlow33.originConnectionIndex = 1;
	sequenceFlow33.destinationConnectionIndex = 3;
	sequenceFlow33.originBezierVector = {"width":30,"height":0};
	sequenceFlow33.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow33.caseValue = noCase21;   // Note: for this property a default value is defined.

	var enumerationCase13 = microflows.EnumerationCase.create(model);
	enumerationCase13.value = "INFO";

	var sequenceFlow34 = microflows.SequenceFlow.create(model);
	sequenceFlow34.destinationConnectionIndex = 3;
	sequenceFlow34.originBezierVector = {"width":0,"height":-45};
	sequenceFlow34.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow34.caseValue = enumerationCase13;   // Note: for this property a default value is defined.

	var enumerationCase14 = microflows.EnumerationCase.create(model);
	enumerationCase14.value = "(empty)";

	var sequenceFlow35 = microflows.SequenceFlow.create(model);
	sequenceFlow35.destinationConnectionIndex = 2;
	sequenceFlow35.originBezierVector = {"width":0,"height":-15};
	sequenceFlow35.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow35.caseValue = enumerationCase14;   // Note: for this property a default value is defined.

	var noCase22 = microflows.NoCase.create(model);

	var sequenceFlow36 = microflows.SequenceFlow.create(model);
	sequenceFlow36.originConnectionIndex = 1;
	sequenceFlow36.destinationConnectionIndex = 3;
	sequenceFlow36.originBezierVector = {"width":15,"height":0};
	sequenceFlow36.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow36.caseValue = noCase22;   // Note: for this property a default value is defined.

	var noCase23 = microflows.NoCase.create(model);

	var sequenceFlow37 = microflows.SequenceFlow.create(model);
	sequenceFlow37.originConnectionIndex = 1;
	sequenceFlow37.destinationConnectionIndex = 3;
	sequenceFlow37.originBezierVector = {"width":30,"height":0};
	sequenceFlow37.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow37.caseValue = noCase23;   // Note: for this property a default value is defined.

	var noCase24 = microflows.NoCase.create(model);

	var sequenceFlow38 = microflows.SequenceFlow.create(model);
	sequenceFlow38.originConnectionIndex = 1;
	sequenceFlow38.destinationConnectionIndex = 3;
	sequenceFlow38.originBezierVector = {"width":30,"height":0};
	sequenceFlow38.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow38.caseValue = noCase24;   // Note: for this property a default value is defined.

	var enumerationCase15 = microflows.EnumerationCase.create(model);
	enumerationCase15.value = "true";

	var sequenceFlow39 = microflows.SequenceFlow.create(model);
	sequenceFlow39.originConnectionIndex = 1;
	sequenceFlow39.destinationConnectionIndex = 3;
	sequenceFlow39.originBezierVector = {"width":15,"height":0};
	sequenceFlow39.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow39.caseValue = enumerationCase15;   // Note: for this property a default value is defined.

	var enumerationCase16 = microflows.EnumerationCase.create(model);
	enumerationCase16.value = "false";

	var sequenceFlow40 = microflows.SequenceFlow.create(model);
	sequenceFlow40.originBezierVector = {"width":0,"height":-130};
	sequenceFlow40.destinationBezierVector = {"width":-30,"height":-165};
	sequenceFlow40.caseValue = enumerationCase16;   // Note: for this property a default value is defined.

	var noCase25 = microflows.NoCase.create(model);

	var sequenceFlow41 = microflows.SequenceFlow.create(model);
	sequenceFlow41.originConnectionIndex = 1;
	sequenceFlow41.destinationConnectionIndex = 3;
	sequenceFlow41.originBezierVector = {"width":15,"height":0};
	sequenceFlow41.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow41.caseValue = noCase25;   // Note: for this property a default value is defined.

	var noCase26 = microflows.NoCase.create(model);

	var sequenceFlow42 = microflows.SequenceFlow.create(model);
	sequenceFlow42.originConnectionIndex = 1;
	sequenceFlow42.destinationConnectionIndex = 3;
	sequenceFlow42.originBezierVector = {"width":30,"height":0};
	sequenceFlow42.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow42.caseValue = noCase26;   // Note: for this property a default value is defined.

	var noCase27 = microflows.NoCase.create(model);

	var sequenceFlow43 = microflows.SequenceFlow.create(model);
	sequenceFlow43.originConnectionIndex = 2;
	sequenceFlow43.originBezierVector = {"width":0,"height":30};
	sequenceFlow43.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow43.caseValue = noCase27;   // Note: for this property a default value is defined.

	var noCase28 = microflows.NoCase.create(model);

	var sequenceFlow44 = microflows.SequenceFlow.create(model);
	sequenceFlow44.originConnectionIndex = 1;
	sequenceFlow44.destinationConnectionIndex = 3;
	sequenceFlow44.originBezierVector = {"width":30,"height":0};
	sequenceFlow44.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow44.caseValue = noCase28;   // Note: for this property a default value is defined.

	var noCase29 = microflows.NoCase.create(model);

	var sequenceFlow45 = microflows.SequenceFlow.create(model);
	sequenceFlow45.destinationConnectionIndex = 2;
	sequenceFlow45.originBezierVector = {"width":0,"height":-30};
	sequenceFlow45.destinationBezierVector = {"width":0,"height":30};
	sequenceFlow45.caseValue = noCase29;   // Note: for this property a default value is defined.

	var enumerationCase17 = microflows.EnumerationCase.create(model);
	enumerationCase17.value = "true";

	var sequenceFlow46 = microflows.SequenceFlow.create(model);
	sequenceFlow46.originConnectionIndex = 2;
	sequenceFlow46.originBezierVector = {"width":0,"height":15};
	sequenceFlow46.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow46.caseValue = enumerationCase17;   // Note: for this property a default value is defined.

	var enumerationCase18 = microflows.EnumerationCase.create(model);
	enumerationCase18.value = "false";

	var sequenceFlow47 = microflows.SequenceFlow.create(model);
	sequenceFlow47.destinationConnectionIndex = 3;
	sequenceFlow47.originBezierVector = {"width":0,"height":-15};
	sequenceFlow47.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow47.caseValue = enumerationCase18;   // Note: for this property a default value is defined.

	var noCase30 = microflows.NoCase.create(model);

	var sequenceFlow48 = microflows.SequenceFlow.create(model);
	sequenceFlow48.originConnectionIndex = 1;
	sequenceFlow48.destinationConnectionIndex = 3;
	sequenceFlow48.originBezierVector = {"width":30,"height":0};
	sequenceFlow48.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow48.caseValue = noCase30;   // Note: for this property a default value is defined.

	var enumerationCase19 = microflows.EnumerationCase.create(model);
	enumerationCase19.value = "false";

	var sequenceFlow49 = microflows.SequenceFlow.create(model);
	sequenceFlow49.originConnectionIndex = 1;
	sequenceFlow49.destinationConnectionIndex = 3;
	sequenceFlow49.originBezierVector = {"width":15,"height":0};
	sequenceFlow49.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow49.caseValue = enumerationCase19;   // Note: for this property a default value is defined.

	var noCase31 = microflows.NoCase.create(model);

	var sequenceFlow50 = microflows.SequenceFlow.create(model);
	sequenceFlow50.originConnectionIndex = 1;
	sequenceFlow50.destinationConnectionIndex = 3;
	sequenceFlow50.originBezierVector = {"width":30,"height":0};
	sequenceFlow50.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow50.caseValue = noCase31;   // Note: for this property a default value is defined.

	var enumerationCase20 = microflows.EnumerationCase.create(model);
	enumerationCase20.value = "OnlyCreateNewObjects";

	var sequenceFlow51 = microflows.SequenceFlow.create(model);
	sequenceFlow51.originConnectionIndex = 2;
	sequenceFlow51.destinationConnectionIndex = 3;
	sequenceFlow51.originBezierVector = {"width":0,"height":180};
	sequenceFlow51.destinationBezierVector = {"width":-150,"height":0};
	sequenceFlow51.caseValue = enumerationCase20;   // Note: for this property a default value is defined.

	var noCase32 = microflows.NoCase.create(model);

	var sequenceFlow52 = microflows.SequenceFlow.create(model);
	sequenceFlow52.originConnectionIndex = 1;
	sequenceFlow52.destinationConnectionIndex = 2;
	sequenceFlow52.originBezierVector = {"width":30,"height":0};
	sequenceFlow52.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow52.caseValue = noCase32;   // Note: for this property a default value is defined.

	var enumerationCase21 = microflows.EnumerationCase.create(model);
	enumerationCase21.value = "true";

	var sequenceFlow53 = microflows.SequenceFlow.create(model);
	sequenceFlow53.destinationConnectionIndex = 2;
	sequenceFlow53.originBezierVector = {"width":0,"height":-50};
	sequenceFlow53.destinationBezierVector = {"width":20,"height":210};
	sequenceFlow53.caseValue = enumerationCase21;   // Note: for this property a default value is defined.

	var enumerationCase22 = microflows.EnumerationCase.create(model);
	enumerationCase22.value = "false";

	var sequenceFlow54 = microflows.SequenceFlow.create(model);
	sequenceFlow54.originConnectionIndex = 1;
	sequenceFlow54.destinationConnectionIndex = 3;
	sequenceFlow54.originBezierVector = {"width":15,"height":0};
	sequenceFlow54.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow54.caseValue = enumerationCase22;   // Note: for this property a default value is defined.

	var enumerationCase23 = microflows.EnumerationCase.create(model);
	enumerationCase23.value = "false";

	var sequenceFlow55 = microflows.SequenceFlow.create(model);
	sequenceFlow55.originConnectionIndex = 3;
	sequenceFlow55.destinationConnectionIndex = 1;
	sequenceFlow55.originBezierVector = {"width":-15,"height":0};
	sequenceFlow55.destinationBezierVector = {"width":15,"height":0};
	sequenceFlow55.caseValue = enumerationCase23;   // Note: for this property a default value is defined.

	var enumerationCase24 = microflows.EnumerationCase.create(model);
	enumerationCase24.value = "true";

	var sequenceFlow56 = microflows.SequenceFlow.create(model);
	sequenceFlow56.destinationConnectionIndex = 2;
	sequenceFlow56.originBezierVector = {"width":0,"height":-15};
	sequenceFlow56.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow56.caseValue = enumerationCase24;   // Note: for this property a default value is defined.

	var enumerationCase25 = microflows.EnumerationCase.create(model);
	enumerationCase25.value = "true";

	var sequenceFlow57 = microflows.SequenceFlow.create(model);
	sequenceFlow57.originConnectionIndex = 1;
	sequenceFlow57.destinationConnectionIndex = 3;
	sequenceFlow57.originBezierVector = {"width":15,"height":0};
	sequenceFlow57.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow57.caseValue = enumerationCase25;   // Note: for this property a default value is defined.

	var noCase33 = microflows.NoCase.create(model);

	var sequenceFlow58 = microflows.SequenceFlow.create(model);
	sequenceFlow58.originConnectionIndex = 2;
	sequenceFlow58.originBezierVector = {"width":0,"height":30};
	sequenceFlow58.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow58.caseValue = noCase33;   // Note: for this property a default value is defined.

	var noCase34 = microflows.NoCase.create(model);

	var sequenceFlow59 = microflows.SequenceFlow.create(model);
	sequenceFlow59.originConnectionIndex = 1;
	sequenceFlow59.destinationConnectionIndex = 3;
	sequenceFlow59.originBezierVector = {"width":30,"height":0};
	sequenceFlow59.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow59.caseValue = noCase34;   // Note: for this property a default value is defined.

	var enumerationCase26 = microflows.EnumerationCase.create(model);
	enumerationCase26.value = "false";

	var sequenceFlow60 = microflows.SequenceFlow.create(model);
	sequenceFlow60.originConnectionIndex = 2;
	sequenceFlow60.originBezierVector = {"width":0,"height":15};
	sequenceFlow60.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow60.caseValue = enumerationCase26;   // Note: for this property a default value is defined.

	var noCase35 = microflows.NoCase.create(model);

	var sequenceFlow61 = microflows.SequenceFlow.create(model);
	sequenceFlow61.originConnectionIndex = 1;
	sequenceFlow61.destinationConnectionIndex = 2;
	sequenceFlow61.originBezierVector = {"width":70,"height":0};
	sequenceFlow61.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow61.caseValue = noCase35;   // Note: for this property a default value is defined.

	var enumerationCase27 = microflows.EnumerationCase.create(model);
	enumerationCase27.value = "true";

	var sequenceFlow62 = microflows.SequenceFlow.create(model);
	sequenceFlow62.originConnectionIndex = 1;
	sequenceFlow62.destinationConnectionIndex = 3;
	sequenceFlow62.originBezierVector = {"width":15,"height":0};
	sequenceFlow62.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow62.caseValue = enumerationCase27;   // Note: for this property a default value is defined.

	var noCase36 = microflows.NoCase.create(model);

	var sequenceFlow63 = microflows.SequenceFlow.create(model);
	sequenceFlow63.originConnectionIndex = 1;
	sequenceFlow63.destinationConnectionIndex = 3;
	sequenceFlow63.originBezierVector = {"width":15,"height":0};
	sequenceFlow63.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow63.caseValue = noCase36;   // Note: for this property a default value is defined.

	var enumerationCase28 = microflows.EnumerationCase.create(model);
	enumerationCase28.value = "false";

	var sequenceFlow64 = microflows.SequenceFlow.create(model);
	sequenceFlow64.originConnectionIndex = 1;
	sequenceFlow64.destinationConnectionIndex = 3;
	sequenceFlow64.originBezierVector = {"width":15,"height":0};
	sequenceFlow64.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow64.caseValue = enumerationCase28;   // Note: for this property a default value is defined.

	var enumerationCase29 = microflows.EnumerationCase.create(model);
	enumerationCase29.value = "true";

	var sequenceFlow65 = microflows.SequenceFlow.create(model);
	sequenceFlow65.destinationConnectionIndex = 3;
	sequenceFlow65.originBezierVector = {"width":0,"height":-15};
	sequenceFlow65.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow65.caseValue = enumerationCase29;   // Note: for this property a default value is defined.

	var noCase37 = microflows.NoCase.create(model);

	var sequenceFlow66 = microflows.SequenceFlow.create(model);
	sequenceFlow66.originConnectionIndex = 2;
	sequenceFlow66.originBezierVector = {"width":0,"height":30};
	sequenceFlow66.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow66.caseValue = noCase37;   // Note: for this property a default value is defined.

	var noCase38 = microflows.NoCase.create(model);

	var sequenceFlow67 = microflows.SequenceFlow.create(model);
	sequenceFlow67.originConnectionIndex = 1;
	sequenceFlow67.destinationConnectionIndex = 3;
	sequenceFlow67.originBezierVector = {"width":15,"height":0};
	sequenceFlow67.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow67.caseValue = noCase38;   // Note: for this property a default value is defined.

	var noCase39 = microflows.NoCase.create(model);

	var sequenceFlow68 = microflows.SequenceFlow.create(model);
	sequenceFlow68.originConnectionIndex = 2;
	sequenceFlow68.originBezierVector = {"width":0,"height":30};
	sequenceFlow68.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow68.caseValue = noCase39;   // Note: for this property a default value is defined.

	var enumerationCase30 = microflows.EnumerationCase.create(model);
	enumerationCase30.value = "true";

	var sequenceFlow69 = microflows.SequenceFlow.create(model);
	sequenceFlow69.originConnectionIndex = 2;
	sequenceFlow69.originBezierVector = {"width":0,"height":15};
	sequenceFlow69.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow69.caseValue = enumerationCase30;   // Note: for this property a default value is defined.

	var noCase40 = microflows.NoCase.create(model);

	var sequenceFlow70 = microflows.SequenceFlow.create(model);
	sequenceFlow70.originConnectionIndex = 1;
	sequenceFlow70.destinationConnectionIndex = 2;
	sequenceFlow70.originBezierVector = {"width":70,"height":0};
	sequenceFlow70.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow70.caseValue = noCase40;   // Note: for this property a default value is defined.

	var enumerationCase31 = microflows.EnumerationCase.create(model);
	enumerationCase31.value = "false";

	var sequenceFlow71 = microflows.SequenceFlow.create(model);
	sequenceFlow71.originConnectionIndex = 1;
	sequenceFlow71.destinationConnectionIndex = 3;
	sequenceFlow71.originBezierVector = {"width":15,"height":0};
	sequenceFlow71.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow71.caseValue = enumerationCase31;   // Note: for this property a default value is defined.

	var noCase41 = microflows.NoCase.create(model);

	var sequenceFlow72 = microflows.SequenceFlow.create(model);
	sequenceFlow72.originConnectionIndex = 2;
	sequenceFlow72.originBezierVector = {"width":0,"height":30};
	sequenceFlow72.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow72.caseValue = noCase41;   // Note: for this property a default value is defined.

	var noCase42 = microflows.NoCase.create(model);

	var sequenceFlow73 = microflows.SequenceFlow.create(model);
	sequenceFlow73.originConnectionIndex = 1;
	sequenceFlow73.destinationConnectionIndex = 3;
	sequenceFlow73.originBezierVector = {"width":15,"height":0};
	sequenceFlow73.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow73.caseValue = noCase42;   // Note: for this property a default value is defined.

	var enumerationCase32 = microflows.EnumerationCase.create(model);
	enumerationCase32.value = "false";

	var sequenceFlow74 = microflows.SequenceFlow.create(model);
	sequenceFlow74.originConnectionIndex = 2;
	sequenceFlow74.originBezierVector = {"width":0,"height":15};
	sequenceFlow74.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow74.caseValue = enumerationCase32;   // Note: for this property a default value is defined.

	var noCase43 = microflows.NoCase.create(model);

	var sequenceFlow75 = microflows.SequenceFlow.create(model);
	sequenceFlow75.originConnectionIndex = 1;
	sequenceFlow75.destinationConnectionIndex = 3;
	sequenceFlow75.originBezierVector = {"width":30,"height":0};
	sequenceFlow75.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow75.caseValue = noCase43;   // Note: for this property a default value is defined.

	var enumerationCase33 = microflows.EnumerationCase.create(model);
	enumerationCase33.value = "true";

	var sequenceFlow76 = microflows.SequenceFlow.create(model);
	sequenceFlow76.originConnectionIndex = 1;
	sequenceFlow76.destinationConnectionIndex = 3;
	sequenceFlow76.originBezierVector = {"width":15,"height":0};
	sequenceFlow76.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow76.caseValue = enumerationCase33;   // Note: for this property a default value is defined.

	var noCase44 = microflows.NoCase.create(model);

	var sequenceFlow77 = microflows.SequenceFlow.create(model);
	sequenceFlow77.originConnectionIndex = 1;
	sequenceFlow77.destinationConnectionIndex = 2;
	sequenceFlow77.originBezierVector = {"width":70,"height":0};
	sequenceFlow77.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow77.caseValue = noCase44;   // Note: for this property a default value is defined.

	var enumerationCase34 = microflows.EnumerationCase.create(model);
	enumerationCase34.value = "false";

	var sequenceFlow78 = microflows.SequenceFlow.create(model);
	sequenceFlow78.originConnectionIndex = 2;
	sequenceFlow78.originBezierVector = {"width":0,"height":15};
	sequenceFlow78.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow78.caseValue = enumerationCase34;   // Note: for this property a default value is defined.

	var enumerationCase35 = microflows.EnumerationCase.create(model);
	enumerationCase35.value = "true";

	var sequenceFlow79 = microflows.SequenceFlow.create(model);
	sequenceFlow79.originConnectionIndex = 1;
	sequenceFlow79.destinationConnectionIndex = 3;
	sequenceFlow79.originBezierVector = {"width":15,"height":0};
	sequenceFlow79.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow79.caseValue = enumerationCase35;   // Note: for this property a default value is defined.

	var noCase45 = microflows.NoCase.create(model);

	var sequenceFlow80 = microflows.SequenceFlow.create(model);
	sequenceFlow80.originConnectionIndex = 1;
	sequenceFlow80.destinationConnectionIndex = 3;
	sequenceFlow80.originBezierVector = {"width":15,"height":0};
	sequenceFlow80.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow80.caseValue = noCase45;   // Note: for this property a default value is defined.

	var noCase46 = microflows.NoCase.create(model);

	var sequenceFlow81 = microflows.SequenceFlow.create(model);
	sequenceFlow81.destinationConnectionIndex = 2;
	sequenceFlow81.originBezierVector = {"width":0,"height":-15};
	sequenceFlow81.destinationBezierVector = {"width":0,"height":15};
	sequenceFlow81.caseValue = noCase46;   // Note: for this property a default value is defined.

	var noCase47 = microflows.NoCase.create(model);

	var sequenceFlow82 = microflows.SequenceFlow.create(model);
	sequenceFlow82.originConnectionIndex = 2;
	sequenceFlow82.originBezierVector = {"width":0,"height":30};
	sequenceFlow82.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow82.caseValue = noCase47;   // Note: for this property a default value is defined.

	var booleanType3 = datatypes.BooleanType.create(model);

	var translation9 = texts.Translation.create(model);
	translation9.languageCode = "en_US";

	var translation10 = texts.Translation.create(model);
	translation10.languageCode = "en_GB";

	var translation11 = texts.Translation.create(model);
	translation11.languageCode = "en_ZA";

	var text3 = texts.Text.create(model);
	text3.translations.push(translation9);
	text3.translations.push(translation10);
	text3.translations.push(translation11);

	var validateTemplate1 = microflows.Microflow.createIn(unit);
	validateTemplate1.name = "ValidateTemplate";
	validateTemplate1.objectCollection = microflowObjectCollection3;   // Note: for this property a default value is defined.
	validateTemplate1.flows.push(sequenceFlow1);
	validateTemplate1.flows.push(sequenceFlow2);
	validateTemplate1.flows.push(sequenceFlow3);
	validateTemplate1.flows.push(sequenceFlow4);
	validateTemplate1.flows.push(sequenceFlow5);
	validateTemplate1.flows.push(sequenceFlow6);
	validateTemplate1.flows.push(sequenceFlow7);
	validateTemplate1.flows.push(sequenceFlow8);
	validateTemplate1.flows.push(sequenceFlow9);
	validateTemplate1.flows.push(sequenceFlow10);
	validateTemplate1.flows.push(sequenceFlow11);
	validateTemplate1.flows.push(sequenceFlow12);
	validateTemplate1.flows.push(sequenceFlow13);
	validateTemplate1.flows.push(sequenceFlow14);
	validateTemplate1.flows.push(sequenceFlow15);
	validateTemplate1.flows.push(sequenceFlow16);
	validateTemplate1.flows.push(sequenceFlow17);
	validateTemplate1.flows.push(sequenceFlow18);
	validateTemplate1.flows.push(sequenceFlow19);
	validateTemplate1.flows.push(sequenceFlow20);
	validateTemplate1.flows.push(sequenceFlow21);
	validateTemplate1.flows.push(sequenceFlow22);
	validateTemplate1.flows.push(sequenceFlow23);
	validateTemplate1.flows.push(sequenceFlow24);
	validateTemplate1.flows.push(sequenceFlow25);
	validateTemplate1.flows.push(sequenceFlow26);
	validateTemplate1.flows.push(sequenceFlow27);
	validateTemplate1.flows.push(sequenceFlow28);
	validateTemplate1.flows.push(sequenceFlow29);
	validateTemplate1.flows.push(sequenceFlow30);
	validateTemplate1.flows.push(sequenceFlow31);
	validateTemplate1.flows.push(sequenceFlow32);
	validateTemplate1.flows.push(sequenceFlow33);
	validateTemplate1.flows.push(sequenceFlow34);
	validateTemplate1.flows.push(sequenceFlow35);
	validateTemplate1.flows.push(sequenceFlow36);
	validateTemplate1.flows.push(sequenceFlow37);
	validateTemplate1.flows.push(sequenceFlow38);
	validateTemplate1.flows.push(sequenceFlow39);
	validateTemplate1.flows.push(sequenceFlow40);
	validateTemplate1.flows.push(sequenceFlow41);
	validateTemplate1.flows.push(sequenceFlow42);
	validateTemplate1.flows.push(sequenceFlow43);
	validateTemplate1.flows.push(sequenceFlow44);
	validateTemplate1.flows.push(sequenceFlow45);
	validateTemplate1.flows.push(sequenceFlow46);
	validateTemplate1.flows.push(sequenceFlow47);
	validateTemplate1.flows.push(sequenceFlow48);
	validateTemplate1.flows.push(sequenceFlow49);
	validateTemplate1.flows.push(sequenceFlow50);
	validateTemplate1.flows.push(sequenceFlow51);
	validateTemplate1.flows.push(sequenceFlow52);
	validateTemplate1.flows.push(sequenceFlow53);
	validateTemplate1.flows.push(sequenceFlow54);
	validateTemplate1.flows.push(sequenceFlow55);
	validateTemplate1.flows.push(sequenceFlow56);
	validateTemplate1.flows.push(sequenceFlow57);
	validateTemplate1.flows.push(sequenceFlow58);
	validateTemplate1.flows.push(sequenceFlow59);
	validateTemplate1.flows.push(sequenceFlow60);
	validateTemplate1.flows.push(sequenceFlow61);
	validateTemplate1.flows.push(sequenceFlow62);
	validateTemplate1.flows.push(sequenceFlow63);
	validateTemplate1.flows.push(sequenceFlow64);
	validateTemplate1.flows.push(sequenceFlow65);
	validateTemplate1.flows.push(sequenceFlow66);
	validateTemplate1.flows.push(sequenceFlow67);
	validateTemplate1.flows.push(sequenceFlow68);
	validateTemplate1.flows.push(sequenceFlow69);
	validateTemplate1.flows.push(sequenceFlow70);
	validateTemplate1.flows.push(sequenceFlow71);
	validateTemplate1.flows.push(sequenceFlow72);
	validateTemplate1.flows.push(sequenceFlow73);
	validateTemplate1.flows.push(sequenceFlow74);
	validateTemplate1.flows.push(sequenceFlow75);
	validateTemplate1.flows.push(sequenceFlow76);
	validateTemplate1.flows.push(sequenceFlow77);
	validateTemplate1.flows.push(sequenceFlow78);
	validateTemplate1.flows.push(sequenceFlow79);
	validateTemplate1.flows.push(sequenceFlow80);
	validateTemplate1.flows.push(sequenceFlow81);
	validateTemplate1.flows.push(sequenceFlow82);
	validateTemplate1.microflowReturnType = booleanType3;
	validateTemplate1.concurrencyErrorMessage = text3;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity11;

	sequenceFlow2.origin = actionActivity10;
	sequenceFlow2.destination = actionActivity13;

	sequenceFlow3.origin = loopedActivity1;
	sequenceFlow3.destination = actionActivity1;

	sequenceFlow4.origin = actionActivity17;
	sequenceFlow4.destination = actionActivity16;

	sequenceFlow5.origin = exclusiveSplit4;
	sequenceFlow5.destination = actionActivity18;

	sequenceFlow6.origin = exclusiveSplit4;
	sequenceFlow6.destination = actionActivity14;

	sequenceFlow7.origin = exclusiveSplit1;
	sequenceFlow7.destination = exclusiveSplit2;

	sequenceFlow8.origin = exclusiveMerge2;
	sequenceFlow8.destination = exclusiveSplit5;

	sequenceFlow9.origin = exclusiveSplit1;
	sequenceFlow9.destination = exclusiveMerge1;

	sequenceFlow10.origin = exclusiveSplit1;
	sequenceFlow10.destination = exclusiveMerge1;

	sequenceFlow11.origin = actionActivity11;
	sequenceFlow11.destination = actionActivity12;

	sequenceFlow12.origin = actionActivity12;
	sequenceFlow12.destination = exclusiveSplit11;

	sequenceFlow13.origin = actionActivity14;
	sequenceFlow13.destination = actionActivity15;

	sequenceFlow14.origin = exclusiveSplit1;
	sequenceFlow14.destination = actionActivity3;

	sequenceFlow15.origin = actionActivity3;
	sequenceFlow15.destination = actionActivity9;

	sequenceFlow16.origin = actionActivity9;
	sequenceFlow16.destination = actionActivity8;

	sequenceFlow17.origin = actionActivity1;
	sequenceFlow17.destination = actionActivity2;

	sequenceFlow18.origin = actionActivity2;
	sequenceFlow18.destination = exclusiveSplit1;

	sequenceFlow19.origin = exclusiveSplit2;
	sequenceFlow19.destination = actionActivity5;

	sequenceFlow20.origin = actionActivity5;
	sequenceFlow20.destination = actionActivity4;

	sequenceFlow21.origin = exclusiveSplit2;
	sequenceFlow21.destination = exclusiveMerge2;

	sequenceFlow22.origin = exclusiveMerge1;
	sequenceFlow22.destination = exclusiveSplit3;

	sequenceFlow23.origin = exclusiveSplit3;
	sequenceFlow23.destination = exclusiveMerge2;

	sequenceFlow24.origin = exclusiveSplit3;
	sequenceFlow24.destination = actionActivity6;

	sequenceFlow25.origin = actionActivity4;
	sequenceFlow25.destination = exclusiveMerge2;

	sequenceFlow26.origin = actionActivity6;
	sequenceFlow26.destination = actionActivity7;

	sequenceFlow27.origin = actionActivity7;
	sequenceFlow27.destination = exclusiveMerge2;

	sequenceFlow28.origin = exclusiveSplit7;
	sequenceFlow28.destination = actionActivity22;

	sequenceFlow29.origin = exclusiveSplit7;
	sequenceFlow29.destination = exclusiveMerge4;

	sequenceFlow30.origin = exclusiveMerge4;
	sequenceFlow30.destination = exclusiveSplit12;

	sequenceFlow31.origin = actionActivity8;
	sequenceFlow31.destination = exclusiveMerge4;

	sequenceFlow32.origin = actionActivity16;
	sequenceFlow32.destination = exclusiveSplit4;

	sequenceFlow33.origin = actionActivity13;
	sequenceFlow33.destination = loopedActivity1;

	sequenceFlow34.origin = exclusiveSplit4;
	sequenceFlow34.destination = exclusiveMerge3;

	sequenceFlow35.origin = exclusiveSplit4;
	sequenceFlow35.destination = exclusiveMerge3;

	sequenceFlow36.origin = exclusiveMerge3;
	sequenceFlow36.destination = continueEvent1;

	sequenceFlow37.origin = actionActivity22;
	sequenceFlow37.destination = endEvent1;

	sequenceFlow38.origin = actionActivity23;
	sequenceFlow38.destination = endEvent2;

	sequenceFlow39.origin = exclusiveSplit5;
	sequenceFlow39.destination = actionActivity19;

	sequenceFlow40.origin = exclusiveSplit5;
	sequenceFlow40.destination = exclusiveMerge5;

	sequenceFlow41.origin = exclusiveMerge5;
	sequenceFlow41.destination = exclusiveSplit7;

	sequenceFlow42.origin = actionActivity19;
	sequenceFlow42.destination = loopedActivity2;

	sequenceFlow43.origin = actionActivity24;
	sequenceFlow43.destination = actionActivity25;

	sequenceFlow44.origin = actionActivity28;
	sequenceFlow44.destination = actionActivity29;

	sequenceFlow45.origin = actionActivity29;
	sequenceFlow45.destination = actionActivity30;

	sequenceFlow46.origin = exclusiveSplit8;
	sequenceFlow46.destination = continueEvent2;

	sequenceFlow47.origin = exclusiveSplit8;
	sequenceFlow47.destination = actionActivity24;

	sequenceFlow48.origin = loopedActivity2;
	sequenceFlow48.destination = exclusiveMerge5;

	sequenceFlow49.origin = exclusiveSplit6;
	sequenceFlow49.destination = actionActivity20;

	sequenceFlow50.origin = actionActivity20;
	sequenceFlow50.destination = actionActivity21;

	sequenceFlow51.origin = exclusiveSplit1;
	sequenceFlow51.destination = exclusiveSplit6;

	sequenceFlow52.origin = actionActivity21;
	sequenceFlow52.destination = exclusiveMerge2;

	sequenceFlow53.origin = exclusiveSplit6;
	sequenceFlow53.destination = exclusiveMerge2;

	sequenceFlow54.origin = exclusiveSplit9;
	sequenceFlow54.destination = exclusiveSplit8;

	sequenceFlow55.origin = exclusiveSplit10;
	sequenceFlow55.destination = continueEvent3;

	sequenceFlow56.origin = exclusiveSplit9;
	sequenceFlow56.destination = exclusiveSplit10;

	sequenceFlow57.origin = exclusiveSplit10;
	sequenceFlow57.destination = actionActivity26;

	sequenceFlow58.origin = actionActivity26;
	sequenceFlow58.destination = actionActivity27;

	sequenceFlow59.origin = actionActivity30;
	sequenceFlow59.destination = exclusiveSplit9;

	sequenceFlow60.origin = exclusiveSplit11;
	sequenceFlow60.destination = actionActivity31;

	sequenceFlow61.origin = actionActivity33;
	sequenceFlow61.destination = exclusiveMerge7;

	sequenceFlow62.origin = exclusiveSplit11;
	sequenceFlow62.destination = exclusiveMerge7;

	sequenceFlow63.origin = exclusiveMerge7;
	sequenceFlow63.destination = actionActivity36;

	sequenceFlow64.origin = exclusiveSplit12;
	sequenceFlow64.destination = exclusiveMerge6;

	sequenceFlow65.origin = exclusiveSplit12;
	sequenceFlow65.destination = actionActivity32;

	sequenceFlow66.origin = actionActivity32;
	sequenceFlow66.destination = exclusiveMerge6;

	sequenceFlow67.origin = exclusiveMerge6;
	sequenceFlow67.destination = actionActivity23;

	sequenceFlow68.origin = actionActivity31;
	sequenceFlow68.destination = actionActivity33;

	sequenceFlow69.origin = exclusiveSplit13;
	sequenceFlow69.destination = exclusiveSplit14;

	sequenceFlow70.origin = actionActivity35;
	sequenceFlow70.destination = exclusiveMerge9;

	sequenceFlow71.origin = exclusiveSplit13;
	sequenceFlow71.destination = exclusiveMerge8;

	sequenceFlow72.origin = actionActivity34;
	sequenceFlow72.destination = actionActivity35;

	sequenceFlow73.origin = exclusiveMerge8;
	sequenceFlow73.destination = actionActivity10;

	sequenceFlow74.origin = exclusiveSplit14;
	sequenceFlow74.destination = actionActivity34;

	sequenceFlow75.origin = actionActivity36;
	sequenceFlow75.destination = exclusiveSplit13;

	sequenceFlow76.origin = exclusiveSplit14;
	sequenceFlow76.destination = exclusiveMerge9;

	sequenceFlow77.origin = actionActivity37;
	sequenceFlow77.destination = exclusiveMerge10;

	sequenceFlow78.origin = exclusiveSplit15;
	sequenceFlow78.destination = actionActivity38;

	sequenceFlow79.origin = exclusiveSplit15;
	sequenceFlow79.destination = exclusiveMerge10;

	sequenceFlow80.origin = exclusiveMerge9;
	sequenceFlow80.destination = exclusiveSplit15;

	sequenceFlow81.origin = exclusiveMerge10;
	sequenceFlow81.destination = exclusiveMerge8;

	sequenceFlow82.origin = actionActivity38;
	sequenceFlow82.destination = actionActivity37;

})