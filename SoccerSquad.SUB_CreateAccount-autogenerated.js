(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "07a12faf-c746-4594-a5d7-dd36609dc0c2" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":85,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":700,"y":200};
	endEvent1.size = {"width":20,"height":20};

	var stringType1 = datatypes.StringType.create(model);

	var userName1 = microflows.MicroflowParameterObject.create(model);
	userName1.relativeMiddlePoint = {"x":85,"y":80};
	userName1.size = {"width":30,"height":30};
	userName1.name = "UserName";
	userName1.variableType = stringType1;   // Note: for this property a default value is defined.

	var objectType1 = datatypes.ObjectType.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	objectType1.__entity.updateWithRawValue("System.UserRole");

	var userRole1 = microflows.MicroflowParameterObject.create(model);
	userRole1.relativeMiddlePoint = {"x":160,"y":80};
	userRole1.size = {"width":30,"height":30};
	userRole1.name = "UserRole";
	userRole1.variableType = objectType1;   // Note: for this property a default value is defined.

	var constantRange1 = microflows.ConstantRange.create(model);

	var sortItemList1 = microflows.SortItemList.create(model);

	var databaseRetrieveSource1 = microflows.DatabaseRetrieveSource.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	databaseRetrieveSource1.__entity.updateWithRawValue("System.User");
	databaseRetrieveSource1.range = constantRange1;   // Note: for this property a default value is defined.
	databaseRetrieveSource1.xPathConstraint = "[Name = $UserName]";
	databaseRetrieveSource1.sortItemList = sortItemList1;   // Note: for this property a default value is defined.

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = databaseRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "UserList";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":225,"y":200};
	actionActivity1.size = {"width":120,"height":60};
	actionActivity1.action = retrieveAction1;

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$UserList != empty";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":400,"y":200};
	exclusiveSplit1.size = {"width":90,"height":60};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "Exists?";

	var memberChange1 = microflows.MemberChange.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	memberChange1.__attribute.updateWithRawValue("System.User.Name");
	memberChange1.value = "$UserName";

	var memberChange2 = microflows.MemberChange.create(model);
	memberChange2.attribute = model.findAttributeByQualifiedName("Administration.Account.FullName");
	memberChange2.value = "$UserName";

	var memberChange3 = microflows.MemberChange.create(model);
	memberChange3.attribute = model.findAttributeByQualifiedName("Administration.Account.Email");
	memberChange3.value = "replaceAll($UserName, ' ' , '.')+ '@gomake.it'";

	var memberChange4 = microflows.MemberChange.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	memberChange4.__association.updateWithRawValue("System.UserRoles");
	memberChange4.value = "$UserRole";

	var memberChange5 = microflows.MemberChange.create(model);
	// Note: this is an unsupported internal property of the Model SDK which is subject to change.
	memberChange5.__attribute.updateWithRawValue("System.User.Password");
	memberChange5.value = "'Mendix123'";

	var createObjectAction1 = microflows.CreateObjectAction.create(model);
	createObjectAction1.items.push(memberChange1);
	createObjectAction1.items.push(memberChange2);
	createObjectAction1.items.push(memberChange3);
	createObjectAction1.items.push(memberChange4);
	createObjectAction1.items.push(memberChange5);
	createObjectAction1.commit = microflows.CommitEnum.Yes;
	createObjectAction1.entity = model.findEntityByQualifiedName("Administration.Account");
	createObjectAction1.outputVariableName = "NewAccount";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":400,"y":335};
	actionActivity2.size = {"width":120,"height":60};
	actionActivity2.action = createObjectAction1;

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":700,"y":335};
	endEvent2.size = {"width":20,"height":20};

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(userName1);
	microflowObjectCollection1.objects.push(userRole1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(endEvent2);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":15,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow3.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "false";

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 2;
	sequenceFlow4.originBezierVector = {"width":0,"height":15};
	sequenceFlow4.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow4.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 1;
	sequenceFlow5.destinationConnectionIndex = 3;
	sequenceFlow5.originBezierVector = {"width":30,"height":0};
	sequenceFlow5.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow5.caseValue = noCase3;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);

	var sUB_CreateAccount1 = microflows.Microflow.createIn(unit);
	sUB_CreateAccount1.name = "SUB_CreateAccount";
	sUB_CreateAccount1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	sUB_CreateAccount1.flows.push(sequenceFlow1);
	sUB_CreateAccount1.flows.push(sequenceFlow2);
	sUB_CreateAccount1.flows.push(sequenceFlow3);
	sUB_CreateAccount1.flows.push(sequenceFlow4);
	sUB_CreateAccount1.flows.push(sequenceFlow5);
	sUB_CreateAccount1.microflowReturnType = voidType1;
	sUB_CreateAccount1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity1;

	sequenceFlow2.origin = actionActivity1;
	sequenceFlow2.destination = exclusiveSplit1;

	sequenceFlow3.origin = exclusiveSplit1;
	sequenceFlow3.destination = endEvent1;

	sequenceFlow4.origin = exclusiveSplit1;
	sequenceFlow4.destination = actionActivity2;

	sequenceFlow5.origin = actionActivity2;
	sequenceFlow5.destination = endEvent2;

})