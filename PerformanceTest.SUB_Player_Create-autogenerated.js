(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "26e95b55-802e-4b1f-8d2c-26f238c4b0e7" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":-170,"y":200};
	startEvent1.size = {"width":20,"height":20};

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":880,"y":200};
	endEvent1.size = {"width":20,"height":20};

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("PerformanceTest.PlayerImport");

	var playerImport1 = microflows.MicroflowParameterObject.create(model);
	playerImport1.relativeMiddlePoint = {"x":-170,"y":50};
	playerImport1.size = {"width":30,"height":30};
	playerImport1.name = "PlayerImport";
	playerImport1.variableType = objectType1;   // Note: for this property a default value is defined.

	var listType1 = datatypes.ListType.create(model);
	listType1.entity = model.findEntityByQualifiedName("SoccerSquad.Player");

	var playerList1 = microflows.MicroflowParameterObject.create(model);
	playerList1.relativeMiddlePoint = {"x":-65,"y":50};
	playerList1.size = {"width":30,"height":30};
	playerList1.name = "PlayerList";
	playerList1.variableType = listType1;   // Note: for this property a default value is defined.

	var constantRange1 = microflows.ConstantRange.create(model);
	constantRange1.singleObject = true;

	var sortItemList1 = microflows.SortItemList.create(model);

	var databaseRetrieveSource1 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource1.entity = model.findEntityByQualifiedName("SoccerSquad.Player");
	databaseRetrieveSource1.range = constantRange1;   // Note: for this property a default value is defined.
	databaseRetrieveSource1.xPathConstraint = "[FullName = $PlayerImport/Name]";
	databaseRetrieveSource1.sortItemList = sortItemList1;   // Note: for this property a default value is defined.

	var retrieveAction1 = microflows.RetrieveAction.create(model);
	retrieveAction1.retrieveSource = databaseRetrieveSource1;   // Note: for this property a default value is defined.
	retrieveAction1.outputVariableName = "Player_Existing";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":-15,"y":200};
	actionActivity1.size = {"width":120,"height":60};
	actionActivity1.action = retrieveAction1;

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$Player_Existing = empty";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":350,"y":200};
	exclusiveSplit1.size = {"width":90,"height":60};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "Player not found?\r\n";

	var memberChange1 = microflows.MemberChange.create(model);
	memberChange1.attribute = model.findAttributeByQualifiedName("SoccerSquad.Person.FullName");
	memberChange1.value = "$PlayerImport/Name";

	var memberChange2 = microflows.MemberChange.create(model);
	memberChange2.attribute = model.findAttributeByQualifiedName("SoccerSquad.Player.ShirtNumber");
	memberChange2.value = "$PlayerImport/ShirtNumber";

	var memberChange3 = microflows.MemberChange.create(model);
	memberChange3.attribute = model.findAttributeByQualifiedName("SoccerSquad.Player.IsGoalKeeper");
	memberChange3.value = "if\n$PlayerImport/Position = 'GK'\nthen\ntrue\nelse\nfalse";

	var memberChange4 = microflows.MemberChange.create(model);
	memberChange4.attribute = model.findAttributeByQualifiedName("SoccerSquad.Player.ShoeSize");
	memberChange4.value = "10*random()";

	var memberChange5 = microflows.MemberChange.create(model);
	memberChange5.attribute = model.findAttributeByQualifiedName("SoccerSquad.Person.EmailAddress");
	memberChange5.value = "replaceAll($PlayerImport/Name,' ','.') + '@gomake.it'";

	var memberChange6 = microflows.MemberChange.create(model);
	memberChange6.association = model.findAssociationBaseByQualifiedName("SoccerSquad.Player_Team");
	memberChange6.value = "$Team";

	var memberChange7 = microflows.MemberChange.create(model);
	memberChange7.association = model.findAssociationBaseByQualifiedName("SoccerSquad.Team_Captain");
	memberChange7.value = "if\n$PlayerImport/Captain\nthen\n$Team\nelse\nempty";

	var createObjectAction1 = microflows.CreateObjectAction.create(model);
	createObjectAction1.items.push(memberChange1);
	createObjectAction1.items.push(memberChange2);
	createObjectAction1.items.push(memberChange3);
	createObjectAction1.items.push(memberChange4);
	createObjectAction1.items.push(memberChange5);
	createObjectAction1.items.push(memberChange6);
	createObjectAction1.items.push(memberChange7);
	createObjectAction1.entity = model.findEntityByQualifiedName("SoccerSquad.Player");
	createObjectAction1.outputVariableName = "NewPlayer";

	var actionActivity2 = microflows.ActionActivity.create(model);
	actionActivity2.relativeMiddlePoint = {"x":550,"y":200};
	actionActivity2.size = {"width":120,"height":60};
	actionActivity2.action = createObjectAction1;

	var changeListAction1 = microflows.ChangeListAction.create(model);
	changeListAction1.changeVariableName = "PlayerList";
	changeListAction1.value = "$NewPlayer";

	var actionActivity3 = microflows.ActionActivity.create(model);
	actionActivity3.relativeMiddlePoint = {"x":740,"y":200};
	actionActivity3.size = {"width":120,"height":60};
	actionActivity3.action = changeListAction1;

	var memberChange8 = microflows.MemberChange.create(model);
	memberChange8.attribute = model.findAttributeByQualifiedName("SoccerSquad.Person.FullName");
	memberChange8.value = "$PlayerImport/Name";

	var memberChange9 = microflows.MemberChange.create(model);
	memberChange9.attribute = model.findAttributeByQualifiedName("SoccerSquad.Player.ShirtNumber");
	memberChange9.value = "$PlayerImport/ShirtNumber";

	var memberChange10 = microflows.MemberChange.create(model);
	memberChange10.attribute = model.findAttributeByQualifiedName("SoccerSquad.Player.IsGoalKeeper");
	memberChange10.value = "if\n$PlayerImport/Position = 'GK'\nthen\ntrue\nelse\nfalse";

	var memberChange11 = microflows.MemberChange.create(model);
	memberChange11.attribute = model.findAttributeByQualifiedName("SoccerSquad.Player.ShoeSize");
	memberChange11.value = "10*random()";

	var memberChange12 = microflows.MemberChange.create(model);
	memberChange12.attribute = model.findAttributeByQualifiedName("SoccerSquad.Person.EmailAddress");
	memberChange12.value = "replaceAll($PlayerImport/Name,' ','.') + '@gomake.it'";

	var memberChange13 = microflows.MemberChange.create(model);
	memberChange13.association = model.findAssociationBaseByQualifiedName("SoccerSquad.Player_Team");
	memberChange13.value = "$Team";

	var memberChange14 = microflows.MemberChange.create(model);
	memberChange14.association = model.findAssociationBaseByQualifiedName("SoccerSquad.Team_Captain");
	memberChange14.value = "if\n$PlayerImport/Captain\nthen\n$Team\nelse\nempty";

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.items.push(memberChange8);
	changeObjectAction1.items.push(memberChange9);
	changeObjectAction1.items.push(memberChange10);
	changeObjectAction1.items.push(memberChange11);
	changeObjectAction1.items.push(memberChange12);
	changeObjectAction1.items.push(memberChange13);
	changeObjectAction1.items.push(memberChange14);
	changeObjectAction1.changeVariableName = "Player_Existing";

	var actionActivity4 = microflows.ActionActivity.create(model);
	actionActivity4.relativeMiddlePoint = {"x":350,"y":345};
	actionActivity4.size = {"width":120,"height":60};
	actionActivity4.action = changeObjectAction1;

	var constantRange2 = microflows.ConstantRange.create(model);
	constantRange2.singleObject = true;

	var sortItemList2 = microflows.SortItemList.create(model);

	var databaseRetrieveSource2 = microflows.DatabaseRetrieveSource.create(model);
	databaseRetrieveSource2.entity = model.findEntityByQualifiedName("SoccerSquad.Team");
	databaseRetrieveSource2.range = constantRange2;   // Note: for this property a default value is defined.
	databaseRetrieveSource2.xPathConstraint = "[Name = $PlayerImport/Country]";
	databaseRetrieveSource2.sortItemList = sortItemList2;   // Note: for this property a default value is defined.

	var retrieveAction2 = microflows.RetrieveAction.create(model);
	retrieveAction2.retrieveSource = databaseRetrieveSource2;   // Note: for this property a default value is defined.
	retrieveAction2.outputVariableName = "Team";

	var actionActivity5 = microflows.ActionActivity.create(model);
	actionActivity5.relativeMiddlePoint = {"x":175,"y":200};
	actionActivity5.size = {"width":120,"height":60};
	actionActivity5.action = retrieveAction2;

	var changeListAction2 = microflows.ChangeListAction.create(model);
	changeListAction2.changeVariableName = "PlayerList";
	changeListAction2.value = "$Player_Existing";

	var actionActivity6 = microflows.ActionActivity.create(model);
	actionActivity6.relativeMiddlePoint = {"x":550,"y":345};
	actionActivity6.size = {"width":120,"height":60};
	actionActivity6.action = changeListAction2;

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":735,"y":345};
	endEvent2.size = {"width":20,"height":20};

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(playerImport1);
	microflowObjectCollection1.objects.push(playerList1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity2);
	microflowObjectCollection1.objects.push(actionActivity3);
	microflowObjectCollection1.objects.push(actionActivity4);
	microflowObjectCollection1.objects.push(actionActivity5);
	microflowObjectCollection1.objects.push(actionActivity6);
	microflowObjectCollection1.objects.push(endEvent2);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "true";

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":15,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var noCase3 = microflows.NoCase.create(model);

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 1;
	sequenceFlow4.destinationConnectionIndex = 3;
	sequenceFlow4.originBezierVector = {"width":30,"height":0};
	sequenceFlow4.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow4.caseValue = noCase3;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "false";

	var sequenceFlow5 = microflows.SequenceFlow.create(model);
	sequenceFlow5.originConnectionIndex = 2;
	sequenceFlow5.originBezierVector = {"width":0,"height":15};
	sequenceFlow5.destinationBezierVector = {"width":0,"height":-30};
	sequenceFlow5.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var noCase4 = microflows.NoCase.create(model);

	var sequenceFlow6 = microflows.SequenceFlow.create(model);
	sequenceFlow6.originConnectionIndex = 1;
	sequenceFlow6.destinationConnectionIndex = 3;
	sequenceFlow6.originBezierVector = {"width":30,"height":0};
	sequenceFlow6.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow6.caseValue = noCase4;   // Note: for this property a default value is defined.

	var noCase5 = microflows.NoCase.create(model);

	var sequenceFlow7 = microflows.SequenceFlow.create(model);
	sequenceFlow7.originConnectionIndex = 1;
	sequenceFlow7.destinationConnectionIndex = 3;
	sequenceFlow7.originBezierVector = {"width":30,"height":0};
	sequenceFlow7.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow7.caseValue = noCase5;   // Note: for this property a default value is defined.

	var noCase6 = microflows.NoCase.create(model);

	var sequenceFlow8 = microflows.SequenceFlow.create(model);
	sequenceFlow8.originConnectionIndex = 1;
	sequenceFlow8.destinationConnectionIndex = 3;
	sequenceFlow8.originBezierVector = {"width":30,"height":0};
	sequenceFlow8.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow8.caseValue = noCase6;   // Note: for this property a default value is defined.

	var noCase7 = microflows.NoCase.create(model);

	var sequenceFlow9 = microflows.SequenceFlow.create(model);
	sequenceFlow9.originConnectionIndex = 1;
	sequenceFlow9.destinationConnectionIndex = 3;
	sequenceFlow9.originBezierVector = {"width":30,"height":0};
	sequenceFlow9.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow9.caseValue = noCase7;   // Note: for this property a default value is defined.

	var voidType1 = datatypes.VoidType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);

	var sUB_Player_Create1 = microflows.Microflow.createIn(unit);
	sUB_Player_Create1.name = "SUB_Player_Create";
	sUB_Player_Create1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	sUB_Player_Create1.flows.push(sequenceFlow1);
	sUB_Player_Create1.flows.push(sequenceFlow2);
	sUB_Player_Create1.flows.push(sequenceFlow3);
	sUB_Player_Create1.flows.push(sequenceFlow4);
	sUB_Player_Create1.flows.push(sequenceFlow5);
	sUB_Player_Create1.flows.push(sequenceFlow6);
	sUB_Player_Create1.flows.push(sequenceFlow7);
	sUB_Player_Create1.flows.push(sequenceFlow8);
	sUB_Player_Create1.flows.push(sequenceFlow9);
	sUB_Player_Create1.microflowReturnType = voidType1;
	sUB_Player_Create1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = actionActivity1;

	sequenceFlow2.origin = actionActivity1;
	sequenceFlow2.destination = actionActivity5;

	sequenceFlow3.origin = exclusiveSplit1;
	sequenceFlow3.destination = actionActivity2;

	sequenceFlow4.origin = actionActivity2;
	sequenceFlow4.destination = actionActivity3;

	sequenceFlow5.origin = exclusiveSplit1;
	sequenceFlow5.destination = actionActivity4;

	sequenceFlow6.origin = actionActivity3;
	sequenceFlow6.destination = endEvent1;

	sequenceFlow7.origin = actionActivity5;
	sequenceFlow7.destination = exclusiveSplit1;

	sequenceFlow8.origin = actionActivity4;
	sequenceFlow8.destination = actionActivity6;

	sequenceFlow9.origin = actionActivity6;
	sequenceFlow9.destination = endEvent2;

})