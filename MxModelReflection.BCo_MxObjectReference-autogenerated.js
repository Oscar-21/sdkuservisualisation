(function (unit, model) {

	/*
	 * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
	 * from unit with id "3ca78bd6-b967-4d99-900c-16ed115aeb91" of type Microflows$Microflow
	 * in working copy "SoccerSquad"
	 * on 20-12-2024.
	 */

	var startEvent1 = microflows.StartEvent.create(model);
	startEvent1.relativeMiddlePoint = {"x":230,"y":395};
	startEvent1.size = {"width":20,"height":20};

	var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
	expressionSplitCondition1.expression = "$MxObjectReference/ReadableName != empty and $MxObjectReference/ReadableName != ''";

	var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
	exclusiveSplit1.relativeMiddlePoint = {"x":335,"y":395};
	exclusiveSplit1.size = {"width":100,"height":60};
	exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
	exclusiveSplit1.caption = "has readable name?";

	var memberChange1 = microflows.MemberChange.create(model);
	memberChange1.attribute = model.findAttributeByQualifiedName("MxModelReflection.MxObjectReference.ReadableName");
	memberChange1.value = "$MxObjectReference/CompleteName";

	var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
	changeObjectAction1.items.push(memberChange1);
	changeObjectAction1.changeVariableName = "MxObjectReference";

	var actionActivity1 = microflows.ActionActivity.create(model);
	actionActivity1.relativeMiddlePoint = {"x":525,"y":395};
	actionActivity1.size = {"width":90,"height":60};
	actionActivity1.action = changeObjectAction1;
	actionActivity1.caption = "Set the readable name";
	actionActivity1.autoGenerateCaption = false;

	var endEvent1 = microflows.EndEvent.create(model);
	endEvent1.relativeMiddlePoint = {"x":625,"y":395};
	endEvent1.size = {"width":20,"height":20};
	endEvent1.returnValue = "true";

	var endEvent2 = microflows.EndEvent.create(model);
	endEvent2.relativeMiddlePoint = {"x":335,"y":515};
	endEvent2.size = {"width":20,"height":20};
	endEvent2.returnValue = "true";

	var objectType1 = datatypes.ObjectType.create(model);
	objectType1.entity = model.findEntityByQualifiedName("MxModelReflection.MxObjectReference");

	var mxObjectReference1 = microflows.MicroflowParameterObject.create(model);
	mxObjectReference1.relativeMiddlePoint = {"x":230,"y":230};
	mxObjectReference1.size = {"width":30,"height":30};
	mxObjectReference1.name = "MxObjectReference";
	mxObjectReference1.variableType = objectType1;   // Note: for this property a default value is defined.

	var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
	microflowObjectCollection1.objects.push(startEvent1);
	microflowObjectCollection1.objects.push(exclusiveSplit1);
	microflowObjectCollection1.objects.push(actionActivity1);
	microflowObjectCollection1.objects.push(endEvent1);
	microflowObjectCollection1.objects.push(endEvent2);
	microflowObjectCollection1.objects.push(mxObjectReference1);

	var noCase1 = microflows.NoCase.create(model);

	var sequenceFlow1 = microflows.SequenceFlow.create(model);
	sequenceFlow1.originConnectionIndex = 1;
	sequenceFlow1.destinationConnectionIndex = 3;
	sequenceFlow1.originBezierVector = {"width":0,"height":0};
	sequenceFlow1.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow1.caseValue = noCase1;   // Note: for this property a default value is defined.

	var noCase2 = microflows.NoCase.create(model);

	var sequenceFlow2 = microflows.SequenceFlow.create(model);
	sequenceFlow2.originConnectionIndex = 1;
	sequenceFlow2.destinationConnectionIndex = 3;
	sequenceFlow2.originBezierVector = {"width":30,"height":0};
	sequenceFlow2.destinationBezierVector = {"width":-15,"height":0};
	sequenceFlow2.caseValue = noCase2;   // Note: for this property a default value is defined.

	var enumerationCase1 = microflows.EnumerationCase.create(model);
	enumerationCase1.value = "false";

	var sequenceFlow3 = microflows.SequenceFlow.create(model);
	sequenceFlow3.originConnectionIndex = 1;
	sequenceFlow3.destinationConnectionIndex = 3;
	sequenceFlow3.originBezierVector = {"width":15,"height":0};
	sequenceFlow3.destinationBezierVector = {"width":-30,"height":0};
	sequenceFlow3.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

	var enumerationCase2 = microflows.EnumerationCase.create(model);
	enumerationCase2.value = "true";

	var sequenceFlow4 = microflows.SequenceFlow.create(model);
	sequenceFlow4.originConnectionIndex = 2;
	sequenceFlow4.originBezierVector = {"width":0,"height":15};
	sequenceFlow4.destinationBezierVector = {"width":0,"height":-15};
	sequenceFlow4.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

	var booleanType1 = datatypes.BooleanType.create(model);

	var translation1 = texts.Translation.create(model);
	translation1.languageCode = "en_US";

	var translation2 = texts.Translation.create(model);
	translation2.languageCode = "en_GB";

	var translation3 = texts.Translation.create(model);
	translation3.languageCode = "en_ZA";

	var text1 = texts.Text.create(model);
	text1.translations.push(translation1);
	text1.translations.push(translation2);
	text1.translations.push(translation3);

	var bCo_MxObjectReference1 = microflows.Microflow.createIn(unit);
	bCo_MxObjectReference1.name = "BCo_MxObjectReference";
	bCo_MxObjectReference1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
	bCo_MxObjectReference1.flows.push(sequenceFlow1);
	bCo_MxObjectReference1.flows.push(sequenceFlow2);
	bCo_MxObjectReference1.flows.push(sequenceFlow3);
	bCo_MxObjectReference1.flows.push(sequenceFlow4);
	bCo_MxObjectReference1.microflowReturnType = booleanType1;
	bCo_MxObjectReference1.concurrencyErrorMessage = text1;   // Note: for this property a default value is defined.

	sequenceFlow1.origin = startEvent1;
	sequenceFlow1.destination = exclusiveSplit1;

	sequenceFlow2.origin = actionActivity1;
	sequenceFlow2.destination = endEvent1;

	sequenceFlow3.origin = exclusiveSplit1;
	sequenceFlow3.destination = actionActivity1;

	sequenceFlow4.origin = exclusiveSplit1;
	sequenceFlow4.destination = endEvent2;

})